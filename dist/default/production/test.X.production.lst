

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 27 15:27:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F2553 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PORTB	set	3969
    56  0000                     _PORTA	set	3968
    57  0000                     _TRISC	set	3988
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISA	set	3986
    60  0000                     _ADCON1	set	4033
    61  0000                     _PORTBbits	set	3969
    62  0000                     _PORTAbits	set	3968
    63  0000                     _PORTC	set	3970
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68  007A02                     __pcinit:
    69                           	opt stack 0
    70  007A02                     start_initialization:
    71                           	opt stack 0
    72  007A02                     __initialization:
    73                           	opt stack 0
    74  007A02                     end_of_initialization:
    75                           	opt stack 0
    76  007A02                     __end_of__initialization:
    77                           	opt stack 0
    78  007A02  0E00               	movlw	low (__Lmediumconst shr (0+16))
    79  007A04  6EF8               	movwf	tblptru,c
    80  007A06  0100               	movlb	0
    81  007A08  EF47  F03F         	goto	_main	;jump to C main() function
    82                           tblptru	equ	0xFF8
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt stack 0
    87  000001                     ?___xxtofl:
    88                           	opt stack 0
    89  000001                     ___xxtofl@val:
    90                           	opt stack 0
    91                           
    92                           ; 4 bytes @ 0x0
    93  000001                     	ds	4
    94  000005                     ??___xxtofl:
    95                           
    96                           ; 1 bytes @ 0x4
    97  000005                     	ds	4
    98  000009                     ___xxtofl@sign:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x8
   102  000009                     	ds	1
   103  00000A                     ___xxtofl@exp:
   104                           	opt stack 0
   105                           
   106                           ; 1 bytes @ 0x9
   107  00000A                     	ds	1
   108  00000B                     ___xxtofl@arg:
   109                           	opt stack 0
   110                           
   111                           ; 4 bytes @ 0xA
   112  00000B                     	ds	4
   113  00000F                     ___flge@ff1:
   114                           	opt stack 0
   115                           
   116                           ; 4 bytes @ 0xE
   117  00000F                     	ds	4
   118  000013                     ___flge@ff2:
   119                           	opt stack 0
   120                           
   121                           ; 4 bytes @ 0x12
   122  000013                     	ds	4
   123  000017                     ??___flge:
   124                           
   125                           ; 1 bytes @ 0x16
   126  000017                     	ds	4
   127  00001B                     wait00@k:
   128                           	opt stack 0
   129                           
   130                           ; 4 bytes @ 0x1A
   131  00001B                     	ds	4
   132  00001F                     wait00@j:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x1E
   136  00001F                     	ds	2
   137  000021                     wait00@i:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x20
   141  000021                     	ds	2
   142  000023                     tblptru	equ	0xFF8
   143                           
   144                           ; 1 bytes @ 0x22
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;; *************** function _main *****************
   149 ;; Defined at:
   150 ;;		line 73 in file "sample.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  2   51[None  ] int 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         0       0       0       0       0       0       0       0       0
   166 ;;      Temps:          0       0       0       0       0       0       0       0       0
   167 ;;      Totals:         0       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        0 bytes
   169 ;; Hardware stack levels required when called:    3
   170 ;; This function calls:
   171 ;;		_do_nothing
   172 ;;		_led_sens
   173 ;;		_left_down
   174 ;;		_right_down
   175 ;;		_small_left_down
   176 ;;		_small_right_down
   177 ;;		_straight
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  007E8E                     __ptext0:
   185                           	opt stack 0
   186  007E8E                     _main:
   187                           	opt stack 28
   188                           
   189                           ;sample.c: 76: ADCON1 = 0x0F;
   190                           
   191                           ;incstack = 0
   192  007E8E  0E0F               	movlw	15
   193  007E90  6EC1               	movwf	4033,c	;volatile
   194                           
   195                           ;sample.c: 79: TRISA = 0x20;
   196  007E92  0E20               	movlw	32
   197  007E94  6E92               	movwf	3986,c	;volatile
   198                           
   199                           ;sample.c: 80: TRISB = 0xFF;
   200  007E96  6893               	setf	3987,c	;volatile
   201                           
   202                           ;sample.c: 81: TRISC = 0x00;
   203  007E98  0E00               	movlw	0
   204  007E9A  6E94               	movwf	3988,c	;volatile
   205                           
   206                           ;sample.c: 84: PORTA = 0x00;
   207  007E9C  0E00               	movlw	0
   208  007E9E  6E80               	movwf	3968,c	;volatile
   209                           
   210                           ;sample.c: 85: PORTB = 0x00;
   211  007EA0  0E00               	movlw	0
   212  007EA2  6E81               	movwf	3969,c	;volatile
   213                           
   214                           ;sample.c: 86: PORTC = 0x00;
   215  007EA4  0E00               	movlw	0
   216  007EA6  6E82               	movwf	3970,c	;volatile
   217                           
   218                           ;sample.c: 89: while(PORTAbits.RA5==1){
   219  007EA8  D002               	goto	l52
   220  007EAA                     
   221                           ;sample.c: 90: led_sens();
   222  007EAA  EC2A  F03D         	call	_led_sens	;wreg free
   223  007EAE                     l52:
   224  007EAE  BA80               	btfsc	3968,5,c	;volatile
   225  007EB0  D7FC               	goto	l53
   226  007EB2                     u440:
   227                           
   228                           ;sample.c: 96: led_sens();
   229                           
   230                           ;sample.c: 91: }
   231                           ;sample.c: 95: while(1){
   232  007EB2  EC2A  F03D         	call	_led_sens	;wreg free
   233                           
   234                           ;sample.c: 98: while (PORTB==0x1f ) straight();
   235  007EB6  D002               	goto	l56
   236  007EB8  EC11  F03D         	call	_straight	;wreg free
   237  007EBC                     l56:
   238  007EBC  0E1F               	movlw	31
   239  007EBE  1881               	xorwf	3969,w,c	;volatile
   240  007EC0  A4D8               	btfss	status,2,c
   241  007EC2  D03C               	goto	l59
   242  007EC4  D7F9               	goto	l57
   243  007EC6                     
   244                           ;sample.c: 102: straight();
   245  007EC6  EC11  F03D         	call	_straight	;wreg free
   246                           
   247                           ;sample.c: 103: break;
   248  007ECA  D7F3               	goto	u440
   249  007ECC                     
   250                           ;sample.c: 105: right_down();
   251  007ECC  EC69  F03D         	call	_right_down	;wreg free
   252                           
   253                           ;sample.c: 106: break;
   254  007ED0  D7F0               	goto	u440
   255  007ED2                     
   256                           ;sample.c: 108: small_right_down();
   257  007ED2  ECB3  F03D         	call	_small_right_down	;wreg free
   258                           
   259                           ;sample.c: 109: break;
   260  007ED6  D7ED               	goto	u440
   261  007ED8                     
   262                           ;sample.c: 111: small_right_down();
   263  007ED8  ECB3  F03D         	call	_small_right_down	;wreg free
   264                           
   265                           ;sample.c: 112: break;
   266  007EDC  D7EA               	goto	u440
   267  007EDE                     
   268                           ;sample.c: 114: straight();
   269  007EDE  EC11  F03D         	call	_straight	;wreg free
   270                           
   271                           ;sample.c: 116: case 0b00101: break;
   272                           
   273                           ;sample.c: 115: break;
   274  007EE2  D7E7               	goto	u440
   275  007EE4                     
   276                           ;sample.c: 118: small_right_down();
   277  007EE4  ECB3  F03D         	call	_small_right_down	;wreg free
   278                           
   279                           ;sample.c: 119: break;
   280  007EE8  D7E4               	goto	u440
   281  007EEA                     
   282                           ;sample.c: 121: small_left_down();
   283  007EEA  EC8E  F03D         	call	_small_left_down	;wreg free
   284                           
   285                           ;sample.c: 122: break;
   286  007EEE  D7E1               	goto	u440
   287  007EF0                     
   288                           ;sample.c: 124: small_left_down();
   289  007EF0  EC8E  F03D         	call	_small_left_down	;wreg free
   290                           
   291                           ;sample.c: 130: case 0b01101: break;
   292                           
   293                           ;sample.c: 129: case 0b01100: break;
   294                           
   295                           ;sample.c: 128: case 0b01011: break;
   296                           
   297                           ;sample.c: 127: case 0b01010: break;
   298                           
   299                           ;sample.c: 126: case 0b01001: break;
   300                           
   301                           ;sample.c: 125: break;
   302  007EF4  D7DE               	goto	u440
   303  007EF6                     
   304                           ;sample.c: 132: straight();
   305  007EF6  EC11  F03D         	call	_straight	;wreg free
   306                           
   307                           ;sample.c: 133: break;
   308  007EFA  D7DB               	goto	u440
   309  007EFC                     
   310                           ;sample.c: 135: left_down();
   311  007EFC  EC44  F03D         	call	_left_down	;wreg free
   312                           
   313                           ;sample.c: 136: break;
   314  007F00  D7D8               	goto	u440
   315  007F02                     
   316                           ;sample.c: 138: left_down();
   317  007F02  EC44  F03D         	call	_left_down	;wreg free
   318                           
   319                           ;sample.c: 139: break;
   320  007F06  D7D5               	goto	u440
   321  007F08                     
   322                           ;sample.c: 141: straight();
   323  007F08  EC11  F03D         	call	_straight	;wreg free
   324                           
   325                           ;sample.c: 147: case 0b10110: break;
   326                           
   327                           ;sample.c: 146: case 0b10101: break;
   328                           
   329                           ;sample.c: 145: case 0b10100: break;
   330                           
   331                           ;sample.c: 144: case 0b10011: break;
   332                           
   333                           ;sample.c: 143: case 0b10010: break;
   334                           
   335                           ;sample.c: 142: break;
   336  007F0C  D7D2               	goto	u440
   337  007F0E                     
   338                           ;sample.c: 149: left_down();
   339  007F0E  EC44  F03D         	call	_left_down	;wreg free
   340                           
   341                           ;sample.c: 150: break;
   342  007F12  D7CF               	goto	u440
   343  007F14                     
   344                           ;sample.c: 152: small_left_down();
   345  007F14  EC8E  F03D         	call	_small_left_down	;wreg free
   346                           
   347                           ;sample.c: 155: case 0b11010: break;
   348                           
   349                           ;sample.c: 154: case 0b11001: break;
   350                           
   351                           ;sample.c: 153: break;
   352  007F18  D7CC               	goto	u440
   353  007F1A                     
   354                           ;sample.c: 157: straight();
   355  007F1A  EC11  F03D         	call	_straight	;wreg free
   356                           
   357                           ;sample.c: 158: break;
   358  007F1E  D7C9               	goto	u440
   359  007F20                     
   360                           ;sample.c: 160: small_right_down();
   361  007F20  ECB3  F03D         	call	_small_right_down	;wreg free
   362                           
   363                           ;sample.c: 161: break;
   364  007F24  D7C6               	goto	u440
   365  007F26                     
   366                           ;sample.c: 163: small_right_down();
   367  007F26  ECB3  F03D         	call	_small_right_down	;wreg free
   368                           
   369                           ;sample.c: 164: break;
   370  007F2A  D7C3               	goto	u440
   371  007F2C                     
   372                           ;sample.c: 166: right_down();
   373  007F2C  EC69  F03D         	call	_right_down	;wreg free
   374  007F30                     l92:
   375                           
   376                           ;sample.c: 168: straight();
   377  007F30  EC11  F03D         	call	_straight	;wreg free
   378                           
   379                           ;sample.c: 169: break;
   380  007F34  D7BE               	goto	u440
   381  007F36                     
   382                           ;sample.c: 171: do_nothing();
   383  007F36  EC06  F03D         	call	_do_nothing	;wreg free
   384                           
   385                           ;sample.c: 173: }
   386                           
   387                           ;sample.c: 172: break;
   388  007F3A  D7BB               	goto	u440
   389  007F3C                     l59:
   390  007F3C  5081               	movf	3969,w,c	;volatile
   391                           
   392                           ; Switch size 1, requested type "space"
   393                           ; Number of cases is 32, Range of values is 0 to 31
   394                           ; switch strategies available:
   395                           ; Name         Instructions Cycles
   396                           ; simple_byte           97    49 (average)
   397                           ;	Chosen strategy is simple_byte
   398  007F3E  0A00               	xorlw	0	; case 0
   399  007F40  B4D8               	btfsc	status,2,c
   400  007F42  D7C1               	goto	l60
   401  007F44  0A01               	xorlw	1	; case 1
   402  007F46  B4D8               	btfsc	status,2,c
   403  007F48  D7C1               	goto	l62
   404  007F4A  0A03               	xorlw	3	; case 2
   405  007F4C  B4D8               	btfsc	status,2,c
   406  007F4E  D7C1               	goto	l63
   407  007F50  0A01               	xorlw	1	; case 3
   408  007F52  B4D8               	btfsc	status,2,c
   409  007F54  D7C1               	goto	l64
   410  007F56  0A07               	xorlw	7	; case 4
   411  007F58  B4D8               	btfsc	status,2,c
   412  007F5A  D7C1               	goto	l65
   413  007F5C  0A01               	xorlw	1	; case 5
   414  007F5E  B4D8               	btfsc	status,2,c
   415  007F60  D7A8               	goto	u440
   416  007F62  0A03               	xorlw	3	; case 6
   417  007F64  B4D8               	btfsc	status,2,c
   418  007F66  D7BE               	goto	l67
   419  007F68  0A01               	xorlw	1	; case 7
   420  007F6A  B4D8               	btfsc	status,2,c
   421  007F6C  D7BE               	goto	l68
   422  007F6E  0A0F               	xorlw	15	; case 8
   423  007F70  B4D8               	btfsc	status,2,c
   424  007F72  D7BE               	goto	l69
   425  007F74  0A01               	xorlw	1	; case 9
   426  007F76  B4D8               	btfsc	status,2,c
   427  007F78  D79C               	goto	u440
   428  007F7A  0A03               	xorlw	3	; case 10
   429  007F7C  B4D8               	btfsc	status,2,c
   430  007F7E  D799               	goto	u440
   431  007F80  0A01               	xorlw	1	; case 11
   432  007F82  B4D8               	btfsc	status,2,c
   433  007F84  D796               	goto	u440
   434  007F86  0A07               	xorlw	7	; case 12
   435  007F88  B4D8               	btfsc	status,2,c
   436  007F8A  D793               	goto	u440
   437  007F8C  0A01               	xorlw	1	; case 13
   438  007F8E  B4D8               	btfsc	status,2,c
   439  007F90  D790               	goto	u440
   440  007F92  0A03               	xorlw	3	; case 14
   441  007F94  B4D8               	btfsc	status,2,c
   442  007F96  D7AF               	goto	l75
   443  007F98  0A01               	xorlw	1	; case 15
   444  007F9A  B4D8               	btfsc	status,2,c
   445  007F9C  D7AF               	goto	l76
   446  007F9E  0A1F               	xorlw	31	; case 16
   447  007FA0  B4D8               	btfsc	status,2,c
   448  007FA2  D7AF               	goto	l77
   449  007FA4  0A01               	xorlw	1	; case 17
   450  007FA6  B4D8               	btfsc	status,2,c
   451  007FA8  D7AF               	goto	l78
   452  007FAA  0A03               	xorlw	3	; case 18
   453  007FAC  B4D8               	btfsc	status,2,c
   454  007FAE  D781               	goto	u440
   455  007FB0  0A01               	xorlw	1	; case 19
   456  007FB2  B4D8               	btfsc	status,2,c
   457  007FB4  D77E               	goto	u440
   458  007FB6  0A07               	xorlw	7	; case 20
   459  007FB8  B4D8               	btfsc	status,2,c
   460  007FBA  D77B               	goto	u440
   461  007FBC  0A01               	xorlw	1	; case 21
   462  007FBE  B4D8               	btfsc	status,2,c
   463  007FC0  D778               	goto	u440
   464  007FC2  0A03               	xorlw	3	; case 22
   465  007FC4  B4D8               	btfsc	status,2,c
   466  007FC6  D775               	goto	u440
   467  007FC8  0A01               	xorlw	1	; case 23
   468  007FCA  B4D8               	btfsc	status,2,c
   469  007FCC  D7A0               	goto	l84
   470  007FCE  0A0F               	xorlw	15	; case 24
   471  007FD0  B4D8               	btfsc	status,2,c
   472  007FD2  D7A0               	goto	l85
   473  007FD4  0A01               	xorlw	1	; case 25
   474  007FD6  B4D8               	btfsc	status,2,c
   475  007FD8  D76C               	goto	u440
   476  007FDA  0A03               	xorlw	3	; case 26
   477  007FDC  B4D8               	btfsc	status,2,c
   478  007FDE  D769               	goto	u440
   479  007FE0  0A01               	xorlw	1	; case 27
   480  007FE2  B4D8               	btfsc	status,2,c
   481  007FE4  D79A               	goto	l88
   482  007FE6  0A07               	xorlw	7	; case 28
   483  007FE8  B4D8               	btfsc	status,2,c
   484  007FEA  D79A               	goto	l89
   485  007FEC  0A01               	xorlw	1	; case 29
   486  007FEE  B4D8               	btfsc	status,2,c
   487  007FF0  D79A               	goto	l90
   488  007FF2  0A03               	xorlw	3	; case 30
   489  007FF4  B4D8               	btfsc	status,2,c
   490  007FF6  D79A               	goto	l91
   491  007FF8  0A01               	xorlw	1	; case 31
   492  007FFA  B4D8               	btfsc	status,2,c
   493  007FFC  D799               	goto	l92
   494  007FFE  D79B               	goto	l93
   495  008000                     __end_of_main:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           status	equ	0xFD8
   499                           
   500 ;; *************** function _straight *****************
   501 ;; Defined at:
   502 ;;		line 53 in file "sample.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  2   40[None  ] int 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       0       0       0       0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; Hardware stack levels required when called:    2
   523 ;; This function calls:
   524 ;;		_wait00
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text1
   531  007A22                     __ptext1:
   532                           	opt stack 0
   533  007A22                     _straight:
   534                           	opt stack 28
   535                           
   536                           ;sample.c: 54: PORTC=0x03;
   537                           
   538                           ;incstack = 0
   539  007A22  0E03               	movlw	3
   540  007A24  6E82               	movwf	3970,c	;volatile
   541                           
   542                           ;sample.c: 55: wait00(8);
   543  007A26  0E00               	movlw	0
   544  007A28  6E1B               	movwf	wait00@k,c
   545  007A2A  0E00               	movlw	0
   546  007A2C  6E1C               	movwf	wait00@k+1,c
   547  007A2E  0E00               	movlw	0
   548  007A30  6E1D               	movwf	wait00@k+2,c
   549  007A32  0E41               	movlw	65
   550  007A34  6E1E               	movwf	wait00@k+3,c
   551  007A36  ECD8  F03D         	call	_wait00	;wreg free
   552                           
   553                           ;sample.c: 56: PORTC=0x00;
   554  007A3A  0E00               	movlw	0
   555  007A3C  6E82               	movwf	3970,c	;volatile
   556                           
   557                           ;sample.c: 57: wait00(20);
   558  007A3E  0E00               	movlw	0
   559  007A40  6E1B               	movwf	wait00@k,c
   560  007A42  0E00               	movlw	0
   561  007A44  6E1C               	movwf	wait00@k+1,c
   562  007A46  0EA0               	movlw	160
   563  007A48  6E1D               	movwf	wait00@k+2,c
   564  007A4A  0E41               	movlw	65
   565  007A4C  6E1E               	movwf	wait00@k+3,c
   566  007A4E  ECD8  F03D         	call	_wait00	;wreg free
   567  007A52  0012               	return		;funcret
   568  007A54                     __end_of_straight:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           status	equ	0xFD8
   572                           
   573 ;; *************** function _small_right_down *****************
   574 ;; Defined at:
   575 ;;		line 26 in file "sample.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  2   31[None  ] int 
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    2
   596 ;; This function calls:
   597 ;;		_wait00
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text2
   604  007B66                     __ptext2:
   605                           	opt stack 0
   606  007B66                     _small_right_down:
   607                           	opt stack 28
   608                           
   609                           ;sample.c: 27: PORTC=0x03;
   610                           
   611                           ;incstack = 0
   612  007B66  0E03               	movlw	3
   613  007B68  6E82               	movwf	3970,c	;volatile
   614                           
   615                           ;sample.c: 28: wait00(0.3);
   616  007B6A  0E9A               	movlw	154
   617  007B6C  6E1B               	movwf	wait00@k,c
   618  007B6E  0E99               	movlw	153
   619  007B70  6E1C               	movwf	wait00@k+1,c
   620  007B72  0E99               	movlw	153
   621  007B74  6E1D               	movwf	wait00@k+2,c
   622  007B76  0E3E               	movlw	62
   623  007B78  6E1E               	movwf	wait00@k+3,c
   624  007B7A  ECD8  F03D         	call	_wait00	;wreg free
   625                           
   626                           ;sample.c: 29: PORTC=0x01;
   627  007B7E  0E01               	movlw	1
   628  007B80  6E82               	movwf	3970,c	;volatile
   629                           
   630                           ;sample.c: 30: wait00(2);
   631  007B82  0E00               	movlw	0
   632  007B84  6E1B               	movwf	wait00@k,c
   633  007B86  0E00               	movlw	0
   634  007B88  6E1C               	movwf	wait00@k+1,c
   635  007B8A  0E00               	movlw	0
   636  007B8C  6E1D               	movwf	wait00@k+2,c
   637  007B8E  0E40               	movlw	64
   638  007B90  6E1E               	movwf	wait00@k+3,c
   639  007B92  ECD8  F03D         	call	_wait00	;wreg free
   640                           
   641                           ;sample.c: 31: PORTC=0x00;
   642  007B96  0E00               	movlw	0
   643  007B98  6E82               	movwf	3970,c	;volatile
   644                           
   645                           ;sample.c: 32: wait00(20);
   646  007B9A  0E00               	movlw	0
   647  007B9C  6E1B               	movwf	wait00@k,c
   648  007B9E  0E00               	movlw	0
   649  007BA0  6E1C               	movwf	wait00@k+1,c
   650  007BA2  0EA0               	movlw	160
   651  007BA4  6E1D               	movwf	wait00@k+2,c
   652  007BA6  0E41               	movlw	65
   653  007BA8  6E1E               	movwf	wait00@k+3,c
   654  007BAA  ECD8  F03D         	call	_wait00	;wreg free
   655  007BAE  0012               	return		;funcret
   656  007BB0                     __end_of_small_right_down:
   657                           	opt stack 0
   658                           tblptru	equ	0xFF8
   659                           status	equ	0xFD8
   660                           
   661 ;; *************** function _small_left_down *****************
   662 ;; Defined at:
   663 ;;		line 44 in file "sample.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  2   37[None  ] int 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_wait00
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text3
   692  007B1C                     __ptext3:
   693                           	opt stack 0
   694  007B1C                     _small_left_down:
   695                           	opt stack 28
   696                           
   697                           ;sample.c: 45: PORTC=0x03;
   698                           
   699                           ;incstack = 0
   700  007B1C  0E03               	movlw	3
   701  007B1E  6E82               	movwf	3970,c	;volatile
   702                           
   703                           ;sample.c: 46: wait00(0.3);
   704  007B20  0E9A               	movlw	154
   705  007B22  6E1B               	movwf	wait00@k,c
   706  007B24  0E99               	movlw	153
   707  007B26  6E1C               	movwf	wait00@k+1,c
   708  007B28  0E99               	movlw	153
   709  007B2A  6E1D               	movwf	wait00@k+2,c
   710  007B2C  0E3E               	movlw	62
   711  007B2E  6E1E               	movwf	wait00@k+3,c
   712  007B30  ECD8  F03D         	call	_wait00	;wreg free
   713                           
   714                           ;sample.c: 47: PORTC=0x02;
   715  007B34  0E02               	movlw	2
   716  007B36  6E82               	movwf	3970,c	;volatile
   717                           
   718                           ;sample.c: 48: wait00(2);
   719  007B38  0E00               	movlw	0
   720  007B3A  6E1B               	movwf	wait00@k,c
   721  007B3C  0E00               	movlw	0
   722  007B3E  6E1C               	movwf	wait00@k+1,c
   723  007B40  0E00               	movlw	0
   724  007B42  6E1D               	movwf	wait00@k+2,c
   725  007B44  0E40               	movlw	64
   726  007B46  6E1E               	movwf	wait00@k+3,c
   727  007B48  ECD8  F03D         	call	_wait00	;wreg free
   728                           
   729                           ;sample.c: 49: PORTC=0x00;
   730  007B4C  0E00               	movlw	0
   731  007B4E  6E82               	movwf	3970,c	;volatile
   732                           
   733                           ;sample.c: 50: wait00(20);
   734  007B50  0E00               	movlw	0
   735  007B52  6E1B               	movwf	wait00@k,c
   736  007B54  0E00               	movlw	0
   737  007B56  6E1C               	movwf	wait00@k+1,c
   738  007B58  0EA0               	movlw	160
   739  007B5A  6E1D               	movwf	wait00@k+2,c
   740  007B5C  0E41               	movlw	65
   741  007B5E  6E1E               	movwf	wait00@k+3,c
   742  007B60  ECD8  F03D         	call	_wait00	;wreg free
   743  007B64  0012               	return		;funcret
   744  007B66                     __end_of_small_left_down:
   745                           	opt stack 0
   746                           tblptru	equ	0xFF8
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function _right_down *****************
   750 ;; Defined at:
   751 ;;		line 17 in file "sample.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  2   28[None  ] int 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		_wait00
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text4
   780  007AD2                     __ptext4:
   781                           	opt stack 0
   782  007AD2                     _right_down:
   783                           	opt stack 28
   784                           
   785                           ;sample.c: 18: PORTC=0x03;
   786                           
   787                           ;incstack = 0
   788  007AD2  0E03               	movlw	3
   789  007AD4  6E82               	movwf	3970,c	;volatile
   790                           
   791                           ;sample.c: 19: wait00(0.3);
   792  007AD6  0E9A               	movlw	154
   793  007AD8  6E1B               	movwf	wait00@k,c
   794  007ADA  0E99               	movlw	153
   795  007ADC  6E1C               	movwf	wait00@k+1,c
   796  007ADE  0E99               	movlw	153
   797  007AE0  6E1D               	movwf	wait00@k+2,c
   798  007AE2  0E3E               	movlw	62
   799  007AE4  6E1E               	movwf	wait00@k+3,c
   800  007AE6  ECD8  F03D         	call	_wait00	;wreg free
   801                           
   802                           ;sample.c: 20: PORTC=0x01;
   803  007AEA  0E01               	movlw	1
   804  007AEC  6E82               	movwf	3970,c	;volatile
   805                           
   806                           ;sample.c: 21: wait00(5);
   807  007AEE  0E00               	movlw	0
   808  007AF0  6E1B               	movwf	wait00@k,c
   809  007AF2  0E00               	movlw	0
   810  007AF4  6E1C               	movwf	wait00@k+1,c
   811  007AF6  0EA0               	movlw	160
   812  007AF8  6E1D               	movwf	wait00@k+2,c
   813  007AFA  0E40               	movlw	64
   814  007AFC  6E1E               	movwf	wait00@k+3,c
   815  007AFE  ECD8  F03D         	call	_wait00	;wreg free
   816                           
   817                           ;sample.c: 22: PORTC=0x00;
   818  007B02  0E00               	movlw	0
   819  007B04  6E82               	movwf	3970,c	;volatile
   820                           
   821                           ;sample.c: 23: wait00(20);
   822  007B06  0E00               	movlw	0
   823  007B08  6E1B               	movwf	wait00@k,c
   824  007B0A  0E00               	movlw	0
   825  007B0C  6E1C               	movwf	wait00@k+1,c
   826  007B0E  0EA0               	movlw	160
   827  007B10  6E1D               	movwf	wait00@k+2,c
   828  007B12  0E41               	movlw	65
   829  007B14  6E1E               	movwf	wait00@k+3,c
   830  007B16  ECD8  F03D         	call	_wait00	;wreg free
   831  007B1A  0012               	return		;funcret
   832  007B1C                     __end_of_right_down:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           status	equ	0xFD8
   836                           
   837 ;; *************** function _left_down *****************
   838 ;; Defined at:
   839 ;;		line 35 in file "sample.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  2   34[None  ] int 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   853 ;;      Params:         0       0       0       0       0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		_wait00
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text5
   868  007A88                     __ptext5:
   869                           	opt stack 0
   870  007A88                     _left_down:
   871                           	opt stack 28
   872                           
   873                           ;sample.c: 36: PORTC=0x03;
   874                           
   875                           ;incstack = 0
   876  007A88  0E03               	movlw	3
   877  007A8A  6E82               	movwf	3970,c	;volatile
   878                           
   879                           ;sample.c: 37: wait00(0.3);
   880  007A8C  0E9A               	movlw	154
   881  007A8E  6E1B               	movwf	wait00@k,c
   882  007A90  0E99               	movlw	153
   883  007A92  6E1C               	movwf	wait00@k+1,c
   884  007A94  0E99               	movlw	153
   885  007A96  6E1D               	movwf	wait00@k+2,c
   886  007A98  0E3E               	movlw	62
   887  007A9A  6E1E               	movwf	wait00@k+3,c
   888  007A9C  ECD8  F03D         	call	_wait00	;wreg free
   889                           
   890                           ;sample.c: 38: PORTC=0x02;
   891  007AA0  0E02               	movlw	2
   892  007AA2  6E82               	movwf	3970,c	;volatile
   893                           
   894                           ;sample.c: 39: wait00(5);
   895  007AA4  0E00               	movlw	0
   896  007AA6  6E1B               	movwf	wait00@k,c
   897  007AA8  0E00               	movlw	0
   898  007AAA  6E1C               	movwf	wait00@k+1,c
   899  007AAC  0EA0               	movlw	160
   900  007AAE  6E1D               	movwf	wait00@k+2,c
   901  007AB0  0E40               	movlw	64
   902  007AB2  6E1E               	movwf	wait00@k+3,c
   903  007AB4  ECD8  F03D         	call	_wait00	;wreg free
   904                           
   905                           ;sample.c: 40: PORTC=0x00;
   906  007AB8  0E00               	movlw	0
   907  007ABA  6E82               	movwf	3970,c	;volatile
   908                           
   909                           ;sample.c: 41: wait00(20);
   910  007ABC  0E00               	movlw	0
   911  007ABE  6E1B               	movwf	wait00@k,c
   912  007AC0  0E00               	movlw	0
   913  007AC2  6E1C               	movwf	wait00@k+1,c
   914  007AC4  0EA0               	movlw	160
   915  007AC6  6E1D               	movwf	wait00@k+2,c
   916  007AC8  0E41               	movlw	65
   917  007ACA  6E1E               	movwf	wait00@k+3,c
   918  007ACC  ECD8  F03D         	call	_wait00	;wreg free
   919  007AD0  0012               	return		;funcret
   920  007AD2                     __end_of_left_down:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _led_sens *****************
   926 ;; Defined at:
   927 ;;		line 64 in file "sample.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2   46[None  ] int 
   934 ;; Registers used:
   935 ;;		None
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   941 ;;      Params:         0       0       0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text6
   955  007A54                     __ptext6:
   956                           	opt stack 0
   957  007A54                     _led_sens:
   958                           	opt stack 30
   959                           
   960                           ;sample.c: 66: PORTAbits.RA0 = PORTBbits.RB0;
   961                           
   962                           ;incstack = 0
   963  007A54  A081               	btfss	3969,0,c	;volatile
   964  007A56  D002               	bra	u195
   965  007A58  8080               	bsf	3968,0,c	;volatile
   966  007A5A  D001               	bra	u197
   967  007A5C                     u195:
   968  007A5C  9080               	bcf	3968,0,c	;volatile
   969  007A5E                     u197:
   970                           
   971                           ;sample.c: 67: PORTAbits.RA1 = PORTBbits.RB1;
   972  007A5E  A281               	btfss	3969,1,c	;volatile
   973  007A60  D002               	bra	u205
   974  007A62  8280               	bsf	3968,1,c	;volatile
   975  007A64  D001               	bra	u207
   976  007A66                     u205:
   977  007A66  9280               	bcf	3968,1,c	;volatile
   978  007A68                     u207:
   979                           
   980                           ;sample.c: 68: PORTAbits.RA2 = PORTBbits.RB2;
   981  007A68  A481               	btfss	3969,2,c	;volatile
   982  007A6A  D002               	bra	u215
   983  007A6C  8480               	bsf	3968,2,c	;volatile
   984  007A6E  D001               	bra	u217
   985  007A70                     u215:
   986  007A70  9480               	bcf	3968,2,c	;volatile
   987  007A72                     u217:
   988                           
   989                           ;sample.c: 69: PORTAbits.RA3 = PORTBbits.RB3;
   990  007A72  A681               	btfss	3969,3,c	;volatile
   991  007A74  D002               	bra	u225
   992  007A76  8680               	bsf	3968,3,c	;volatile
   993  007A78  D001               	bra	u227
   994  007A7A                     u225:
   995  007A7A  9680               	bcf	3968,3,c	;volatile
   996  007A7C                     u227:
   997                           
   998                           ;sample.c: 70: PORTAbits.RA4 = PORTBbits.RB4;
   999  007A7C  A881               	btfss	3969,4,c	;volatile
  1000  007A7E  D002               	bra	u235
  1001  007A80  8880               	bsf	3968,4,c	;volatile
  1002  007A82  D001               	bra	u237
  1003  007A84                     u235:
  1004  007A84  9880               	bcf	3968,4,c	;volatile
  1005  007A86                     u237:
  1006  007A86  0012               	return		;funcret
  1007  007A88                     __end_of_led_sens:
  1008                           	opt stack 0
  1009                           tblptru	equ	0xFF8
  1010                           status	equ	0xFD8
  1011                           
  1012 ;; *************** function _do_nothing *****************
  1013 ;; Defined at:
  1014 ;;		line 60 in file "sample.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2   43[None  ] int 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    2
  1035 ;; This function calls:
  1036 ;;		_wait00
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text7
  1043  007A0C                     __ptext7:
  1044                           	opt stack 0
  1045  007A0C                     _do_nothing:
  1046                           	opt stack 28
  1047                           
  1048                           ;sample.c: 61: wait00(50);
  1049                           
  1050                           ;incstack = 0
  1051  007A0C  0E00               	movlw	0
  1052  007A0E  6E1B               	movwf	wait00@k,c
  1053  007A10  0E00               	movlw	0
  1054  007A12  6E1C               	movwf	wait00@k+1,c
  1055  007A14  0E48               	movlw	72
  1056  007A16  6E1D               	movwf	wait00@k+2,c
  1057  007A18  0E42               	movlw	66
  1058  007A1A  6E1E               	movwf	wait00@k+3,c
  1059  007A1C  ECD8  F03D         	call	_wait00	;wreg free
  1060  007A20  0012               	return		;funcret
  1061  007A22                     __end_of_do_nothing:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function _wait00 *****************
  1067 ;; Defined at:
  1068 ;;		line 6 in file "sample.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  k               4   26[COMRAM] float 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  i               2   32[COMRAM] short 
  1073 ;;  j               2   30[COMRAM] short 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2   26[COMRAM] int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         4       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        8 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    1
  1090 ;; This function calls:
  1091 ;;		___flge
  1092 ;;		___xxtofl
  1093 ;; This function is called by:
  1094 ;;		_right_down
  1095 ;;		_small_right_down
  1096 ;;		_left_down
  1097 ;;		_small_left_down
  1098 ;;		_straight
  1099 ;;		_do_nothing
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text8
  1104  007BB0                     __ptext8:
  1105                           	opt stack 0
  1106  007BB0                     _wait00:
  1107                           	opt stack 28
  1108                           
  1109                           ;sample.c: 9: short i;
  1110                           ;sample.c: 10: short j;
  1111                           ;sample.c: 11: for(j=0;j<k;j++){
  1112                           
  1113                           ;incstack = 0
  1114  007BB0  0E00               	movlw	0
  1115  007BB2  6E20               	movwf	wait00@j+1,c
  1116  007BB4  0E00               	movlw	0
  1117  007BB6  6E1F               	movwf	wait00@j,c
  1118  007BB8  D011               	goto	l21
  1119  007BBA                     
  1120                           ;sample.c: 12: for(i=0;i<3000;i++){
  1121  007BBA  0E00               	movlw	0
  1122  007BBC  6E22               	movwf	wait00@i+1,c
  1123  007BBE  0E00               	movlw	0
  1124  007BC0  6E21               	movwf	wait00@i,c
  1125  007BC2                     l988:
  1126  007BC2  BE22               	btfsc	wait00@i+1,7,c
  1127  007BC4  D006               	goto	l23
  1128  007BC6  0EB8               	movlw	184
  1129  007BC8  5C21               	subwf	wait00@i,w,c
  1130  007BCA  0E0B               	movlw	11
  1131  007BCC  5822               	subwfb	wait00@i+1,w,c
  1132  007BCE  B0D8               	btfsc	status,0,c
  1133  007BD0  D003               	goto	u420
  1134  007BD2                     l23:
  1135  007BD2  4A21               	infsnz	wait00@i,f,c
  1136  007BD4  2A22               	incf	wait00@i+1,f,c
  1137  007BD6  D7F5               	goto	l988
  1138  007BD8                     u420:
  1139  007BD8  4A1F               	infsnz	wait00@j,f,c
  1140  007BDA  2A20               	incf	wait00@j+1,f,c
  1141  007BDC                     l21:
  1142  007BDC  C01F  F001         	movff	wait00@j,___xxtofl@val
  1143  007BE0  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1144  007BE4  0E00               	movlw	0
  1145  007BE6  BE02               	btfsc	___xxtofl@val+1,7,c
  1146  007BE8  0EFF               	movlw	-1
  1147  007BEA  6E03               	movwf	___xxtofl@val+2,c
  1148  007BEC  6E04               	movwf	___xxtofl@val+3,c
  1149  007BEE  0E01               	movlw	1
  1150  007BF0  EC9F  F03E         	call	___xxtofl
  1151  007BF4  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1152  007BF8  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1153  007BFC  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1154  007C00  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1155  007C04  C01B  F013         	movff	wait00@k,___flge@ff2
  1156  007C08  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1157  007C0C  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1158  007C10  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1159  007C14  EC0F  F03E         	call	___flge	;wreg free
  1160  007C18  B0D8               	btfsc	status,0,c
  1161  007C1A  0012               	return	
  1162  007C1C  D7CE               	goto	l22
  1163  007C1E                     __end_of_wait00:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function ___xxtofl *****************
  1169 ;; Defined at:
  1170 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  sign            1    wreg     unsigned char 
  1173 ;;  val             4    0[COMRAM] long 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  sign            1    8[COMRAM] unsigned char 
  1176 ;;  arg             4   10[COMRAM] unsigned long 
  1177 ;;  exp             1    9[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  4    0[COMRAM] unsigned char 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1187 ;;      Params:         4       0       0       0       0       0       0       0       0
  1188 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1189 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1190 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1191 ;;Total ram usage:       14 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_wait00
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text9
  1201  007D3E                     __ptext9:
  1202                           	opt stack 0
  1203  007D3E                     ___xxtofl:
  1204                           	opt stack 28
  1205                           
  1206                           ;incstack = 0
  1207                           ;___xxtofl@sign stored from wreg
  1208  007D3E  6E09               	movwf	___xxtofl@sign,c
  1209  007D40  5009               	movf	___xxtofl@sign,w,c
  1210  007D42  A4D8               	btfss	status,2,c
  1211  007D44  AE04               	btfss	___xxtofl@val+3,7,c
  1212  007D46  D01A               	goto	l644
  1213  007D48  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1214  007D4C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1215  007D50  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1216  007D54  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1217  007D58  1E05               	comf	??___xxtofl,f,c
  1218  007D5A  1E06               	comf	??___xxtofl+1,f,c
  1219  007D5C  1E07               	comf	??___xxtofl+2,f,c
  1220  007D5E  1E08               	comf	??___xxtofl+3,f,c
  1221  007D60  2A05               	incf	??___xxtofl,f,c
  1222  007D62  0E00               	movlw	0
  1223  007D64  2206               	addwfc	??___xxtofl+1,f,c
  1224  007D66  2207               	addwfc	??___xxtofl+2,f,c
  1225  007D68  2208               	addwfc	??___xxtofl+3,f,c
  1226  007D6A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1227  007D6E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1228  007D72  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1229  007D76  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1230  007D7A  D008               	goto	l645
  1231  007D7C                     l644:
  1232  007D7C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1233  007D80  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1234  007D84  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1235  007D88  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1236  007D8C                     l645:
  1237  007D8C  5001               	movf	___xxtofl@val,w,c
  1238  007D8E  1002               	iorwf	___xxtofl@val+1,w,c
  1239  007D90  1003               	iorwf	___xxtofl@val+2,w,c
  1240  007D92  1004               	iorwf	___xxtofl@val+3,w,c
  1241  007D94  A4D8               	btfss	status,2,c
  1242  007D96  D009               	goto	l646
  1243  007D98  0E00               	movlw	0
  1244  007D9A  6E01               	movwf	?___xxtofl,c
  1245  007D9C  0E00               	movlw	0
  1246  007D9E  6E02               	movwf	?___xxtofl+1,c
  1247  007DA0  0E00               	movlw	0
  1248  007DA2  6E03               	movwf	?___xxtofl+2,c
  1249  007DA4  0E00               	movlw	0
  1250  007DA6  6E04               	movwf	?___xxtofl+3,c
  1251  007DA8  0012               	return	
  1252  007DAA                     l646:
  1253  007DAA  0E96               	movlw	150
  1254  007DAC  6E0A               	movwf	___xxtofl@exp,c
  1255  007DAE  D006               	goto	l648
  1256  007DB0  2A0A               	incf	___xxtofl@exp,f,c
  1257  007DB2  90D8               	bcf	status,0,c
  1258  007DB4  320E               	rrcf	___xxtofl@arg+3,f,c
  1259  007DB6  320D               	rrcf	___xxtofl@arg+2,f,c
  1260  007DB8  320C               	rrcf	___xxtofl@arg+1,f,c
  1261  007DBA  320B               	rrcf	___xxtofl@arg,f,c
  1262  007DBC                     l648:
  1263  007DBC  0E00               	movlw	0
  1264  007DBE  140B               	andwf	___xxtofl@arg,w,c
  1265  007DC0  6E05               	movwf	??___xxtofl& (0+255),c
  1266  007DC2  0E00               	movlw	0
  1267  007DC4  140C               	andwf	___xxtofl@arg+1,w,c
  1268  007DC6  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1269  007DC8  0E00               	movlw	0
  1270  007DCA  140D               	andwf	___xxtofl@arg+2,w,c
  1271  007DCC  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1272  007DCE  0EFE               	movlw	254
  1273  007DD0  140E               	andwf	___xxtofl@arg+3,w,c
  1274  007DD2  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1275  007DD4  5005               	movf	??___xxtofl,w,c
  1276  007DD6  1006               	iorwf	??___xxtofl+1,w,c
  1277  007DD8  1007               	iorwf	??___xxtofl+2,w,c
  1278  007DDA  1008               	iorwf	??___xxtofl+3,w,c
  1279  007DDC  B4D8               	btfsc	status,2,c
  1280  007DDE  D00D               	goto	l651
  1281  007DE0  D7E7               	goto	l649
  1282  007DE2  2A0A               	incf	___xxtofl@exp,f,c
  1283  007DE4  0E01               	movlw	1
  1284  007DE6  260B               	addwf	___xxtofl@arg,f,c
  1285  007DE8  0E00               	movlw	0
  1286  007DEA  220C               	addwfc	___xxtofl@arg+1,f,c
  1287  007DEC  220D               	addwfc	___xxtofl@arg+2,f,c
  1288  007DEE  220E               	addwfc	___xxtofl@arg+3,f,c
  1289  007DF0  90D8               	bcf	status,0,c
  1290  007DF2  320E               	rrcf	___xxtofl@arg+3,f,c
  1291  007DF4  320D               	rrcf	___xxtofl@arg+2,f,c
  1292  007DF6  320C               	rrcf	___xxtofl@arg+1,f,c
  1293  007DF8  320B               	rrcf	___xxtofl@arg,f,c
  1294  007DFA                     l651:
  1295  007DFA  0E00               	movlw	0
  1296  007DFC  140B               	andwf	___xxtofl@arg,w,c
  1297  007DFE  6E05               	movwf	??___xxtofl& (0+255),c
  1298  007E00  0E00               	movlw	0
  1299  007E02  140C               	andwf	___xxtofl@arg+1,w,c
  1300  007E04  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1301  007E06  0E00               	movlw	0
  1302  007E08  140D               	andwf	___xxtofl@arg+2,w,c
  1303  007E0A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1304  007E0C  0EFF               	movlw	255
  1305  007E0E  140E               	andwf	___xxtofl@arg+3,w,c
  1306  007E10  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1307  007E12  5005               	movf	??___xxtofl,w,c
  1308  007E14  1006               	iorwf	??___xxtofl+1,w,c
  1309  007E16  1007               	iorwf	??___xxtofl+2,w,c
  1310  007E18  1008               	iorwf	??___xxtofl+3,w,c
  1311  007E1A  B4D8               	btfsc	status,2,c
  1312  007E1C  D007               	goto	l654
  1313  007E1E  D7E1               	goto	l652
  1314  007E20  060A               	decf	___xxtofl@exp,f,c
  1315  007E22  90D8               	bcf	status,0,c
  1316  007E24  360B               	rlcf	___xxtofl@arg,f,c
  1317  007E26  360C               	rlcf	___xxtofl@arg+1,f,c
  1318  007E28  360D               	rlcf	___xxtofl@arg+2,f,c
  1319  007E2A  360E               	rlcf	___xxtofl@arg+3,f,c
  1320  007E2C                     l654:
  1321  007E2C  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1322  007E2E  D003               	goto	u370
  1323  007E30  0E02               	movlw	2
  1324  007E32  600A               	cpfslt	___xxtofl@exp,c
  1325  007E34  D7F5               	goto	l655
  1326  007E36                     u370:
  1327  007E36  B00A               	btfsc	___xxtofl@exp,0,c
  1328  007E38  D008               	goto	l659
  1329  007E3A  0EFF               	movlw	255
  1330  007E3C  160B               	andwf	___xxtofl@arg,f,c
  1331  007E3E  0EFF               	movlw	255
  1332  007E40  160C               	andwf	___xxtofl@arg+1,f,c
  1333  007E42  0E7F               	movlw	127
  1334  007E44  160D               	andwf	___xxtofl@arg+2,f,c
  1335  007E46  0EFF               	movlw	255
  1336  007E48  160E               	andwf	___xxtofl@arg+3,f,c
  1337  007E4A                     l659:
  1338  007E4A  90D8               	bcf	status,0,c
  1339  007E4C  320A               	rrcf	___xxtofl@exp,f,c
  1340  007E4E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1341  007E52  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1342  007E54  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1343  007E56  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1344  007E58  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1345  007E5C  6A07               	clrf	??___xxtofl+2,c
  1346  007E5E  6A06               	clrf	??___xxtofl+1,c
  1347  007E60  6A05               	clrf	??___xxtofl,c
  1348  007E62  5005               	movf	??___xxtofl,w,c
  1349  007E64  120B               	iorwf	___xxtofl@arg,f,c
  1350  007E66  5006               	movf	??___xxtofl+1,w,c
  1351  007E68  120C               	iorwf	___xxtofl@arg+1,f,c
  1352  007E6A  5007               	movf	??___xxtofl+2,w,c
  1353  007E6C  120D               	iorwf	___xxtofl@arg+2,f,c
  1354  007E6E  5008               	movf	??___xxtofl+3,w,c
  1355  007E70  120E               	iorwf	___xxtofl@arg+3,f,c
  1356  007E72  5009               	movf	___xxtofl@sign,w,c
  1357  007E74  A4D8               	btfss	status,2,c
  1358  007E76  AE04               	btfss	___xxtofl@val+3,7,c
  1359  007E78  D001               	goto	l660
  1360  007E7A  8E0E               	bsf	___xxtofl@arg+3,7,c
  1361  007E7C                     l660:
  1362  007E7C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1363  007E80  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1364  007E84  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1365  007E88  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1366  007E8C  0012               	return	
  1367  007E8E                     __end_of___xxtofl:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function ___flge *****************
  1373 ;; Defined at:
  1374 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  ff1             4   14[COMRAM] unsigned char 
  1377 ;;  ff2             4   18[COMRAM] unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;		None               void
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1389 ;;      Params:         8       0       0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1392 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1393 ;;Total ram usage:       12 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_wait00
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text10
  1403  007C1E                     __ptext10:
  1404                           	opt stack 0
  1405  007C1E                     ___flge:
  1406                           	opt stack 28
  1407                           
  1408                           ;incstack = 0
  1409  007C1E  0E00               	movlw	0
  1410  007C20  140F               	andwf	___flge@ff1,w,c
  1411  007C22  6E17               	movwf	??___flge& (0+255),c
  1412  007C24  0E00               	movlw	0
  1413  007C26  1410               	andwf	___flge@ff1+1,w,c
  1414  007C28  6E18               	movwf	(??___flge+1)& (0+255),c
  1415  007C2A  0E80               	movlw	128
  1416  007C2C  1411               	andwf	___flge@ff1+2,w,c
  1417  007C2E  6E19               	movwf	(??___flge+2)& (0+255),c
  1418  007C30  0E7F               	movlw	127
  1419  007C32  1412               	andwf	___flge@ff1+3,w,c
  1420  007C34  6E1A               	movwf	(??___flge+3)& (0+255),c
  1421  007C36  5017               	movf	??___flge,w,c
  1422  007C38  1018               	iorwf	??___flge+1,w,c
  1423  007C3A  1019               	iorwf	??___flge+2,w,c
  1424  007C3C  101A               	iorwf	??___flge+3,w,c
  1425  007C3E  A4D8               	btfss	status,2,c
  1426  007C40  D008               	goto	l296
  1427  007C42  0E00               	movlw	0
  1428  007C44  6E0F               	movwf	___flge@ff1,c
  1429  007C46  0E00               	movlw	0
  1430  007C48  6E10               	movwf	___flge@ff1+1,c
  1431  007C4A  0E00               	movlw	0
  1432  007C4C  6E11               	movwf	___flge@ff1+2,c
  1433  007C4E  0E00               	movlw	0
  1434  007C50  6E12               	movwf	___flge@ff1+3,c
  1435  007C52                     l296:
  1436  007C52  0E00               	movlw	0
  1437  007C54  1413               	andwf	___flge@ff2,w,c
  1438  007C56  6E17               	movwf	??___flge& (0+255),c
  1439  007C58  0E00               	movlw	0
  1440  007C5A  1414               	andwf	___flge@ff2+1,w,c
  1441  007C5C  6E18               	movwf	(??___flge+1)& (0+255),c
  1442  007C5E  0E80               	movlw	128
  1443  007C60  1415               	andwf	___flge@ff2+2,w,c
  1444  007C62  6E19               	movwf	(??___flge+2)& (0+255),c
  1445  007C64  0E7F               	movlw	127
  1446  007C66  1416               	andwf	___flge@ff2+3,w,c
  1447  007C68  6E1A               	movwf	(??___flge+3)& (0+255),c
  1448  007C6A  5017               	movf	??___flge,w,c
  1449  007C6C  1018               	iorwf	??___flge+1,w,c
  1450  007C6E  1019               	iorwf	??___flge+2,w,c
  1451  007C70  101A               	iorwf	??___flge+3,w,c
  1452  007C72  A4D8               	btfss	status,2,c
  1453  007C74  D008               	goto	l297
  1454  007C76  0E00               	movlw	0
  1455  007C78  6E13               	movwf	___flge@ff2,c
  1456  007C7A  0E00               	movlw	0
  1457  007C7C  6E14               	movwf	___flge@ff2+1,c
  1458  007C7E  0E00               	movlw	0
  1459  007C80  6E15               	movwf	___flge@ff2+2,c
  1460  007C82  0E00               	movlw	0
  1461  007C84  6E16               	movwf	___flge@ff2+3,c
  1462  007C86                     l297:
  1463  007C86  AE12               	btfss	___flge@ff1+3,7,c
  1464  007C88  D01D               	goto	l298
  1465  007C8A  C00F  F017         	movff	___flge@ff1,??___flge
  1466  007C8E  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1467  007C92  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1468  007C96  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1469  007C9A  1E17               	comf	??___flge,f,c
  1470  007C9C  1E18               	comf	??___flge+1,f,c
  1471  007C9E  1E19               	comf	??___flge+2,f,c
  1472  007CA0  1E1A               	comf	??___flge+3,f,c
  1473  007CA2  2A17               	incf	??___flge,f,c
  1474  007CA4  0E00               	movlw	0
  1475  007CA6  2218               	addwfc	??___flge+1,f,c
  1476  007CA8  2219               	addwfc	??___flge+2,f,c
  1477  007CAA  221A               	addwfc	??___flge+3,f,c
  1478  007CAC  0E00               	movlw	0
  1479  007CAE  2417               	addwf	??___flge,w,c
  1480  007CB0  6E0F               	movwf	___flge@ff1,c
  1481  007CB2  0E00               	movlw	0
  1482  007CB4  2018               	addwfc	??___flge+1,w,c
  1483  007CB6  6E10               	movwf	___flge@ff1+1,c
  1484  007CB8  0E00               	movlw	0
  1485  007CBA  2019               	addwfc	??___flge+2,w,c
  1486  007CBC  6E11               	movwf	___flge@ff1+2,c
  1487  007CBE  0E80               	movlw	128
  1488  007CC0  201A               	addwfc	??___flge+3,w,c
  1489  007CC2  6E12               	movwf	___flge@ff1+3,c
  1490  007CC4                     l298:
  1491  007CC4  AE16               	btfss	___flge@ff2+3,7,c
  1492  007CC6  D01D               	goto	l299
  1493  007CC8  C013  F017         	movff	___flge@ff2,??___flge
  1494  007CCC  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1495  007CD0  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1496  007CD4  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1497  007CD8  1E17               	comf	??___flge,f,c
  1498  007CDA  1E18               	comf	??___flge+1,f,c
  1499  007CDC  1E19               	comf	??___flge+2,f,c
  1500  007CDE  1E1A               	comf	??___flge+3,f,c
  1501  007CE0  2A17               	incf	??___flge,f,c
  1502  007CE2  0E00               	movlw	0
  1503  007CE4  2218               	addwfc	??___flge+1,f,c
  1504  007CE6  2219               	addwfc	??___flge+2,f,c
  1505  007CE8  221A               	addwfc	??___flge+3,f,c
  1506  007CEA  0E00               	movlw	0
  1507  007CEC  2417               	addwf	??___flge,w,c
  1508  007CEE  6E13               	movwf	___flge@ff2,c
  1509  007CF0  0E00               	movlw	0
  1510  007CF2  2018               	addwfc	??___flge+1,w,c
  1511  007CF4  6E14               	movwf	___flge@ff2+1,c
  1512  007CF6  0E00               	movlw	0
  1513  007CF8  2019               	addwfc	??___flge+2,w,c
  1514  007CFA  6E15               	movwf	___flge@ff2+2,c
  1515  007CFC  0E80               	movlw	128
  1516  007CFE  201A               	addwfc	??___flge+3,w,c
  1517  007D00  6E16               	movwf	___flge@ff2+3,c
  1518  007D02                     l299:
  1519  007D02  0E00               	movlw	0
  1520  007D04  1A0F               	xorwf	___flge@ff1,f,c
  1521  007D06  0E00               	movlw	0
  1522  007D08  1A10               	xorwf	___flge@ff1+1,f,c
  1523  007D0A  0E00               	movlw	0
  1524  007D0C  1A11               	xorwf	___flge@ff1+2,f,c
  1525  007D0E  0E80               	movlw	128
  1526  007D10  1A12               	xorwf	___flge@ff1+3,f,c
  1527  007D12  0E00               	movlw	0
  1528  007D14  1A13               	xorwf	___flge@ff2,f,c
  1529  007D16  0E00               	movlw	0
  1530  007D18  1A14               	xorwf	___flge@ff2+1,f,c
  1531  007D1A  0E00               	movlw	0
  1532  007D1C  1A15               	xorwf	___flge@ff2+2,f,c
  1533  007D1E  0E80               	movlw	128
  1534  007D20  1A16               	xorwf	___flge@ff2+3,f,c
  1535  007D22  5013               	movf	___flge@ff2,w,c
  1536  007D24  5C0F               	subwf	___flge@ff1,w,c
  1537  007D26  5014               	movf	___flge@ff2+1,w,c
  1538  007D28  5810               	subwfb	___flge@ff1+1,w,c
  1539  007D2A  5015               	movf	___flge@ff2+2,w,c
  1540  007D2C  5811               	subwfb	___flge@ff1+2,w,c
  1541  007D2E  5016               	movf	___flge@ff2+3,w,c
  1542  007D30  5812               	subwfb	___flge@ff1+3,w,c
  1543  007D32  B0D8               	btfsc	status,0,c
  1544  007D34  D002               	goto	l916
  1545  007D36  90D8               	bcf	status,0,c
  1546  007D38  0012               	return	
  1547  007D3A                     l916:
  1548  007D3A  80D8               	bsf	status,0,c
  1549  007D3C  0012               	return	
  1550  007D3E                     __end_of___flge:
  1551                           	opt stack 0
  1552  0000                     tblptru	equ	0xFF8
  1553                           status	equ	0xFD8
  1554                           tblptru	equ	0xFF8
  1555                           status	equ	0xFD8
  1556                           
  1557                           	psect	rparam
  1558  0000                     tblptru	equ	0xFF8
  1559                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _do_nothing->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11784
                         _do_nothing
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_nothing                                           0     0      0    1964
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1964
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_nothing
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     22      22       1       35.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 27 15:27:34 2018

                       l21 7BDC                         l22 7BBA                         l23 7BD2  
                       l60 7EC6                         l52 7EAE                         l53 7EAA  
                       l62 7ECC                         l63 7ED2                         l64 7ED8  
                       l56 7EBC                         l65 7EDE                         l57 7EB8  
                       l90 7F26                         l59 7F3C                         l91 7F2C  
                       l75 7EF6                         l67 7EE4                         l92 7F30  
                       l84 7F0E                         l76 7EFC                         l68 7EEA  
                       l93 7F36                         l85 7F14                         l77 7F02  
                       l69 7EF0                         l78 7F08                         l88 7F1A  
                       l89 7F20                        l296 7C52                        l297 7C86  
                      l298 7CC4                        l299 7D02                        l651 7DFA  
                      l660 7E7C                        l652 7DE2                        l644 7D7C  
                      l645 7D8C                        l654 7E2C                        l646 7DAA  
                      l655 7E20                        l648 7DBC                        l649 7DB0  
                      l659 7E4A                        l916 7D3A                        l988 7BC2  
                      u205 7A66                        u215 7A70                        u207 7A68  
                      u225 7A7A                        u217 7A72                        u235 7A84  
                      u227 7A7C                        u420 7BD8                        u237 7A86  
                      u440 7EB2                        u370 7E36                        u195 7A5C  
                      u197 7A5E                       _main 7E8E                       start 2000  
             ___param_bank 000000                      ?_main 0001                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94  __size_of_small_right_down 004A  
          _small_left_down 7B1C                      status 000FD8            __initialization 7A02  
             __end_of_main 8000                     ??_main 0023              __activetblptr 000002  
                   _ADCON1 000FC1           __end_of___xxtofl 7E8E                     ___flge 7C1E  
         __end_of_led_sens 7A88                     _wait00 7BB0                     tblptru 000FF8  
  __end_of_small_left_down 7B66           __end_of_straight 7A54                 ___flge@ff1 000F  
               ___flge@ff2 0013               ___xxtofl@arg 000B               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 __accesstop 0060    __end_of__initialization 7A02  
            ___rparam_used 000001             __pcstackCOMRAM 0001           _small_right_down 7B66  
       __size_of_left_down 004A                    ?___flge 000F                    ?_wait00 001B  
               _do_nothing 7A0C                  ?___xxtofl 0001           ?_small_left_down 0001  
                ?_led_sens 0001                    __Hparam 0000                    __Lparam 0000  
          __size_of___flge 0120                  ?_straight 0001                    __pcinit 7A02  
                  __ramtop 0800            __size_of_wait00 006E          __end_of_left_down 7AD2  
                  __ptext0 7E8E                    __ptext1 7A22                    __ptext2 7B66  
                  __ptext3 7B1C                    __ptext4 7AD2                    __ptext5 7A88  
                  __ptext6 7A54                    __ptext7 7A0C                    __ptext8 7BB0  
                  __ptext9 7D3E                 ??___xxtofl 0005       end_of_initialization 7A02  
               ??_led_sens 0001              __Lmediumconst 0000                    wait00@i 0021  
                  wait00@j 001F                    wait00@k 001B                 _right_down 7AD2  
               ??_straight 0023                  _PORTAbits 000F80                  _PORTBbits 000F81  
              ?_do_nothing 0001              ___xxtofl@sign 0009   __end_of_small_right_down 7BB0  
           __end_of___flge 7D3E             __end_of_wait00 7C1E        start_initialization 7A02  
              ?_right_down 0001        __size_of_do_nothing 0016                   ??___flge 0017  
                 ??_wait00 001F          __size_of___xxtofl 0150          __size_of_led_sens 0034  
        __size_of_straight 0032                  _left_down 7A88        __size_of_right_down 004A  
 __size_of_small_left_down 004A               ??_do_nothing 0023                 ?_left_down 0001  
                 __Hrparam 0000         __end_of_do_nothing 7A22                   __Lrparam 0000  
        ?_small_right_down 0001         ??_small_right_down 0023                   ___xxtofl 7D3E  
                 __ptext10 7C1E                   _led_sens 7A54              __size_of_main 0172  
             ??_right_down 0023          ??_small_left_down 0023                   _straight 7A22  
              ??_left_down 0023         __end_of_right_down 7B1C  
