

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 27 21:16:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F2553 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _PORTC	set	3970
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  007A14                     __pcinit:
    68                           	opt stack 0
    69  007A14                     start_initialization:
    70                           	opt stack 0
    71  007A14                     __initialization:
    72                           	opt stack 0
    73  007A14                     end_of_initialization:
    74                           	opt stack 0
    75  007A14                     __end_of__initialization:
    76                           	opt stack 0
    77  007A14  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  007A16  6EF8               	movwf	tblptru,c
    79  007A18  0100               	movlb	0
    80  007A1A  EF45  F03F         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000001                     ?___xxtofl:
    87                           	opt stack 0
    88  000001                     ___xxtofl@val:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x0
    92  000001                     	ds	4
    93  000005                     ??___xxtofl:
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___xxtofl@sign:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x8
   101  000009                     	ds	1
   102  00000A                     ___xxtofl@exp:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x9
   106  00000A                     	ds	1
   107  00000B                     ___xxtofl@arg:
   108                           	opt stack 0
   109                           
   110                           ; 4 bytes @ 0xA
   111  00000B                     	ds	4
   112  00000F                     ___flge@ff1:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xE
   116  00000F                     	ds	4
   117  000013                     ___flge@ff2:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x12
   121  000013                     	ds	4
   122  000017                     ??___flge:
   123                           
   124                           ; 1 bytes @ 0x16
   125  000017                     	ds	4
   126  00001B                     wait00@k:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x1A
   130  00001B                     	ds	4
   131  00001F                     wait00@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1E
   135  00001F                     	ds	2
   136  000021                     wait00@i:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x20
   140  000021                     	ds	2
   141  000023                     tblptru	equ	0xFF8
   142                           
   143                           ; 1 bytes @ 0x22
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 70 in file "sample.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  2   48[None  ] int 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called:    3
   169 ;; This function calls:
   170 ;;		_led_sens
   171 ;;		_left_down
   172 ;;		_right_down
   173 ;;		_small_left_down
   174 ;;		_small_right_down
   175 ;;		_straight
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  007E8A                     __ptext0:
   183                           	opt stack 0
   184  007E8A                     _main:
   185                           	opt stack 28
   186                           
   187                           ;sample.c: 73: ADCON1 = 0x0F;
   188                           
   189                           ;incstack = 0
   190  007E8A  0E0F               	movlw	15
   191  007E8C  6EC1               	movwf	4033,c	;volatile
   192                           
   193                           ;sample.c: 76: TRISA = 0x20;
   194  007E8E  0E20               	movlw	32
   195  007E90  6E92               	movwf	3986,c	;volatile
   196                           
   197                           ;sample.c: 77: TRISB = 0xFF;
   198  007E92  6893               	setf	3987,c	;volatile
   199                           
   200                           ;sample.c: 78: TRISC = 0x00;
   201  007E94  0E00               	movlw	0
   202  007E96  6E94               	movwf	3988,c	;volatile
   203                           
   204                           ;sample.c: 81: PORTA = 0x00;
   205  007E98  0E00               	movlw	0
   206  007E9A  6E80               	movwf	3968,c	;volatile
   207                           
   208                           ;sample.c: 82: PORTB = 0x00;
   209  007E9C  0E00               	movlw	0
   210  007E9E  6E81               	movwf	3969,c	;volatile
   211                           
   212                           ;sample.c: 83: PORTC = 0x00;
   213  007EA0  0E00               	movlw	0
   214  007EA2  6E82               	movwf	3970,c	;volatile
   215                           
   216                           ;sample.c: 86: while(PORTAbits.RA5==1){
   217  007EA4  D002               	goto	l49
   218  007EA6                     
   219                           ;sample.c: 87: led_sens();
   220  007EA6  EC28  F03D         	call	_led_sens	;wreg free
   221  007EAA                     l49:
   222  007EAA  BA80               	btfsc	3968,5,c	;volatile
   223  007EAC  D7FC               	goto	l50
   224  007EAE                     u430:
   225                           
   226                           ;sample.c: 93: led_sens();
   227                           
   228                           ;sample.c: 88: }
   229                           ;sample.c: 92: while(1){
   230  007EAE  EC28  F03D         	call	_led_sens	;wreg free
   231                           
   232                           ;sample.c: 95: switch (PORTB) {
   233  007EB2  D044               	goto	l53
   234  007EB4                     
   235                           ;sample.c: 97: straight();
   236  007EB4  EC0F  F03D         	call	_straight	;wreg free
   237                           
   238                           ;sample.c: 98: break;
   239  007EB8  D7FA               	goto	u430
   240  007EBA                     
   241                           ;sample.c: 100: left_down();
   242  007EBA  EC42  F03D         	call	_left_down	;wreg free
   243                           
   244                           ;sample.c: 101: break;
   245  007EBE  D7F7               	goto	u430
   246  007EC0                     
   247                           ;sample.c: 103: small_left_down();
   248  007EC0  EC8C  F03D         	call	_small_left_down	;wreg free
   249                           
   250                           ;sample.c: 104: break;
   251  007EC4  D7F4               	goto	u430
   252  007EC6                     
   253                           ;sample.c: 106: left_down();
   254  007EC6  EC42  F03D         	call	_left_down	;wreg free
   255                           
   256                           ;sample.c: 107: break;
   257  007ECA  D7F1               	goto	u430
   258  007ECC                     
   259                           ;sample.c: 109: straight();
   260  007ECC  EC0F  F03D         	call	_straight	;wreg free
   261                           
   262                           ;sample.c: 111: case 0b00101: break;
   263                           
   264                           ;sample.c: 110: break;
   265  007ED0  D7EE               	goto	u430
   266  007ED2                     
   267                           ;sample.c: 113: straight();
   268  007ED2  EC0F  F03D         	call	_straight	;wreg free
   269                           
   270                           ;sample.c: 114: break;
   271  007ED6  D7EB               	goto	u430
   272  007ED8                     
   273                           ;sample.c: 116: right_down();
   274  007ED8  EC67  F03D         	call	_right_down	;wreg free
   275                           
   276                           ;sample.c: 117: break;
   277  007EDC  D7E8               	goto	u430
   278  007EDE                     
   279                           ;sample.c: 119: small_right_down();
   280  007EDE  ECB1  F03D         	call	_small_right_down	;wreg free
   281                           
   282                           ;sample.c: 123: case 0b01011: break;
   283                           
   284                           ;sample.c: 122: case 0b01010: break;
   285                           
   286                           ;sample.c: 121: case 0b01001: break;
   287                           
   288                           ;sample.c: 120: break;
   289  007EE2  D7E5               	goto	u430
   290  007EE4                     
   291                           ;sample.c: 125: straight();
   292  007EE4  EC0F  F03D         	call	_straight	;wreg free
   293                           
   294                           ;sample.c: 127: case 0b01101: break;
   295                           
   296                           ;sample.c: 126: break;
   297  007EE8  D7E2               	goto	u430
   298  007EEA                     
   299                           ;sample.c: 129: straight();
   300  007EEA  EC0F  F03D         	call	_straight	;wreg free
   301                           
   302                           ;sample.c: 130: break;
   303  007EEE  D7DF               	goto	u430
   304  007EF0                     
   305                           ;sample.c: 132: right_down();
   306  007EF0  EC67  F03D         	call	_right_down	;wreg free
   307                           
   308                           ;sample.c: 133: break;
   309  007EF4  D7DC               	goto	u430
   310  007EF6                     
   311                           ;sample.c: 135: right_down();
   312  007EF6  EC67  F03D         	call	_right_down	;wreg free
   313                           
   314                           ;sample.c: 136: break;
   315  007EFA  D7D9               	goto	u430
   316  007EFC                     
   317                           ;sample.c: 138: straight();
   318  007EFC  EC0F  F03D         	call	_straight	;wreg free
   319                           
   320                           ;sample.c: 140: case 0b10010: break;
   321                           
   322                           ;sample.c: 139: break;
   323  007F00  D7D6               	goto	u430
   324  007F02                     
   325                           ;sample.c: 142: straight();
   326  007F02  EC0F  F03D         	call	_straight	;wreg free
   327                           
   328                           ;sample.c: 146: case 0b10110: break;
   329                           
   330                           ;sample.c: 145: case 0b10101: break;
   331                           
   332                           ;sample.c: 144: case 0b10100: break;
   333                           
   334                           ;sample.c: 143: break;
   335  007F06  D7D3               	goto	u430
   336  007F08                     
   337                           ;sample.c: 148: small_right_down();
   338  007F08  ECB1  F03D         	call	_small_right_down	;wreg free
   339                           
   340                           ;sample.c: 149: break;
   341  007F0C  D7D0               	goto	u430
   342  007F0E                     
   343                           ;sample.c: 151: right_down();
   344  007F0E  EC67  F03D         	call	_right_down	;wreg free
   345                           
   346                           ;sample.c: 152: break;
   347  007F12  D7CD               	goto	u430
   348  007F14                     
   349                           ;sample.c: 154: straight();
   350  007F14  EC0F  F03D         	call	_straight	;wreg free
   351                           
   352                           ;sample.c: 156: case 0b11010: break;
   353                           
   354                           ;sample.c: 155: break;
   355  007F18  D7CA               	goto	u430
   356  007F1A                     
   357                           ;sample.c: 158: straight();
   358  007F1A  EC0F  F03D         	call	_straight	;wreg free
   359                           
   360                           ;sample.c: 159: break;
   361  007F1E  D7C7               	goto	u430
   362  007F20                     
   363                           ;sample.c: 161: left_down();
   364  007F20  EC42  F03D         	call	_left_down	;wreg free
   365                           
   366                           ;sample.c: 162: break;
   367  007F24  D7C4               	goto	u430
   368  007F26                     
   369                           ;sample.c: 164: small_left_down();
   370  007F26  EC8C  F03D         	call	_small_left_down	;wreg free
   371                           
   372                           ;sample.c: 165: break;
   373  007F2A  D7C1               	goto	u430
   374  007F2C                     
   375                           ;sample.c: 167: left_down();
   376  007F2C  EC42  F03D         	call	_left_down	;wreg free
   377  007F30                     l86:
   378                           
   379                           ;sample.c: 169: straight();
   380  007F30  EC0F  F03D         	call	_straight	;wreg free
   381                           
   382                           ;sample.c: 170: break;
   383  007F34  D7BC               	goto	u430
   384  007F36                     
   385                           ;sample.c: 172: straight();
   386  007F36  EC0F  F03D         	call	_straight	;wreg free
   387                           
   388                           ;sample.c: 174: }
   389                           
   390                           ;sample.c: 173: break;
   391  007F3A  D7B9               	goto	u430
   392  007F3C                     l53:
   393  007F3C  5081               	movf	3969,w,c	;volatile
   394                           
   395                           ; Switch size 1, requested type "space"
   396                           ; Number of cases is 32, Range of values is 0 to 31
   397                           ; switch strategies available:
   398                           ; Name         Instructions Cycles
   399                           ; simple_byte           97    49 (average)
   400                           ;	Chosen strategy is simple_byte
   401  007F3E  0A00               	xorlw	0	; case 0
   402  007F40  B4D8               	btfsc	status,2,c
   403  007F42  D7B8               	goto	l54
   404  007F44  0A01               	xorlw	1	; case 1
   405  007F46  B4D8               	btfsc	status,2,c
   406  007F48  D7B8               	goto	l56
   407  007F4A  0A03               	xorlw	3	; case 2
   408  007F4C  B4D8               	btfsc	status,2,c
   409  007F4E  D7B8               	goto	l57
   410  007F50  0A01               	xorlw	1	; case 3
   411  007F52  B4D8               	btfsc	status,2,c
   412  007F54  D7B8               	goto	l58
   413  007F56  0A07               	xorlw	7	; case 4
   414  007F58  B4D8               	btfsc	status,2,c
   415  007F5A  D7B8               	goto	l59
   416  007F5C  0A01               	xorlw	1	; case 5
   417  007F5E  B4D8               	btfsc	status,2,c
   418  007F60  D7A6               	goto	u430
   419  007F62  0A03               	xorlw	3	; case 6
   420  007F64  B4D8               	btfsc	status,2,c
   421  007F66  D7B5               	goto	l61
   422  007F68  0A01               	xorlw	1	; case 7
   423  007F6A  B4D8               	btfsc	status,2,c
   424  007F6C  D7B5               	goto	l62
   425  007F6E  0A0F               	xorlw	15	; case 8
   426  007F70  B4D8               	btfsc	status,2,c
   427  007F72  D7B5               	goto	l63
   428  007F74  0A01               	xorlw	1	; case 9
   429  007F76  B4D8               	btfsc	status,2,c
   430  007F78  D79A               	goto	u430
   431  007F7A  0A03               	xorlw	3	; case 10
   432  007F7C  B4D8               	btfsc	status,2,c
   433  007F7E  D797               	goto	u430
   434  007F80  0A01               	xorlw	1	; case 11
   435  007F82  B4D8               	btfsc	status,2,c
   436  007F84  D794               	goto	u430
   437  007F86  0A07               	xorlw	7	; case 12
   438  007F88  B4D8               	btfsc	status,2,c
   439  007F8A  D7AC               	goto	l67
   440  007F8C  0A01               	xorlw	1	; case 13
   441  007F8E  B4D8               	btfsc	status,2,c
   442  007F90  D78E               	goto	u430
   443  007F92  0A03               	xorlw	3	; case 14
   444  007F94  B4D8               	btfsc	status,2,c
   445  007F96  D7A9               	goto	l69
   446  007F98  0A01               	xorlw	1	; case 15
   447  007F9A  B4D8               	btfsc	status,2,c
   448  007F9C  D7A9               	goto	l70
   449  007F9E  0A1F               	xorlw	31	; case 16
   450  007FA0  B4D8               	btfsc	status,2,c
   451  007FA2  D7A9               	goto	l71
   452  007FA4  0A01               	xorlw	1	; case 17
   453  007FA6  B4D8               	btfsc	status,2,c
   454  007FA8  D7A9               	goto	l72
   455  007FAA  0A03               	xorlw	3	; case 18
   456  007FAC  B4D8               	btfsc	status,2,c
   457  007FAE  D77F               	goto	u430
   458  007FB0  0A01               	xorlw	1	; case 19
   459  007FB2  B4D8               	btfsc	status,2,c
   460  007FB4  D7A6               	goto	l74
   461  007FB6  0A07               	xorlw	7	; case 20
   462  007FB8  B4D8               	btfsc	status,2,c
   463  007FBA  D779               	goto	u430
   464  007FBC  0A01               	xorlw	1	; case 21
   465  007FBE  B4D8               	btfsc	status,2,c
   466  007FC0  D776               	goto	u430
   467  007FC2  0A03               	xorlw	3	; case 22
   468  007FC4  B4D8               	btfsc	status,2,c
   469  007FC6  D773               	goto	u430
   470  007FC8  0A01               	xorlw	1	; case 23
   471  007FCA  B4D8               	btfsc	status,2,c
   472  007FCC  D79D               	goto	l78
   473  007FCE  0A0F               	xorlw	15	; case 24
   474  007FD0  B4D8               	btfsc	status,2,c
   475  007FD2  D79D               	goto	l79
   476  007FD4  0A01               	xorlw	1	; case 25
   477  007FD6  B4D8               	btfsc	status,2,c
   478  007FD8  D79D               	goto	l80
   479  007FDA  0A03               	xorlw	3	; case 26
   480  007FDC  B4D8               	btfsc	status,2,c
   481  007FDE  D767               	goto	u430
   482  007FE0  0A01               	xorlw	1	; case 27
   483  007FE2  B4D8               	btfsc	status,2,c
   484  007FE4  D79A               	goto	l82
   485  007FE6  0A07               	xorlw	7	; case 28
   486  007FE8  B4D8               	btfsc	status,2,c
   487  007FEA  D79A               	goto	l83
   488  007FEC  0A01               	xorlw	1	; case 29
   489  007FEE  B4D8               	btfsc	status,2,c
   490  007FF0  D79A               	goto	l84
   491  007FF2  0A03               	xorlw	3	; case 30
   492  007FF4  B4D8               	btfsc	status,2,c
   493  007FF6  D79A               	goto	l85
   494  007FF8  0A01               	xorlw	1	; case 31
   495  007FFA  B4D8               	btfsc	status,2,c
   496  007FFC  D799               	goto	l86
   497  007FFE  D79B               	goto	l87
   498  008000                     __end_of_main:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _straight *****************
   504 ;; Defined at:
   505 ;;		line 54 in file "sample.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  2   40[None  ] int 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    2
   526 ;; This function calls:
   527 ;;		_wait00
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text1
   534  007A1E                     __ptext1:
   535                           	opt stack 0
   536  007A1E                     _straight:
   537                           	opt stack 28
   538                           
   539                           ;sample.c: 55: PORTC=0x03;
   540                           
   541                           ;incstack = 0
   542  007A1E  0E03               	movlw	3
   543  007A20  6E82               	movwf	3970,c	;volatile
   544                           
   545                           ;sample.c: 56: wait00(2);
   546  007A22  0E00               	movlw	0
   547  007A24  6E1B               	movwf	wait00@k,c
   548  007A26  0E00               	movlw	0
   549  007A28  6E1C               	movwf	wait00@k+1,c
   550  007A2A  0E00               	movlw	0
   551  007A2C  6E1D               	movwf	wait00@k+2,c
   552  007A2E  0E40               	movlw	64
   553  007A30  6E1E               	movwf	wait00@k+3,c
   554  007A32  ECD6  F03D         	call	_wait00	;wreg free
   555                           
   556                           ;sample.c: 57: PORTC=0x00;
   557  007A36  0E00               	movlw	0
   558  007A38  6E82               	movwf	3970,c	;volatile
   559                           
   560                           ;sample.c: 58: wait00(500);
   561  007A3A  0E00               	movlw	0
   562  007A3C  6E1B               	movwf	wait00@k,c
   563  007A3E  0E00               	movlw	0
   564  007A40  6E1C               	movwf	wait00@k+1,c
   565  007A42  0EFA               	movlw	250
   566  007A44  6E1D               	movwf	wait00@k+2,c
   567  007A46  0E43               	movlw	67
   568  007A48  6E1E               	movwf	wait00@k+3,c
   569  007A4A  ECD6  F03D         	call	_wait00	;wreg free
   570  007A4E  0012               	return		;funcret
   571  007A50                     __end_of_straight:
   572                           	opt stack 0
   573                           tblptru	equ	0xFF8
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _small_right_down *****************
   577 ;; Defined at:
   578 ;;		line 27 in file "sample.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  2   31[None  ] int 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    2
   599 ;; This function calls:
   600 ;;		_wait00
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text2
   607  007B62                     __ptext2:
   608                           	opt stack 0
   609  007B62                     _small_right_down:
   610                           	opt stack 28
   611                           
   612                           ;sample.c: 28: PORTC=0x03;
   613                           
   614                           ;incstack = 0
   615  007B62  0E03               	movlw	3
   616  007B64  6E82               	movwf	3970,c	;volatile
   617                           
   618                           ;sample.c: 29: wait00(0.1);
   619  007B66  0ECD               	movlw	205
   620  007B68  6E1B               	movwf	wait00@k,c
   621  007B6A  0ECC               	movlw	204
   622  007B6C  6E1C               	movwf	wait00@k+1,c
   623  007B6E  0ECC               	movlw	204
   624  007B70  6E1D               	movwf	wait00@k+2,c
   625  007B72  0E3D               	movlw	61
   626  007B74  6E1E               	movwf	wait00@k+3,c
   627  007B76  ECD6  F03D         	call	_wait00	;wreg free
   628                           
   629                           ;sample.c: 30: PORTC=0x01;
   630  007B7A  0E01               	movlw	1
   631  007B7C  6E82               	movwf	3970,c	;volatile
   632                           
   633                           ;sample.c: 31: wait00(5);
   634  007B7E  0E00               	movlw	0
   635  007B80  6E1B               	movwf	wait00@k,c
   636  007B82  0E00               	movlw	0
   637  007B84  6E1C               	movwf	wait00@k+1,c
   638  007B86  0EA0               	movlw	160
   639  007B88  6E1D               	movwf	wait00@k+2,c
   640  007B8A  0E40               	movlw	64
   641  007B8C  6E1E               	movwf	wait00@k+3,c
   642  007B8E  ECD6  F03D         	call	_wait00	;wreg free
   643                           
   644                           ;sample.c: 32: PORTC=0x00;
   645  007B92  0E00               	movlw	0
   646  007B94  6E82               	movwf	3970,c	;volatile
   647                           
   648                           ;sample.c: 33: wait00(500);
   649  007B96  0E00               	movlw	0
   650  007B98  6E1B               	movwf	wait00@k,c
   651  007B9A  0E00               	movlw	0
   652  007B9C  6E1C               	movwf	wait00@k+1,c
   653  007B9E  0EFA               	movlw	250
   654  007BA0  6E1D               	movwf	wait00@k+2,c
   655  007BA2  0E43               	movlw	67
   656  007BA4  6E1E               	movwf	wait00@k+3,c
   657  007BA6  ECD6  F03D         	call	_wait00	;wreg free
   658  007BAA  0012               	return		;funcret
   659  007BAC                     __end_of_small_right_down:
   660                           	opt stack 0
   661                           tblptru	equ	0xFF8
   662                           status	equ	0xFD8
   663                           
   664 ;; *************** function _small_left_down *****************
   665 ;; Defined at:
   666 ;;		line 45 in file "sample.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2   37[None  ] int 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		_wait00
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text3
   695  007B18                     __ptext3:
   696                           	opt stack 0
   697  007B18                     _small_left_down:
   698                           	opt stack 28
   699                           
   700                           ;sample.c: 46: PORTC=0x03;
   701                           
   702                           ;incstack = 0
   703  007B18  0E03               	movlw	3
   704  007B1A  6E82               	movwf	3970,c	;volatile
   705                           
   706                           ;sample.c: 47: wait00(0.1);
   707  007B1C  0ECD               	movlw	205
   708  007B1E  6E1B               	movwf	wait00@k,c
   709  007B20  0ECC               	movlw	204
   710  007B22  6E1C               	movwf	wait00@k+1,c
   711  007B24  0ECC               	movlw	204
   712  007B26  6E1D               	movwf	wait00@k+2,c
   713  007B28  0E3D               	movlw	61
   714  007B2A  6E1E               	movwf	wait00@k+3,c
   715  007B2C  ECD6  F03D         	call	_wait00	;wreg free
   716                           
   717                           ;sample.c: 48: PORTC=0x02;
   718  007B30  0E02               	movlw	2
   719  007B32  6E82               	movwf	3970,c	;volatile
   720                           
   721                           ;sample.c: 49: wait00(5);
   722  007B34  0E00               	movlw	0
   723  007B36  6E1B               	movwf	wait00@k,c
   724  007B38  0E00               	movlw	0
   725  007B3A  6E1C               	movwf	wait00@k+1,c
   726  007B3C  0EA0               	movlw	160
   727  007B3E  6E1D               	movwf	wait00@k+2,c
   728  007B40  0E40               	movlw	64
   729  007B42  6E1E               	movwf	wait00@k+3,c
   730  007B44  ECD6  F03D         	call	_wait00	;wreg free
   731                           
   732                           ;sample.c: 50: PORTC=0x00;
   733  007B48  0E00               	movlw	0
   734  007B4A  6E82               	movwf	3970,c	;volatile
   735                           
   736                           ;sample.c: 51: wait00(500);
   737  007B4C  0E00               	movlw	0
   738  007B4E  6E1B               	movwf	wait00@k,c
   739  007B50  0E00               	movlw	0
   740  007B52  6E1C               	movwf	wait00@k+1,c
   741  007B54  0EFA               	movlw	250
   742  007B56  6E1D               	movwf	wait00@k+2,c
   743  007B58  0E43               	movlw	67
   744  007B5A  6E1E               	movwf	wait00@k+3,c
   745  007B5C  ECD6  F03D         	call	_wait00	;wreg free
   746  007B60  0012               	return		;funcret
   747  007B62                     __end_of_small_left_down:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           status	equ	0xFD8
   751                           
   752 ;; *************** function _right_down *****************
   753 ;; Defined at:
   754 ;;		line 18 in file "sample.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  2   28[None  ] int 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         0       0       0       0       0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    2
   775 ;; This function calls:
   776 ;;		_wait00
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text4
   783  007ACE                     __ptext4:
   784                           	opt stack 0
   785  007ACE                     _right_down:
   786                           	opt stack 28
   787                           
   788                           ;sample.c: 19: PORTC=0x03;
   789                           
   790                           ;incstack = 0
   791  007ACE  0E03               	movlw	3
   792  007AD0  6E82               	movwf	3970,c	;volatile
   793                           
   794                           ;sample.c: 20: wait00(0.1);
   795  007AD2  0ECD               	movlw	205
   796  007AD4  6E1B               	movwf	wait00@k,c
   797  007AD6  0ECC               	movlw	204
   798  007AD8  6E1C               	movwf	wait00@k+1,c
   799  007ADA  0ECC               	movlw	204
   800  007ADC  6E1D               	movwf	wait00@k+2,c
   801  007ADE  0E3D               	movlw	61
   802  007AE0  6E1E               	movwf	wait00@k+3,c
   803  007AE2  ECD6  F03D         	call	_wait00	;wreg free
   804                           
   805                           ;sample.c: 21: PORTC=0x01;
   806  007AE6  0E01               	movlw	1
   807  007AE8  6E82               	movwf	3970,c	;volatile
   808                           
   809                           ;sample.c: 22: wait00(10);
   810  007AEA  0E00               	movlw	0
   811  007AEC  6E1B               	movwf	wait00@k,c
   812  007AEE  0E00               	movlw	0
   813  007AF0  6E1C               	movwf	wait00@k+1,c
   814  007AF2  0E20               	movlw	32
   815  007AF4  6E1D               	movwf	wait00@k+2,c
   816  007AF6  0E41               	movlw	65
   817  007AF8  6E1E               	movwf	wait00@k+3,c
   818  007AFA  ECD6  F03D         	call	_wait00	;wreg free
   819                           
   820                           ;sample.c: 23: PORTC=0x00;
   821  007AFE  0E00               	movlw	0
   822  007B00  6E82               	movwf	3970,c	;volatile
   823                           
   824                           ;sample.c: 24: wait00(500);
   825  007B02  0E00               	movlw	0
   826  007B04  6E1B               	movwf	wait00@k,c
   827  007B06  0E00               	movlw	0
   828  007B08  6E1C               	movwf	wait00@k+1,c
   829  007B0A  0EFA               	movlw	250
   830  007B0C  6E1D               	movwf	wait00@k+2,c
   831  007B0E  0E43               	movlw	67
   832  007B10  6E1E               	movwf	wait00@k+3,c
   833  007B12  ECD6  F03D         	call	_wait00	;wreg free
   834  007B16  0012               	return		;funcret
   835  007B18                     __end_of_right_down:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           status	equ	0xFD8
   839                           
   840 ;; *************** function _left_down *****************
   841 ;; Defined at:
   842 ;;		line 36 in file "sample.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2   34[None  ] int 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    2
   863 ;; This function calls:
   864 ;;		_wait00
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text5
   871  007A84                     __ptext5:
   872                           	opt stack 0
   873  007A84                     _left_down:
   874                           	opt stack 28
   875                           
   876                           ;sample.c: 37: PORTC=0x03;
   877                           
   878                           ;incstack = 0
   879  007A84  0E03               	movlw	3
   880  007A86  6E82               	movwf	3970,c	;volatile
   881                           
   882                           ;sample.c: 38: wait00(0.1);
   883  007A88  0ECD               	movlw	205
   884  007A8A  6E1B               	movwf	wait00@k,c
   885  007A8C  0ECC               	movlw	204
   886  007A8E  6E1C               	movwf	wait00@k+1,c
   887  007A90  0ECC               	movlw	204
   888  007A92  6E1D               	movwf	wait00@k+2,c
   889  007A94  0E3D               	movlw	61
   890  007A96  6E1E               	movwf	wait00@k+3,c
   891  007A98  ECD6  F03D         	call	_wait00	;wreg free
   892                           
   893                           ;sample.c: 39: PORTC=0x02;
   894  007A9C  0E02               	movlw	2
   895  007A9E  6E82               	movwf	3970,c	;volatile
   896                           
   897                           ;sample.c: 40: wait00(10);
   898  007AA0  0E00               	movlw	0
   899  007AA2  6E1B               	movwf	wait00@k,c
   900  007AA4  0E00               	movlw	0
   901  007AA6  6E1C               	movwf	wait00@k+1,c
   902  007AA8  0E20               	movlw	32
   903  007AAA  6E1D               	movwf	wait00@k+2,c
   904  007AAC  0E41               	movlw	65
   905  007AAE  6E1E               	movwf	wait00@k+3,c
   906  007AB0  ECD6  F03D         	call	_wait00	;wreg free
   907                           
   908                           ;sample.c: 41: PORTC=0x00;
   909  007AB4  0E00               	movlw	0
   910  007AB6  6E82               	movwf	3970,c	;volatile
   911                           
   912                           ;sample.c: 42: wait00(500);
   913  007AB8  0E00               	movlw	0
   914  007ABA  6E1B               	movwf	wait00@k,c
   915  007ABC  0E00               	movlw	0
   916  007ABE  6E1C               	movwf	wait00@k+1,c
   917  007AC0  0EFA               	movlw	250
   918  007AC2  6E1D               	movwf	wait00@k+2,c
   919  007AC4  0E43               	movlw	67
   920  007AC6  6E1E               	movwf	wait00@k+3,c
   921  007AC8  ECD6  F03D         	call	_wait00	;wreg free
   922  007ACC  0012               	return		;funcret
   923  007ACE                     __end_of_left_down:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           status	equ	0xFD8
   927                           
   928 ;; *************** function _wait00 *****************
   929 ;; Defined at:
   930 ;;		line 7 in file "sample.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  k               4   26[COMRAM] float 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  i               2   32[COMRAM] short 
   935 ;;  j               2   30[COMRAM] short 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2   26[COMRAM] int 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   945 ;;      Params:         4       0       0       0       0       0       0       0       0
   946 ;;      Locals:         4       0       0       0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0
   948 ;;      Totals:         8       0       0       0       0       0       0       0       0
   949 ;;Total ram usage:        8 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    1
   952 ;; This function calls:
   953 ;;		___flge
   954 ;;		___xxtofl
   955 ;; This function is called by:
   956 ;;		_right_down
   957 ;;		_small_right_down
   958 ;;		_left_down
   959 ;;		_small_left_down
   960 ;;		_straight
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text6
   965  007BAC                     __ptext6:
   966                           	opt stack 0
   967  007BAC                     _wait00:
   968                           	opt stack 28
   969                           
   970                           ;sample.c: 10: short i;
   971                           ;sample.c: 11: short j;
   972                           ;sample.c: 12: for(j=0;j<k;j++){
   973                           
   974                           ;incstack = 0
   975  007BAC  0E00               	movlw	0
   976  007BAE  6E20               	movwf	wait00@j+1,c
   977  007BB0  0E00               	movlw	0
   978  007BB2  6E1F               	movwf	wait00@j,c
   979  007BB4  D011               	goto	l21
   980  007BB6                     
   981                           ;sample.c: 13: for(i=0;i<3000;i++){
   982  007BB6  0E00               	movlw	0
   983  007BB8  6E22               	movwf	wait00@i+1,c
   984  007BBA  0E00               	movlw	0
   985  007BBC  6E21               	movwf	wait00@i,c
   986  007BBE                     l982:
   987  007BBE  BE22               	btfsc	wait00@i+1,7,c
   988  007BC0  D006               	goto	l23
   989  007BC2  0EB8               	movlw	184
   990  007BC4  5C21               	subwf	wait00@i,w,c
   991  007BC6  0E0B               	movlw	11
   992  007BC8  5822               	subwfb	wait00@i+1,w,c
   993  007BCA  B0D8               	btfsc	status,0,c
   994  007BCC  D003               	goto	u410
   995  007BCE                     l23:
   996  007BCE  4A21               	infsnz	wait00@i,f,c
   997  007BD0  2A22               	incf	wait00@i+1,f,c
   998  007BD2  D7F5               	goto	l982
   999  007BD4                     u410:
  1000  007BD4  4A1F               	infsnz	wait00@j,f,c
  1001  007BD6  2A20               	incf	wait00@j+1,f,c
  1002  007BD8                     l21:
  1003  007BD8  C01F  F001         	movff	wait00@j,___xxtofl@val
  1004  007BDC  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1005  007BE0  0E00               	movlw	0
  1006  007BE2  BE02               	btfsc	___xxtofl@val+1,7,c
  1007  007BE4  0EFF               	movlw	-1
  1008  007BE6  6E03               	movwf	___xxtofl@val+2,c
  1009  007BE8  6E04               	movwf	___xxtofl@val+3,c
  1010  007BEA  0E01               	movlw	1
  1011  007BEC  EC9D  F03E         	call	___xxtofl
  1012  007BF0  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1013  007BF4  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1014  007BF8  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1015  007BFC  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1016  007C00  C01B  F013         	movff	wait00@k,___flge@ff2
  1017  007C04  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1018  007C08  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1019  007C0C  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1020  007C10  EC0D  F03E         	call	___flge	;wreg free
  1021  007C14  B0D8               	btfsc	status,0,c
  1022  007C16  0012               	return	
  1023  007C18  D7CE               	goto	l22
  1024  007C1A                     __end_of_wait00:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function ___xxtofl *****************
  1030 ;; Defined at:
  1031 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  sign            1    wreg     unsigned char 
  1034 ;;  val             4    0[COMRAM] long 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  sign            1    8[COMRAM] unsigned char 
  1037 ;;  arg             4   10[COMRAM] unsigned long 
  1038 ;;  exp             1    9[COMRAM] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  4    0[COMRAM] unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         4       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1051 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:       14 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_wait00
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text7
  1062  007D3A                     __ptext7:
  1063                           	opt stack 0
  1064  007D3A                     ___xxtofl:
  1065                           	opt stack 28
  1066                           
  1067                           ;incstack = 0
  1068                           ;___xxtofl@sign stored from wreg
  1069  007D3A  6E09               	movwf	___xxtofl@sign,c
  1070  007D3C  5009               	movf	___xxtofl@sign,w,c
  1071  007D3E  A4D8               	btfss	status,2,c
  1072  007D40  AE04               	btfss	___xxtofl@val+3,7,c
  1073  007D42  D01A               	goto	l638
  1074  007D44  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1075  007D48  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1076  007D4C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1077  007D50  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1078  007D54  1E05               	comf	??___xxtofl,f,c
  1079  007D56  1E06               	comf	??___xxtofl+1,f,c
  1080  007D58  1E07               	comf	??___xxtofl+2,f,c
  1081  007D5A  1E08               	comf	??___xxtofl+3,f,c
  1082  007D5C  2A05               	incf	??___xxtofl,f,c
  1083  007D5E  0E00               	movlw	0
  1084  007D60  2206               	addwfc	??___xxtofl+1,f,c
  1085  007D62  2207               	addwfc	??___xxtofl+2,f,c
  1086  007D64  2208               	addwfc	??___xxtofl+3,f,c
  1087  007D66  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1088  007D6A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1089  007D6E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1090  007D72  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1091  007D76  D008               	goto	l639
  1092  007D78                     l638:
  1093  007D78  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1094  007D7C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1095  007D80  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1096  007D84  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1097  007D88                     l639:
  1098  007D88  5001               	movf	___xxtofl@val,w,c
  1099  007D8A  1002               	iorwf	___xxtofl@val+1,w,c
  1100  007D8C  1003               	iorwf	___xxtofl@val+2,w,c
  1101  007D8E  1004               	iorwf	___xxtofl@val+3,w,c
  1102  007D90  A4D8               	btfss	status,2,c
  1103  007D92  D009               	goto	l640
  1104  007D94  0E00               	movlw	0
  1105  007D96  6E01               	movwf	?___xxtofl,c
  1106  007D98  0E00               	movlw	0
  1107  007D9A  6E02               	movwf	?___xxtofl+1,c
  1108  007D9C  0E00               	movlw	0
  1109  007D9E  6E03               	movwf	?___xxtofl+2,c
  1110  007DA0  0E00               	movlw	0
  1111  007DA2  6E04               	movwf	?___xxtofl+3,c
  1112  007DA4  0012               	return	
  1113  007DA6                     l640:
  1114  007DA6  0E96               	movlw	150
  1115  007DA8  6E0A               	movwf	___xxtofl@exp,c
  1116  007DAA  D006               	goto	l642
  1117  007DAC  2A0A               	incf	___xxtofl@exp,f,c
  1118  007DAE  90D8               	bcf	status,0,c
  1119  007DB0  320E               	rrcf	___xxtofl@arg+3,f,c
  1120  007DB2  320D               	rrcf	___xxtofl@arg+2,f,c
  1121  007DB4  320C               	rrcf	___xxtofl@arg+1,f,c
  1122  007DB6  320B               	rrcf	___xxtofl@arg,f,c
  1123  007DB8                     l642:
  1124  007DB8  0E00               	movlw	0
  1125  007DBA  140B               	andwf	___xxtofl@arg,w,c
  1126  007DBC  6E05               	movwf	??___xxtofl& (0+255),c
  1127  007DBE  0E00               	movlw	0
  1128  007DC0  140C               	andwf	___xxtofl@arg+1,w,c
  1129  007DC2  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1130  007DC4  0E00               	movlw	0
  1131  007DC6  140D               	andwf	___xxtofl@arg+2,w,c
  1132  007DC8  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1133  007DCA  0EFE               	movlw	254
  1134  007DCC  140E               	andwf	___xxtofl@arg+3,w,c
  1135  007DCE  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1136  007DD0  5005               	movf	??___xxtofl,w,c
  1137  007DD2  1006               	iorwf	??___xxtofl+1,w,c
  1138  007DD4  1007               	iorwf	??___xxtofl+2,w,c
  1139  007DD6  1008               	iorwf	??___xxtofl+3,w,c
  1140  007DD8  B4D8               	btfsc	status,2,c
  1141  007DDA  D00D               	goto	l645
  1142  007DDC  D7E7               	goto	l643
  1143  007DDE  2A0A               	incf	___xxtofl@exp,f,c
  1144  007DE0  0E01               	movlw	1
  1145  007DE2  260B               	addwf	___xxtofl@arg,f,c
  1146  007DE4  0E00               	movlw	0
  1147  007DE6  220C               	addwfc	___xxtofl@arg+1,f,c
  1148  007DE8  220D               	addwfc	___xxtofl@arg+2,f,c
  1149  007DEA  220E               	addwfc	___xxtofl@arg+3,f,c
  1150  007DEC  90D8               	bcf	status,0,c
  1151  007DEE  320E               	rrcf	___xxtofl@arg+3,f,c
  1152  007DF0  320D               	rrcf	___xxtofl@arg+2,f,c
  1153  007DF2  320C               	rrcf	___xxtofl@arg+1,f,c
  1154  007DF4  320B               	rrcf	___xxtofl@arg,f,c
  1155  007DF6                     l645:
  1156  007DF6  0E00               	movlw	0
  1157  007DF8  140B               	andwf	___xxtofl@arg,w,c
  1158  007DFA  6E05               	movwf	??___xxtofl& (0+255),c
  1159  007DFC  0E00               	movlw	0
  1160  007DFE  140C               	andwf	___xxtofl@arg+1,w,c
  1161  007E00  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1162  007E02  0E00               	movlw	0
  1163  007E04  140D               	andwf	___xxtofl@arg+2,w,c
  1164  007E06  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1165  007E08  0EFF               	movlw	255
  1166  007E0A  140E               	andwf	___xxtofl@arg+3,w,c
  1167  007E0C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1168  007E0E  5005               	movf	??___xxtofl,w,c
  1169  007E10  1006               	iorwf	??___xxtofl+1,w,c
  1170  007E12  1007               	iorwf	??___xxtofl+2,w,c
  1171  007E14  1008               	iorwf	??___xxtofl+3,w,c
  1172  007E16  B4D8               	btfsc	status,2,c
  1173  007E18  D007               	goto	l648
  1174  007E1A  D7E1               	goto	l646
  1175  007E1C  060A               	decf	___xxtofl@exp,f,c
  1176  007E1E  90D8               	bcf	status,0,c
  1177  007E20  360B               	rlcf	___xxtofl@arg,f,c
  1178  007E22  360C               	rlcf	___xxtofl@arg+1,f,c
  1179  007E24  360D               	rlcf	___xxtofl@arg+2,f,c
  1180  007E26  360E               	rlcf	___xxtofl@arg+3,f,c
  1181  007E28                     l648:
  1182  007E28  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1183  007E2A  D003               	goto	u360
  1184  007E2C  0E02               	movlw	2
  1185  007E2E  600A               	cpfslt	___xxtofl@exp,c
  1186  007E30  D7F5               	goto	l649
  1187  007E32                     u360:
  1188  007E32  B00A               	btfsc	___xxtofl@exp,0,c
  1189  007E34  D008               	goto	l653
  1190  007E36  0EFF               	movlw	255
  1191  007E38  160B               	andwf	___xxtofl@arg,f,c
  1192  007E3A  0EFF               	movlw	255
  1193  007E3C  160C               	andwf	___xxtofl@arg+1,f,c
  1194  007E3E  0E7F               	movlw	127
  1195  007E40  160D               	andwf	___xxtofl@arg+2,f,c
  1196  007E42  0EFF               	movlw	255
  1197  007E44  160E               	andwf	___xxtofl@arg+3,f,c
  1198  007E46                     l653:
  1199  007E46  90D8               	bcf	status,0,c
  1200  007E48  320A               	rrcf	___xxtofl@exp,f,c
  1201  007E4A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1202  007E4E  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1203  007E50  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1204  007E52  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1205  007E54  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1206  007E58  6A07               	clrf	??___xxtofl+2,c
  1207  007E5A  6A06               	clrf	??___xxtofl+1,c
  1208  007E5C  6A05               	clrf	??___xxtofl,c
  1209  007E5E  5005               	movf	??___xxtofl,w,c
  1210  007E60  120B               	iorwf	___xxtofl@arg,f,c
  1211  007E62  5006               	movf	??___xxtofl+1,w,c
  1212  007E64  120C               	iorwf	___xxtofl@arg+1,f,c
  1213  007E66  5007               	movf	??___xxtofl+2,w,c
  1214  007E68  120D               	iorwf	___xxtofl@arg+2,f,c
  1215  007E6A  5008               	movf	??___xxtofl+3,w,c
  1216  007E6C  120E               	iorwf	___xxtofl@arg+3,f,c
  1217  007E6E  5009               	movf	___xxtofl@sign,w,c
  1218  007E70  A4D8               	btfss	status,2,c
  1219  007E72  AE04               	btfss	___xxtofl@val+3,7,c
  1220  007E74  D001               	goto	l654
  1221  007E76  8E0E               	bsf	___xxtofl@arg+3,7,c
  1222  007E78                     l654:
  1223  007E78  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1224  007E7C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1225  007E80  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1226  007E84  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1227  007E88  0012               	return	
  1228  007E8A                     __end_of___xxtofl:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function ___flge *****************
  1234 ;; Defined at:
  1235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  ff1             4   14[COMRAM] unsigned char 
  1238 ;;  ff2             4   18[COMRAM] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1250 ;;      Params:         8       0       0       0       0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1252 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1253 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1254 ;;Total ram usage:       12 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_wait00
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text8
  1264  007C1A                     __ptext8:
  1265                           	opt stack 0
  1266  007C1A                     ___flge:
  1267                           	opt stack 28
  1268                           
  1269                           ;incstack = 0
  1270  007C1A  0E00               	movlw	0
  1271  007C1C  140F               	andwf	___flge@ff1,w,c
  1272  007C1E  6E17               	movwf	??___flge& (0+255),c
  1273  007C20  0E00               	movlw	0
  1274  007C22  1410               	andwf	___flge@ff1+1,w,c
  1275  007C24  6E18               	movwf	(??___flge+1)& (0+255),c
  1276  007C26  0E80               	movlw	128
  1277  007C28  1411               	andwf	___flge@ff1+2,w,c
  1278  007C2A  6E19               	movwf	(??___flge+2)& (0+255),c
  1279  007C2C  0E7F               	movlw	127
  1280  007C2E  1412               	andwf	___flge@ff1+3,w,c
  1281  007C30  6E1A               	movwf	(??___flge+3)& (0+255),c
  1282  007C32  5017               	movf	??___flge,w,c
  1283  007C34  1018               	iorwf	??___flge+1,w,c
  1284  007C36  1019               	iorwf	??___flge+2,w,c
  1285  007C38  101A               	iorwf	??___flge+3,w,c
  1286  007C3A  A4D8               	btfss	status,2,c
  1287  007C3C  D008               	goto	l290
  1288  007C3E  0E00               	movlw	0
  1289  007C40  6E0F               	movwf	___flge@ff1,c
  1290  007C42  0E00               	movlw	0
  1291  007C44  6E10               	movwf	___flge@ff1+1,c
  1292  007C46  0E00               	movlw	0
  1293  007C48  6E11               	movwf	___flge@ff1+2,c
  1294  007C4A  0E00               	movlw	0
  1295  007C4C  6E12               	movwf	___flge@ff1+3,c
  1296  007C4E                     l290:
  1297  007C4E  0E00               	movlw	0
  1298  007C50  1413               	andwf	___flge@ff2,w,c
  1299  007C52  6E17               	movwf	??___flge& (0+255),c
  1300  007C54  0E00               	movlw	0
  1301  007C56  1414               	andwf	___flge@ff2+1,w,c
  1302  007C58  6E18               	movwf	(??___flge+1)& (0+255),c
  1303  007C5A  0E80               	movlw	128
  1304  007C5C  1415               	andwf	___flge@ff2+2,w,c
  1305  007C5E  6E19               	movwf	(??___flge+2)& (0+255),c
  1306  007C60  0E7F               	movlw	127
  1307  007C62  1416               	andwf	___flge@ff2+3,w,c
  1308  007C64  6E1A               	movwf	(??___flge+3)& (0+255),c
  1309  007C66  5017               	movf	??___flge,w,c
  1310  007C68  1018               	iorwf	??___flge+1,w,c
  1311  007C6A  1019               	iorwf	??___flge+2,w,c
  1312  007C6C  101A               	iorwf	??___flge+3,w,c
  1313  007C6E  A4D8               	btfss	status,2,c
  1314  007C70  D008               	goto	l291
  1315  007C72  0E00               	movlw	0
  1316  007C74  6E13               	movwf	___flge@ff2,c
  1317  007C76  0E00               	movlw	0
  1318  007C78  6E14               	movwf	___flge@ff2+1,c
  1319  007C7A  0E00               	movlw	0
  1320  007C7C  6E15               	movwf	___flge@ff2+2,c
  1321  007C7E  0E00               	movlw	0
  1322  007C80  6E16               	movwf	___flge@ff2+3,c
  1323  007C82                     l291:
  1324  007C82  AE12               	btfss	___flge@ff1+3,7,c
  1325  007C84  D01D               	goto	l292
  1326  007C86  C00F  F017         	movff	___flge@ff1,??___flge
  1327  007C8A  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1328  007C8E  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1329  007C92  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1330  007C96  1E17               	comf	??___flge,f,c
  1331  007C98  1E18               	comf	??___flge+1,f,c
  1332  007C9A  1E19               	comf	??___flge+2,f,c
  1333  007C9C  1E1A               	comf	??___flge+3,f,c
  1334  007C9E  2A17               	incf	??___flge,f,c
  1335  007CA0  0E00               	movlw	0
  1336  007CA2  2218               	addwfc	??___flge+1,f,c
  1337  007CA4  2219               	addwfc	??___flge+2,f,c
  1338  007CA6  221A               	addwfc	??___flge+3,f,c
  1339  007CA8  0E00               	movlw	0
  1340  007CAA  2417               	addwf	??___flge,w,c
  1341  007CAC  6E0F               	movwf	___flge@ff1,c
  1342  007CAE  0E00               	movlw	0
  1343  007CB0  2018               	addwfc	??___flge+1,w,c
  1344  007CB2  6E10               	movwf	___flge@ff1+1,c
  1345  007CB4  0E00               	movlw	0
  1346  007CB6  2019               	addwfc	??___flge+2,w,c
  1347  007CB8  6E11               	movwf	___flge@ff1+2,c
  1348  007CBA  0E80               	movlw	128
  1349  007CBC  201A               	addwfc	??___flge+3,w,c
  1350  007CBE  6E12               	movwf	___flge@ff1+3,c
  1351  007CC0                     l292:
  1352  007CC0  AE16               	btfss	___flge@ff2+3,7,c
  1353  007CC2  D01D               	goto	l293
  1354  007CC4  C013  F017         	movff	___flge@ff2,??___flge
  1355  007CC8  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1356  007CCC  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1357  007CD0  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1358  007CD4  1E17               	comf	??___flge,f,c
  1359  007CD6  1E18               	comf	??___flge+1,f,c
  1360  007CD8  1E19               	comf	??___flge+2,f,c
  1361  007CDA  1E1A               	comf	??___flge+3,f,c
  1362  007CDC  2A17               	incf	??___flge,f,c
  1363  007CDE  0E00               	movlw	0
  1364  007CE0  2218               	addwfc	??___flge+1,f,c
  1365  007CE2  2219               	addwfc	??___flge+2,f,c
  1366  007CE4  221A               	addwfc	??___flge+3,f,c
  1367  007CE6  0E00               	movlw	0
  1368  007CE8  2417               	addwf	??___flge,w,c
  1369  007CEA  6E13               	movwf	___flge@ff2,c
  1370  007CEC  0E00               	movlw	0
  1371  007CEE  2018               	addwfc	??___flge+1,w,c
  1372  007CF0  6E14               	movwf	___flge@ff2+1,c
  1373  007CF2  0E00               	movlw	0
  1374  007CF4  2019               	addwfc	??___flge+2,w,c
  1375  007CF6  6E15               	movwf	___flge@ff2+2,c
  1376  007CF8  0E80               	movlw	128
  1377  007CFA  201A               	addwfc	??___flge+3,w,c
  1378  007CFC  6E16               	movwf	___flge@ff2+3,c
  1379  007CFE                     l293:
  1380  007CFE  0E00               	movlw	0
  1381  007D00  1A0F               	xorwf	___flge@ff1,f,c
  1382  007D02  0E00               	movlw	0
  1383  007D04  1A10               	xorwf	___flge@ff1+1,f,c
  1384  007D06  0E00               	movlw	0
  1385  007D08  1A11               	xorwf	___flge@ff1+2,f,c
  1386  007D0A  0E80               	movlw	128
  1387  007D0C  1A12               	xorwf	___flge@ff1+3,f,c
  1388  007D0E  0E00               	movlw	0
  1389  007D10  1A13               	xorwf	___flge@ff2,f,c
  1390  007D12  0E00               	movlw	0
  1391  007D14  1A14               	xorwf	___flge@ff2+1,f,c
  1392  007D16  0E00               	movlw	0
  1393  007D18  1A15               	xorwf	___flge@ff2+2,f,c
  1394  007D1A  0E80               	movlw	128
  1395  007D1C  1A16               	xorwf	___flge@ff2+3,f,c
  1396  007D1E  5013               	movf	___flge@ff2,w,c
  1397  007D20  5C0F               	subwf	___flge@ff1,w,c
  1398  007D22  5014               	movf	___flge@ff2+1,w,c
  1399  007D24  5810               	subwfb	___flge@ff1+1,w,c
  1400  007D26  5015               	movf	___flge@ff2+2,w,c
  1401  007D28  5811               	subwfb	___flge@ff1+2,w,c
  1402  007D2A  5016               	movf	___flge@ff2+3,w,c
  1403  007D2C  5812               	subwfb	___flge@ff1+3,w,c
  1404  007D2E  B0D8               	btfsc	status,0,c
  1405  007D30  D002               	goto	l910
  1406  007D32  90D8               	bcf	status,0,c
  1407  007D34  0012               	return	
  1408  007D36                     l910:
  1409  007D36  80D8               	bsf	status,0,c
  1410  007D38  0012               	return	
  1411  007D3A                     __end_of___flge:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           status	equ	0xFD8
  1415                           
  1416 ;; *************** function _led_sens *****************
  1417 ;; Defined at:
  1418 ;;		line 61 in file "sample.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2   43[None  ] int 
  1425 ;; Registers used:
  1426 ;;		None
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text9
  1446  007A50                     __ptext9:
  1447                           	opt stack 0
  1448  007A50                     _led_sens:
  1449                           	opt stack 30
  1450                           
  1451                           ;sample.c: 63: PORTAbits.RA0 = PORTBbits.RB0;
  1452                           
  1453                           ;incstack = 0
  1454  007A50  A081               	btfss	3969,0,c	;volatile
  1455  007A52  D002               	bra	u195
  1456  007A54  8080               	bsf	3968,0,c	;volatile
  1457  007A56  D001               	bra	u197
  1458  007A58                     u195:
  1459  007A58  9080               	bcf	3968,0,c	;volatile
  1460  007A5A                     u197:
  1461                           
  1462                           ;sample.c: 64: PORTAbits.RA1 = PORTBbits.RB1;
  1463  007A5A  A281               	btfss	3969,1,c	;volatile
  1464  007A5C  D002               	bra	u205
  1465  007A5E  8280               	bsf	3968,1,c	;volatile
  1466  007A60  D001               	bra	u207
  1467  007A62                     u205:
  1468  007A62  9280               	bcf	3968,1,c	;volatile
  1469  007A64                     u207:
  1470                           
  1471                           ;sample.c: 65: PORTAbits.RA2 = PORTBbits.RB2;
  1472  007A64  A481               	btfss	3969,2,c	;volatile
  1473  007A66  D002               	bra	u215
  1474  007A68  8480               	bsf	3968,2,c	;volatile
  1475  007A6A  D001               	bra	u217
  1476  007A6C                     u215:
  1477  007A6C  9480               	bcf	3968,2,c	;volatile
  1478  007A6E                     u217:
  1479                           
  1480                           ;sample.c: 66: PORTAbits.RA3 = PORTBbits.RB3;
  1481  007A6E  A681               	btfss	3969,3,c	;volatile
  1482  007A70  D002               	bra	u225
  1483  007A72  8680               	bsf	3968,3,c	;volatile
  1484  007A74  D001               	bra	u227
  1485  007A76                     u225:
  1486  007A76  9680               	bcf	3968,3,c	;volatile
  1487  007A78                     u227:
  1488                           
  1489                           ;sample.c: 67: PORTAbits.RA4 = PORTBbits.RB4;
  1490  007A78  A881               	btfss	3969,4,c	;volatile
  1491  007A7A  D002               	bra	u235
  1492  007A7C  8880               	bsf	3968,4,c	;volatile
  1493  007A7E  D001               	bra	u237
  1494  007A80                     u235:
  1495  007A80  9880               	bcf	3968,4,c	;volatile
  1496  007A82                     u237:
  1497  007A82  0012               	return		;funcret
  1498  007A84                     __end_of_led_sens:
  1499                           	opt stack 0
  1500  0000                     tblptru	equ	0xFF8
  1501                           status	equ	0xFD8
  1502                           tblptru	equ	0xFF8
  1503                           status	equ	0xFD8
  1504                           
  1505                           	psect	rparam
  1506  0000                     tblptru	equ	0xFF8
  1507                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9440
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1888
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     22      22       1       35.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 27 21:16:57 2018

                       l21 7BD8                         l22 7BB6                         l23 7BCE  
                       l50 7EA6                         l53 7F3C                         l61 7ED2  
                       l70 7EF0                         l62 7ED8                         l54 7EB4  
                       l71 7EF6                         l63 7EDE                         l80 7F14  
                       l72 7EFC                         l56 7EBA                         l57 7EC0  
                       l49 7EAA                         l82 7F1A                         l74 7F02  
                       l58 7EC6                         l83 7F20                         l67 7EE4  
                       l59 7ECC                         l84 7F26                         l85 7F2C  
                       l69 7EEA                         l86 7F30                         l78 7F08  
                       l87 7F36                         l79 7F0E                        l290 7C4E  
                      l291 7C82                        l292 7CC0                        l293 7CFE  
                      l640 7DA6                        l642 7DB8                        l643 7DAC  
                      l653 7E46                        l645 7DF6                        l910 7D36  
                      l654 7E78                        l646 7DDE                        l638 7D78  
                      l639 7D88                        l648 7E28                        l649 7E1C  
                      l982 7BBE                        u205 7A62                        u215 7A6C  
                      u207 7A64                        u225 7A76                        u217 7A6E  
                      u410 7BD4                        u235 7A80                        u227 7A78  
                      u237 7A82                        u430 7EAE                        u360 7E32  
                      u195 7A58                        u197 7A5A                       _main 7E8A  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 004A            _small_left_down 7B18                      status 000FD8  
          __initialization 7A14               __end_of_main 8000                     ??_main 0023  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of___xxtofl 7E8A  
                   ___flge 7C1A           __end_of_led_sens 7A84                     _wait00 7BAC  
                   tblptru 000FF8    __end_of_small_left_down 7B62           __end_of_straight 7A50  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 7A14              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _small_right_down 7B62         __size_of_left_down 004A                    ?___flge 000F  
                  ?_wait00 001B                  ?___xxtofl 0001           ?_small_left_down 0001  
                ?_led_sens 0001                    __Hparam 0000                    __Lparam 0000  
          __size_of___flge 0120                  ?_straight 0001                    __pcinit 7A14  
                  __ramtop 0800            __size_of_wait00 006E          __end_of_left_down 7ACE  
                  __ptext0 7E8A                    __ptext1 7A1E                    __ptext2 7B62  
                  __ptext3 7B18                    __ptext4 7ACE                    __ptext5 7A84  
                  __ptext6 7BAC                    __ptext7 7D3A                    __ptext8 7C1A  
                  __ptext9 7A50                 ??___xxtofl 0005       end_of_initialization 7A14  
               ??_led_sens 0001              __Lmediumconst 0000                    wait00@i 0021  
                  wait00@j 001F                    wait00@k 001B                 _right_down 7ACE  
               ??_straight 0023                  _PORTAbits 000F80                  _PORTBbits 000F81  
            ___xxtofl@sign 0009   __end_of_small_right_down 7BAC             __end_of___flge 7D3A  
           __end_of_wait00 7C1A        start_initialization 7A14                ?_right_down 0001  
                 ??___flge 0017                   ??_wait00 001F          __size_of___xxtofl 0150  
        __size_of_led_sens 0034          __size_of_straight 0032                  _left_down 7A84  
      __size_of_right_down 004A   __size_of_small_left_down 004A                 ?_left_down 0001  
                 __Hrparam 0000                   __Lrparam 0000          ?_small_right_down 0001  
       ??_small_right_down 0023                   ___xxtofl 7D3A                   _led_sens 7A50  
            __size_of_main 0176               ??_right_down 0023          ??_small_left_down 0023  
                 _straight 7A1E                ??_left_down 0023         __end_of_right_down 7B18  
