

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 22 21:37:01 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2553 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTB	set	3969
    51  0000                     _PORTA	set	3968
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _TRISA	set	3986
    55  0000                     _ADCON1	set	4033
    56  0000                     _PORTBbits	set	3969
    57  0000                     _PORTAbits	set	3968
    58  0000                     _PORTC	set	3970
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  007EB0                     __pcinit:
    64                           	opt stack 0
    65  007EB0                     start_initialization:
    66                           	opt stack 0
    67  007EB0                     __initialization:
    68                           	opt stack 0
    69  007EB0                     end_of_initialization:
    70                           	opt stack 0
    71  007EB0                     __end_of__initialization:
    72                           	opt stack 0
    73  007EB0  0100               	movlb	0
    74  007EB2  EFD9  F03F         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMRAM
    77  000001                     __pcstackCOMRAM:
    78                           	opt stack 0
    79  000001                     wait00@k:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x0
    83  000001                     	ds	2
    84  000003                     ??_wait00:
    85                           
    86                           ; 1 bytes @ 0x2
    87  000003                     	ds	1
    88  000004                     wait00@j:
    89                           	opt stack 0
    90                           
    91                           ; 2 bytes @ 0x3
    92  000004                     	ds	2
    93  000006                     wait00@i:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x5
    97  000006                     	ds	2
    98  000008                     
    99                           ; 1 bytes @ 0x7
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 52 in file "sample.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;		None
   110 ;; Return value:  Size  Location     Type
   111 ;;                  2   42[None  ] int 
   112 ;; Registers used:
   113 ;;		wreg, status,2, status,0, cstack
   114 ;; Tracked objects:
   115 ;;		On entry : 0/0
   116 ;;		On exit  : 0/0
   117 ;;		Unchanged: 0/0
   118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   119 ;;      Params:         0       0       0       0       0       0       0       0       0
   120 ;;      Locals:         0       0       0       0       0       0       0       0       0
   121 ;;      Temps:          0       0       0       0       0       0       0       0       0
   122 ;;      Totals:         0       0       0       0       0       0       0       0       0
   123 ;;Total ram usage:        0 bytes
   124 ;; Hardware stack levels required when called:    2
   125 ;; This function calls:
   126 ;;		_led_sens
   127 ;;		_left_down
   128 ;;		_right_down
   129 ;;		_straight
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  007FB2                     __ptext0:
   137                           	opt stack 0
   138  007FB2                     _main:
   139                           	opt stack 29
   140                           
   141                           ;sample.c: 55: ADCON1 = 0x0F;
   142                           
   143                           ;incstack = 0
   144  007FB2  0E0F               	movlw	15
   145  007FB4  6EC1               	movwf	4033,c	;volatile
   146                           
   147                           ;sample.c: 58: TRISA = 0x20;
   148  007FB6  0E20               	movlw	32
   149  007FB8  6E92               	movwf	3986,c	;volatile
   150                           
   151                           ;sample.c: 59: TRISB = 0xFF;
   152  007FBA  6893               	setf	3987,c	;volatile
   153                           
   154                           ;sample.c: 60: TRISC = 0x00;
   155  007FBC  0E00               	movlw	0
   156  007FBE  6E94               	movwf	3988,c	;volatile
   157                           
   158                           ;sample.c: 63: PORTA = 0x00;
   159  007FC0  0E00               	movlw	0
   160  007FC2  6E80               	movwf	3968,c	;volatile
   161                           
   162                           ;sample.c: 64: PORTB = 0x00;
   163  007FC4  0E00               	movlw	0
   164  007FC6  6E81               	movwf	3969,c	;volatile
   165                           
   166                           ;sample.c: 65: PORTC = 0x00;
   167  007FC8  0E00               	movlw	0
   168  007FCA  6E82               	movwf	3970,c	;volatile
   169                           
   170                           ;sample.c: 68: while(PORTAbits.RA5==1){
   171  007FCC  D002               	goto	l43
   172  007FCE                     
   173                           ;sample.c: 69: led_sens();
   174  007FCE  EC9E  F03F         	call	_led_sens	;wreg free
   175  007FD2                     l43:
   176  007FD2  BA80               	btfsc	3968,5,c	;volatile
   177  007FD4  D7FC               	goto	l44
   178  007FD6                     u190:
   179                           
   180                           ;sample.c: 75: led_sens();
   181                           
   182                           ;sample.c: 70: }
   183                           ;sample.c: 74: while(1){
   184  007FD6  EC9E  F03F         	call	_led_sens	;wreg free
   185                           
   186                           ;sample.c: 76: if(PORTBbits.RB0==1 && PORTBbits.RB2==1 && PORTBbits.RB4==0){
   187  007FDA  B081               	btfsc	3969,0,c	;volatile
   188  007FDC  A481               	btfss	3969,2,c	;volatile
   189  007FDE  D005               	goto	l47
   190  007FE0  B881               	btfsc	3969,4,c	;volatile
   191  007FE2  D003               	goto	l47
   192                           
   193                           ;sample.c: 78: left_down();
   194  007FE4  EC6C  F03F         	call	_left_down	;wreg free
   195                           
   196                           ;sample.c: 79: }
   197  007FE8  D7F6               	goto	u190
   198  007FEA                     l47:
   199                           
   200                           ;sample.c: 80: else if(PORTBbits.RB0==0 && PORTBbits.RB2==1 && PORTBbits.RB4==1){
   201  007FEA  A081               	btfss	3969,0,c	;volatile
   202  007FEC  A481               	btfss	3969,2,c	;volatile
   203  007FEE  D005               	goto	l49
   204  007FF0  A881               	btfss	3969,4,c	;volatile
   205  007FF2  D003               	goto	l49
   206                           
   207                           ;sample.c: 82: right_down();
   208  007FF4  EC85  F03F         	call	_right_down	;wreg free
   209                           
   210                           ;sample.c: 83: }
   211  007FF8  D7EE               	goto	u190
   212  007FFA                     l49:
   213                           
   214                           ;sample.c: 84: else{
   215                           ;sample.c: 85: straight();
   216  007FFA  EC5B  F03F         	call	_straight	;wreg free
   217  007FFE  D7EB               	goto	u190
   218  008000                     __end_of_main:
   219                           	opt stack 0
   220                           
   221 ;; *************** function _straight *****************
   222 ;; Defined at:
   223 ;;		line 36 in file "sample.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  2   34[None  ] int 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   237 ;;      Params:         0       0       0       0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; Hardware stack levels required when called:    1
   244 ;; This function calls:
   245 ;;		_wait00
   246 ;; This function is called by:
   247 ;;		_main
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text1
   252  007EB6                     __ptext1:
   253                           	opt stack 0
   254  007EB6                     _straight:
   255                           	opt stack 29
   256                           
   257                           ;sample.c: 37: PORTC=0x03;
   258                           
   259                           ;incstack = 0
   260  007EB6  0E03               	movlw	3
   261  007EB8  6E82               	movwf	3970,c	;volatile
   262                           
   263                           ;sample.c: 38: wait00(8);
   264  007EBA  0E00               	movlw	0
   265  007EBC  6E02               	movwf	wait00@k+1,c
   266  007EBE  0E08               	movlw	8
   267  007EC0  6E01               	movwf	wait00@k,c
   268  007EC2  ECB8  F03F         	call	_wait00	;wreg free
   269                           
   270                           ;sample.c: 39: PORTC=0x00;
   271  007EC6  0E00               	movlw	0
   272  007EC8  6E82               	movwf	3970,c	;volatile
   273                           
   274                           ;sample.c: 40: wait00(20);
   275  007ECA  0E00               	movlw	0
   276  007ECC  6E02               	movwf	wait00@k+1,c
   277  007ECE  0E14               	movlw	20
   278  007ED0  6E01               	movwf	wait00@k,c
   279  007ED2  ECB8  F03F         	call	_wait00	;wreg free
   280  007ED6  0012               	return		;funcret
   281  007ED8                     __end_of_straight:
   282                           	opt stack 0
   283                           
   284 ;; *************** function _right_down *****************
   285 ;; Defined at:
   286 ;;		line 27 in file "sample.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  2   31[None  ] int 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   300 ;;      Params:         0       0       0       0       0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0       0       0       0       0
   303 ;;      Totals:         0       0       0       0       0       0       0       0       0
   304 ;;Total ram usage:        0 bytes
   305 ;; Hardware stack levels used:    1
   306 ;; Hardware stack levels required when called:    1
   307 ;; This function calls:
   308 ;;		_wait00
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text2
   315  007F0A                     __ptext2:
   316                           	opt stack 0
   317  007F0A                     _right_down:
   318                           	opt stack 29
   319                           
   320                           ;sample.c: 28: PORTC=0x03;
   321                           
   322                           ;incstack = 0
   323  007F0A  0E03               	movlw	3
   324  007F0C  6E82               	movwf	3970,c	;volatile
   325                           
   326                           ;sample.c: 29: wait00(3);
   327  007F0E  0E00               	movlw	0
   328  007F10  6E02               	movwf	wait00@k+1,c
   329  007F12  0E03               	movlw	3
   330  007F14  6E01               	movwf	wait00@k,c
   331  007F16  ECB8  F03F         	call	_wait00	;wreg free
   332                           
   333                           ;sample.c: 30: PORTC=0x02;
   334  007F1A  0E02               	movlw	2
   335  007F1C  6E82               	movwf	3970,c	;volatile
   336                           
   337                           ;sample.c: 31: wait00(5);
   338  007F1E  0E00               	movlw	0
   339  007F20  6E02               	movwf	wait00@k+1,c
   340  007F22  0E05               	movlw	5
   341  007F24  6E01               	movwf	wait00@k,c
   342  007F26  ECB8  F03F         	call	_wait00	;wreg free
   343                           
   344                           ;sample.c: 32: PORTC=0x00;
   345  007F2A  0E00               	movlw	0
   346  007F2C  6E82               	movwf	3970,c	;volatile
   347                           
   348                           ;sample.c: 33: wait00(20);
   349  007F2E  0E00               	movlw	0
   350  007F30  6E02               	movwf	wait00@k+1,c
   351  007F32  0E14               	movlw	20
   352  007F34  6E01               	movwf	wait00@k,c
   353  007F36  ECB8  F03F         	call	_wait00	;wreg free
   354  007F3A  0012               	return		;funcret
   355  007F3C                     __end_of_right_down:
   356                           	opt stack 0
   357                           
   358 ;; *************** function _left_down *****************
   359 ;; Defined at:
   360 ;;		line 18 in file "sample.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  2   28[None  ] int 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   374 ;;      Params:         0       0       0       0       0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    1
   381 ;; This function calls:
   382 ;;		_wait00
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text3
   389  007ED8                     __ptext3:
   390                           	opt stack 0
   391  007ED8                     _left_down:
   392                           	opt stack 29
   393                           
   394                           ;sample.c: 19: PORTC=0x03;
   395                           
   396                           ;incstack = 0
   397  007ED8  0E03               	movlw	3
   398  007EDA  6E82               	movwf	3970,c	;volatile
   399                           
   400                           ;sample.c: 20: wait00(3);
   401  007EDC  0E00               	movlw	0
   402  007EDE  6E02               	movwf	wait00@k+1,c
   403  007EE0  0E03               	movlw	3
   404  007EE2  6E01               	movwf	wait00@k,c
   405  007EE4  ECB8  F03F         	call	_wait00	;wreg free
   406                           
   407                           ;sample.c: 21: PORTC=0x01;
   408  007EE8  0E01               	movlw	1
   409  007EEA  6E82               	movwf	3970,c	;volatile
   410                           
   411                           ;sample.c: 22: wait00(5);
   412  007EEC  0E00               	movlw	0
   413  007EEE  6E02               	movwf	wait00@k+1,c
   414  007EF0  0E05               	movlw	5
   415  007EF2  6E01               	movwf	wait00@k,c
   416  007EF4  ECB8  F03F         	call	_wait00	;wreg free
   417                           
   418                           ;sample.c: 23: PORTC=0x00;
   419  007EF8  0E00               	movlw	0
   420  007EFA  6E82               	movwf	3970,c	;volatile
   421                           
   422                           ;sample.c: 24: wait00(20);
   423  007EFC  0E00               	movlw	0
   424  007EFE  6E02               	movwf	wait00@k+1,c
   425  007F00  0E14               	movlw	20
   426  007F02  6E01               	movwf	wait00@k,c
   427  007F04  ECB8  F03F         	call	_wait00	;wreg free
   428  007F08  0012               	return		;funcret
   429  007F0A                     __end_of_left_down:
   430                           	opt stack 0
   431                           
   432 ;; *************** function _wait00 *****************
   433 ;; Defined at:
   434 ;;		line 6 in file "sample.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  k               2    0[COMRAM] short 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  i               2    5[COMRAM] short 
   439 ;;  j               2    3[COMRAM] short 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  2    0[COMRAM] int 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   449 ;;      Params:         2       0       0       0       0       0       0       0       0
   450 ;;      Locals:         4       0       0       0       0       0       0       0       0
   451 ;;      Temps:          1       0       0       0       0       0       0       0       0
   452 ;;      Totals:         7       0       0       0       0       0       0       0       0
   453 ;;Total ram usage:        7 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_left_down
   459 ;;		_right_down
   460 ;;		_straight
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text4
   465  007F70                     __ptext4:
   466                           	opt stack 0
   467  007F70                     _wait00:
   468                           	opt stack 29
   469                           
   470                           ;sample.c: 9: short i;
   471                           ;sample.c: 10: short j;
   472                           ;sample.c: 11: for(j=0;j<k;j++){
   473                           
   474                           ;incstack = 0
   475  007F70  0E00               	movlw	0
   476  007F72  6E05               	movwf	wait00@j+1,c
   477  007F74  0E00               	movlw	0
   478  007F76  6E04               	movwf	wait00@j,c
   479  007F78  D011               	goto	l21
   480  007F7A                     
   481                           ;sample.c: 12: for(i=0;i<3000;i++){
   482  007F7A  0E00               	movlw	0
   483  007F7C  6E07               	movwf	wait00@i+1,c
   484  007F7E  0E00               	movlw	0
   485  007F80  6E06               	movwf	wait00@i,c
   486  007F82                     l749:
   487  007F82  BE07               	btfsc	wait00@i+1,7,c
   488  007F84  D006               	goto	l23
   489  007F86  0EB8               	movlw	184
   490  007F88  5C06               	subwf	wait00@i,w,c
   491  007F8A  0E0B               	movlw	11
   492  007F8C  5807               	subwfb	wait00@i+1,w,c
   493  007F8E  B0D8               	btfsc	status,0,c
   494  007F90  D003               	goto	u170
   495  007F92                     l23:
   496  007F92  4A06               	infsnz	wait00@i,f,c
   497  007F94  2A07               	incf	wait00@i+1,f,c
   498  007F96  D7F5               	goto	l749
   499  007F98                     u170:
   500  007F98  4A04               	infsnz	wait00@j,f,c
   501  007F9A  2A05               	incf	wait00@j+1,f,c
   502  007F9C                     l21:
   503  007F9C  5001               	movf	wait00@k,w,c
   504  007F9E  5C04               	subwf	wait00@j,w,c
   505  007FA0  5005               	movf	wait00@j+1,w,c
   506  007FA2  0A80               	xorlw	128
   507  007FA4  6E03               	movwf	??_wait00& (0+255),c
   508  007FA6  5002               	movf	wait00@k+1,w,c
   509  007FA8  0A80               	xorlw	128
   510  007FAA  5803               	subwfb	??_wait00& (0+255),w,c
   511  007FAC  B0D8               	btfsc	status,0,c
   512  007FAE  0012               	return	
   513  007FB0  D7E4               	goto	l22
   514  007FB2                     __end_of_wait00:
   515                           	opt stack 0
   516                           status	equ	0xFD8
   517                           
   518 ;; *************** function _led_sens *****************
   519 ;; Defined at:
   520 ;;		line 43 in file "sample.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  2   37[None  ] int 
   527 ;; Registers used:
   528 ;;		None
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   534 ;;      Params:         0       0       0       0       0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text5
   548  007F3C                     __ptext5:
   549                           	opt stack 0
   550  007F3C                     _led_sens:
   551                           	opt stack 30
   552                           
   553                           ;sample.c: 45: PORTAbits.RA0 = PORTBbits.RB0;
   554                           
   555                           ;incstack = 0
   556  007F3C  A081               	btfss	3969,0,c	;volatile
   557  007F3E  D002               	bra	u45
   558  007F40  8080               	bsf	3968,0,c	;volatile
   559  007F42  D001               	bra	u47
   560  007F44                     u45:
   561  007F44  9080               	bcf	3968,0,c	;volatile
   562  007F46                     u47:
   563                           
   564                           ;sample.c: 46: PORTAbits.RA1 = PORTBbits.RB1;
   565  007F46  A281               	btfss	3969,1,c	;volatile
   566  007F48  D002               	bra	u55
   567  007F4A  8280               	bsf	3968,1,c	;volatile
   568  007F4C  D001               	bra	u57
   569  007F4E                     u55:
   570  007F4E  9280               	bcf	3968,1,c	;volatile
   571  007F50                     u57:
   572                           
   573                           ;sample.c: 47: PORTAbits.RA2 = PORTBbits.RB2;
   574  007F50  A481               	btfss	3969,2,c	;volatile
   575  007F52  D002               	bra	u65
   576  007F54  8480               	bsf	3968,2,c	;volatile
   577  007F56  D001               	bra	u67
   578  007F58                     u65:
   579  007F58  9480               	bcf	3968,2,c	;volatile
   580  007F5A                     u67:
   581                           
   582                           ;sample.c: 48: PORTAbits.RA3 = PORTBbits.RB3;
   583  007F5A  A681               	btfss	3969,3,c	;volatile
   584  007F5C  D002               	bra	u75
   585  007F5E  8680               	bsf	3968,3,c	;volatile
   586  007F60  D001               	bra	u77
   587  007F62                     u75:
   588  007F62  9680               	bcf	3968,3,c	;volatile
   589  007F64                     u77:
   590                           
   591                           ;sample.c: 49: PORTAbits.RA4 = PORTBbits.RB4;
   592  007F64  A881               	btfss	3969,4,c	;volatile
   593  007F66  D002               	bra	u85
   594  007F68  8880               	bsf	3968,4,c	;volatile
   595  007F6A  D001               	bra	u87
   596  007F6C                     u85:
   597  007F6C  9880               	bcf	3968,4,c	;volatile
   598  007F6E                     u87:
   599  007F6E  0012               	return		;funcret
   600  007F70                     __end_of_led_sens:
   601                           	opt stack 0
   602  0000                     status	equ	0xFD8
   603                           status	equ	0xFD8
   604                           
   605                           	psect	rparam
   606  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _right_down->_wait00
    _left_down->_wait00

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2100
                           _led_sens
                          _left_down
                         _right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0     700
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0     700
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0     700
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               7     5      2     700
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
   _right_down
     _wait00
   _straight
     _wait00

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 22 21:37:01 2018

                     l21 7F9C                       l22 7F7A                       l23 7F92  
                     l43 7FD2                       l44 7FCE                       l47 7FEA  
                     l49 7FFA                       u45 7F44                       u55 7F4E  
                     u47 7F46                       u65 7F58                       u57 7F50  
                     u75 7F62                       u67 7F5A                       u85 7F6C  
                     u77 7F64                       u87 7F6E                      l749 7F82  
                    u170 7F98                      u190 7FD6                     _main 7FB2  
                   start 2000             ___param_bank 000000                    ?_main 0001  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  status 000FD8          __initialization 7EB0             __end_of_main 8000  
                 ??_main 0008            __activetblptr 000000                   _ADCON1 000FC1  
       __end_of_led_sens 7F70                   _wait00 7F70         __end_of_straight 7ED8  
             __accesstop 0060  __end_of__initialization 7EB0            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_left_down 0032                  ?_wait00 0001  
              ?_led_sens 0001                  __Hparam 0000                  __Lparam 0000  
              ?_straight 0001                  __pcinit 7EB0                  __ramtop 0800  
        __size_of_wait00 0042        __end_of_left_down 7F0A                  __ptext0 7FB2  
                __ptext1 7EB6                  __ptext2 7F0A                  __ptext3 7ED8  
                __ptext4 7F70                  __ptext5 7F3C     end_of_initialization 7EB0  
             ??_led_sens 0001                  wait00@i 0006                  wait00@j 0004  
                wait00@k 0001               _right_down 7F0A               ??_straight 0008  
              _PORTAbits 000F80                _PORTBbits 000F81           __end_of_wait00 7FB2  
    start_initialization 7EB0              ?_right_down 0001                 ??_wait00 0003  
      __size_of_led_sens 0034        __size_of_straight 0022                _left_down 7ED8  
    __size_of_right_down 0032               ?_left_down 0001                 __Hrparam 0000  
               __Lrparam 0000                 _led_sens 7F3C            __size_of_main 004E  
           ??_right_down 0008                 _straight 7EB6              ??_left_down 0008  
     __end_of_right_down 7F3C  
