

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 22 15:22:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2553 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTA	set	3968
    51  0000                     _TRISC	set	3988
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISA	set	3986
    54  0000                     _ADCON1	set	4033
    55  0000                     _PORTBbits	set	3969
    56  0000                     _PORTAbits	set	3968
    57  0000                     _PORTC	set	3970
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  007E98                     __pcinit:
    63                           	opt stack 0
    64  007E98                     start_initialization:
    65                           	opt stack 0
    66  007E98                     __initialization:
    67                           	opt stack 0
    68  007E98                     end_of_initialization:
    69                           	opt stack 0
    70  007E98                     __end_of__initialization:
    71                           	opt stack 0
    72  007E98  0100               	movlb	0
    73  007E9A  EF92  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	opt stack 0
    78  000001                     ??_led_sens:
    79  000001                     wait00@k:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x0
    83  000001                     	ds	2
    84  000003                     ??_wait00:
    85                           
    86                           ; 1 bytes @ 0x2
    87  000003                     	ds	1
    88  000004                     wait00@j:
    89                           	opt stack 0
    90                           
    91                           ; 2 bytes @ 0x3
    92  000004                     	ds	2
    93  000006                     wait00@i:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x5
    97  000006                     	ds	2
    98  000008                     
    99                           ; 1 bytes @ 0x7
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 56 in file "sample.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;		None
   110 ;; Return value:  Size  Location     Type
   111 ;;                  2   45[None  ] int 
   112 ;; Registers used:
   113 ;;		wreg, status,2, status,0, cstack
   114 ;; Tracked objects:
   115 ;;		On entry : 0/0
   116 ;;		On exit  : 0/0
   117 ;;		Unchanged: 0/0
   118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   119 ;;      Params:         0       0       0       0       0       0       0       0       0
   120 ;;      Locals:         0       0       0       0       0       0       0       0       0
   121 ;;      Temps:          0       0       0       0       0       0       0       0       0
   122 ;;      Totals:         0       0       0       0       0       0       0       0       0
   123 ;;Total ram usage:        0 bytes
   124 ;; Hardware stack levels required when called:    2
   125 ;; This function calls:
   126 ;;		_do_nothing
   127 ;;		_led_sens
   128 ;;		_right_down
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  007F24                     __ptext0:
   136                           	opt stack 0
   137  007F24                     _main:
   138                           	opt stack 29
   139                           
   140                           ;sample.c: 59: ADCON1 = 0x0F;
   141                           
   142                           ;incstack = 0
   143  007F24  0E0F               	movlw	15
   144  007F26  6EC1               	movwf	4033,c	;volatile
   145                           
   146                           ;sample.c: 62: TRISA = 0x20;
   147  007F28  0E20               	movlw	32
   148  007F2A  6E92               	movwf	3986,c	;volatile
   149                           
   150                           ;sample.c: 63: TRISB = 0xFF;
   151  007F2C  6893               	setf	3987,c	;volatile
   152                           
   153                           ;sample.c: 64: TRISC = 0x00;
   154  007F2E  0E00               	movlw	0
   155  007F30  6E94               	movwf	3988,c	;volatile
   156                           
   157                           ;sample.c: 67: PORTA = 0x00;
   158  007F32  0E00               	movlw	0
   159  007F34  6E80               	movwf	3968,c	;volatile
   160                           
   161                           ;sample.c: 68: PORTB = 0x00;
   162  007F36  0E00               	movlw	0
   163  007F38  6E81               	movwf	3969,c	;volatile
   164                           
   165                           ;sample.c: 69: PORTC = 0x00;
   166  007F3A  0E00               	movlw	0
   167  007F3C  6E82               	movwf	3970,c	;volatile
   168                           
   169                           ;sample.c: 72: while(PORTAbits.RA5==1){
   170  007F3E  D002               	goto	l46
   171  007F40                     
   172                           ;sample.c: 73: led_sens();
   173  007F40  ECBC  F03F         	call	_led_sens	;wreg free
   174  007F44                     l46:
   175  007F44  BA80               	btfsc	3968,5,c	;volatile
   176  007F46  D7FC               	goto	l47
   177  007F48                     u190:
   178                           
   179                           ;sample.c: 79: led_sens();
   180                           
   181                           ;sample.c: 74: }
   182                           ;sample.c: 78: while(1){
   183  007F48  ECBC  F03F         	call	_led_sens	;wreg free
   184                           
   185                           ;sample.c: 81: if(PORTBbits.RB0==0 && PORTBbits.RB2==0 && PORTBbits.RB3==0){
   186  007F4C  A081               	btfss	3969,0,c	;volatile
   187  007F4E  B481               	btfsc	3969,2,c	;volatile
   188  007F50  D002               	goto	l50
   189  007F52  A681               	btfss	3969,3,c	;volatile
   190  007F54  D7F9               	goto	u190
   191  007F56                     l50:
   192                           
   193                           ;sample.c: 94: else if(PORTBbits.RB0==0 && PORTBbits.RB2==1 && PORTBbits.RB3==1){
   194  007F56  A081               	btfss	3969,0,c	;volatile
   195  007F58  A481               	btfss	3969,2,c	;volatile
   196  007F5A  D009               	goto	l52
   197  007F5C  A681               	btfss	3969,3,c	;volatile
   198  007F5E  D007               	goto	l52
   199                           
   200                           ;sample.c: 96: right_down();
   201  007F60  EC58  F03F         	call	_right_down	;wreg free
   202                           
   203                           ;sample.c: 98: do_nothing();
   204  007F64  EC4F  F03F         	call	_do_nothing	;wreg free
   205                           
   206                           ;sample.c: 99: do_nothing();
   207  007F68  EC4F  F03F         	call	_do_nothing	;wreg free
   208                           
   209                           ;sample.c: 100: }
   210  007F6C  D7ED               	goto	u190
   211  007F6E                     l52:
   212                           
   213                           ;sample.c: 101: else{
   214                           ;sample.c: 103: right_down();
   215  007F6E  EC58  F03F         	call	_right_down	;wreg free
   216                           
   217                           ;sample.c: 104: do_nothing();
   218  007F72  EC4F  F03F         	call	_do_nothing	;wreg free
   219  007F76  D7E8               	goto	u190
   220  007F78                     __end_of_main:
   221                           	opt stack 0
   222                           
   223 ;; *************** function _right_down *****************
   224 ;; Defined at:
   225 ;;		line 26 in file "sample.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  2   31[None  ] int 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   239 ;;      Params:         0       0       0       0       0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; Hardware stack levels required when called:    1
   246 ;; This function calls:
   247 ;;		_wait00
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text1
   254  007EB0                     __ptext1:
   255                           	opt stack 0
   256  007EB0                     _right_down:
   257                           	opt stack 29
   258                           
   259                           ;sample.c: 27: PORTC=0x03;
   260                           
   261                           ;incstack = 0
   262  007EB0  0E03               	movlw	3
   263  007EB2  6E82               	movwf	3970,c	;volatile
   264                           
   265                           ;sample.c: 28: wait00(3);
   266  007EB4  0E00               	movlw	0
   267  007EB6  6E02               	movwf	wait00@k+1,c
   268  007EB8  0E03               	movlw	3
   269  007EBA  6E01               	movwf	wait00@k,c
   270  007EBC  EC71  F03F         	call	_wait00	;wreg free
   271                           
   272                           ;sample.c: 29: PORTC=0x02;
   273  007EC0  0E02               	movlw	2
   274  007EC2  6E82               	movwf	3970,c	;volatile
   275                           
   276                           ;sample.c: 30: wait00(5);
   277  007EC4  0E00               	movlw	0
   278  007EC6  6E02               	movwf	wait00@k+1,c
   279  007EC8  0E05               	movlw	5
   280  007ECA  6E01               	movwf	wait00@k,c
   281  007ECC  EC71  F03F         	call	_wait00	;wreg free
   282                           
   283                           ;sample.c: 31: PORTC=0x00;
   284  007ED0  0E00               	movlw	0
   285  007ED2  6E82               	movwf	3970,c	;volatile
   286                           
   287                           ;sample.c: 32: wait00(20);
   288  007ED4  0E00               	movlw	0
   289  007ED6  6E02               	movwf	wait00@k+1,c
   290  007ED8  0E14               	movlw	20
   291  007EDA  6E01               	movwf	wait00@k,c
   292  007EDC  EC71  F03F         	call	_wait00	;wreg free
   293  007EE0  0012               	return		;funcret
   294  007EE2                     __end_of_right_down:
   295                           	opt stack 0
   296                           
   297 ;; *************** function _led_sens *****************
   298 ;; Defined at:
   299 ;;		line 47 in file "sample.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  2   40[None  ] int 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   313 ;;      Params:         0       0       0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0
   315 ;;      Temps:          1       0       0       0       0       0       0       0       0
   316 ;;      Totals:         1       0       0       0       0       0       0       0       0
   317 ;;Total ram usage:        1 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text2
   327  007F78                     __ptext2:
   328                           	opt stack 0
   329  007F78                     _led_sens:
   330                           	opt stack 30
   331                           
   332                           ;sample.c: 49: PORTAbits.RA0 = ~PORTBbits.RB0;
   333                           
   334                           ;incstack = 0
   335  007F78  A081               	btfss	3969,0,c	;volatile
   336  007F7A  D002               	goto	u40
   337  007F7C  0E01               	movlw	1
   338  007F7E  D001               	goto	u46
   339  007F80                     u40:
   340  007F80  0E00               	movlw	0
   341  007F82                     u46:
   342  007F82  0AFF               	xorlw	255
   343  007F84  6E01               	movwf	??_led_sens& (0+255),c
   344  007F86  5080               	movf	3968,w,c	;volatile
   345  007F88  1801               	xorwf	??_led_sens,w,c
   346  007F8A  0BFE               	andlw	-2
   347  007F8C  1801               	xorwf	??_led_sens,w,c
   348  007F8E  6E80               	movwf	3968,c	;volatile
   349                           
   350                           ;sample.c: 50: PORTAbits.RA1 = ~PORTBbits.RB1;
   351  007F90  A281               	btfss	3969,1,c	;volatile
   352  007F92  D002               	goto	u50
   353  007F94  0E01               	movlw	1
   354  007F96  D001               	goto	u56
   355  007F98                     u50:
   356  007F98  0E00               	movlw	0
   357  007F9A                     u56:
   358  007F9A  0AFF               	xorlw	255
   359  007F9C  6E01               	movwf	??_led_sens& (0+255),c
   360  007F9E  4601               	rlncf	??_led_sens,f,c
   361  007FA0  5080               	movf	3968,w,c	;volatile
   362  007FA2  1801               	xorwf	??_led_sens,w,c
   363  007FA4  0BFD               	andlw	-3
   364  007FA6  1801               	xorwf	??_led_sens,w,c
   365  007FA8  6E80               	movwf	3968,c	;volatile
   366                           
   367                           ;sample.c: 51: PORTAbits.RA2 = ~PORTBbits.RB2;
   368  007FAA  A481               	btfss	3969,2,c	;volatile
   369  007FAC  D002               	goto	u60
   370  007FAE  0E01               	movlw	1
   371  007FB0  D001               	goto	u66
   372  007FB2                     u60:
   373  007FB2  0E00               	movlw	0
   374  007FB4                     u66:
   375  007FB4  0AFF               	xorlw	255
   376  007FB6  6E01               	movwf	??_led_sens& (0+255),c
   377  007FB8  4601               	rlncf	??_led_sens,f,c
   378  007FBA  4601               	rlncf	??_led_sens,f,c
   379  007FBC  5080               	movf	3968,w,c	;volatile
   380  007FBE  1801               	xorwf	??_led_sens,w,c
   381  007FC0  0BFB               	andlw	-5
   382  007FC2  1801               	xorwf	??_led_sens,w,c
   383  007FC4  6E80               	movwf	3968,c	;volatile
   384                           
   385                           ;sample.c: 52: PORTAbits.RA3 = ~PORTBbits.RB3;
   386  007FC6  A681               	btfss	3969,3,c	;volatile
   387  007FC8  D002               	goto	u70
   388  007FCA  0E01               	movlw	1
   389  007FCC  D001               	goto	u76
   390  007FCE                     u70:
   391  007FCE  0E00               	movlw	0
   392  007FD0                     u76:
   393  007FD0  0AFF               	xorlw	255
   394  007FD2  6E01               	movwf	??_led_sens& (0+255),c
   395  007FD4  4601               	rlncf	??_led_sens,f,c
   396  007FD6  4601               	rlncf	??_led_sens,f,c
   397  007FD8  4601               	rlncf	??_led_sens,f,c
   398  007FDA  5080               	movf	3968,w,c	;volatile
   399  007FDC  1801               	xorwf	??_led_sens,w,c
   400  007FDE  0BF7               	andlw	-9
   401  007FE0  1801               	xorwf	??_led_sens,w,c
   402  007FE2  6E80               	movwf	3968,c	;volatile
   403                           
   404                           ;sample.c: 53: PORTAbits.RA4 = ~PORTBbits.RB4;
   405  007FE4  A881               	btfss	3969,4,c	;volatile
   406  007FE6  D002               	goto	u80
   407  007FE8  0E01               	movlw	1
   408  007FEA  D001               	goto	u86
   409  007FEC                     u80:
   410  007FEC  0E00               	movlw	0
   411  007FEE                     u86:
   412  007FEE  0AFF               	xorlw	255
   413  007FF0  6E01               	movwf	??_led_sens& (0+255),c
   414  007FF2  3A01               	swapf	??_led_sens,f,c
   415  007FF4  5080               	movf	3968,w,c	;volatile
   416  007FF6  1801               	xorwf	??_led_sens,w,c
   417  007FF8  0BEF               	andlw	-17
   418  007FFA  1801               	xorwf	??_led_sens,w,c
   419  007FFC  6E80               	movwf	3968,c	;volatile
   420  007FFE  0012               	return		;funcret
   421  008000                     __end_of_led_sens:
   422                           	opt stack 0
   423                           
   424 ;; *************** function _do_nothing *****************
   425 ;; Defined at:
   426 ;;		line 42 in file "sample.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  2   37[None  ] int 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    1
   447 ;; This function calls:
   448 ;;		_wait00
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text3
   455  007E9E                     __ptext3:
   456                           	opt stack 0
   457  007E9E                     _do_nothing:
   458                           	opt stack 29
   459                           
   460                           ;sample.c: 43: PORTC=0x00;
   461                           
   462                           ;incstack = 0
   463  007E9E  0E00               	movlw	0
   464  007EA0  6E82               	movwf	3970,c	;volatile
   465                           
   466                           ;sample.c: 44: wait00(100);
   467  007EA2  0E00               	movlw	0
   468  007EA4  6E02               	movwf	wait00@k+1,c
   469  007EA6  0E64               	movlw	100
   470  007EA8  6E01               	movwf	wait00@k,c
   471  007EAA  EC71  F03F         	call	_wait00	;wreg free
   472  007EAE  0012               	return		;funcret
   473  007EB0                     __end_of_do_nothing:
   474                           	opt stack 0
   475                           
   476 ;; *************** function _wait00 *****************
   477 ;; Defined at:
   478 ;;		line 5 in file "sample.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  k               2    0[COMRAM] short 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  i               2    5[COMRAM] short 
   483 ;;  j               2    3[COMRAM] short 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  2    0[COMRAM] int 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         2       0       0       0       0       0       0       0       0
   494 ;;      Locals:         4       0       0       0       0       0       0       0       0
   495 ;;      Temps:          1       0       0       0       0       0       0       0       0
   496 ;;      Totals:         7       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        7 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_right_down
   503 ;;		_do_nothing
   504 ;;		_left_down
   505 ;;		_straight
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text4
   510  007EE2                     __ptext4:
   511                           	opt stack 0
   512  007EE2                     _wait00:
   513                           	opt stack 29
   514                           
   515                           ;sample.c: 8: short i;
   516                           ;sample.c: 9: short j;
   517                           ;sample.c: 10: for(j=0;j<k;j++){
   518                           
   519                           ;incstack = 0
   520  007EE2  0E00               	movlw	0
   521  007EE4  6E05               	movwf	wait00@j+1,c
   522  007EE6  0E00               	movlw	0
   523  007EE8  6E04               	movwf	wait00@j,c
   524  007EEA  D011               	goto	l21
   525  007EEC                     
   526                           ;sample.c: 11: for(i=0;i<3000;i++){
   527  007EEC  0E00               	movlw	0
   528  007EEE  6E07               	movwf	wait00@i+1,c
   529  007EF0  0E00               	movlw	0
   530  007EF2  6E06               	movwf	wait00@i,c
   531  007EF4                     l756:
   532  007EF4  BE07               	btfsc	wait00@i+1,7,c
   533  007EF6  D006               	goto	l23
   534  007EF8  0EB8               	movlw	184
   535  007EFA  5C06               	subwf	wait00@i,w,c
   536  007EFC  0E0B               	movlw	11
   537  007EFE  5807               	subwfb	wait00@i+1,w,c
   538  007F00  B0D8               	btfsc	status,0,c
   539  007F02  D003               	goto	u170
   540  007F04                     l23:
   541  007F04  4A06               	infsnz	wait00@i,f,c
   542  007F06  2A07               	incf	wait00@i+1,f,c
   543  007F08  D7F5               	goto	l756
   544  007F0A                     u170:
   545  007F0A  4A04               	infsnz	wait00@j,f,c
   546  007F0C  2A05               	incf	wait00@j+1,f,c
   547  007F0E                     l21:
   548  007F0E  5001               	movf	wait00@k,w,c
   549  007F10  5C04               	subwf	wait00@j,w,c
   550  007F12  5005               	movf	wait00@j+1,w,c
   551  007F14  0A80               	xorlw	128
   552  007F16  6E03               	movwf	??_wait00& (0+255),c
   553  007F18  5002               	movf	wait00@k+1,w,c
   554  007F1A  0A80               	xorlw	128
   555  007F1C  5803               	subwfb	??_wait00& (0+255),w,c
   556  007F1E  B0D8               	btfsc	status,0,c
   557  007F20  0012               	return	
   558  007F22  D7E4               	goto	l22
   559  007F24                     __end_of_wait00:
   560                           	opt stack 0
   561  0000                     status	equ	0xFD8
   562                           status	equ	0xFD8
   563                           
   564                           	psect	rparam
   565  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _right_down->_wait00
    _do_nothing->_wait00

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1552
                         _do_nothing
                           _led_sens
                         _right_down
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0     776
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_nothing                                           0     0      0     776
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               7     5      2     776
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_nothing
     _wait00
   _led_sens
   _right_down
     _wait00

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 22 15:22:49 2018

                     l21 7F0E                       l22 7EEC                       l23 7F04  
                     l50 7F56                       l52 7F6E                       l46 7F44  
                     l47 7F40                       u40 7F80                       u50 7F98  
                     u60 7FB2                       u70 7FCE                       u46 7F82  
                     u80 7FEC                       u56 7F9A                       u66 7FB4  
                     u76 7FD0                       u86 7FEE                      l756 7EF4  
                    u170 7F0A                      u190 7F48                     _main 7F24  
                   start 2000             ___param_bank 000000                    ?_main 0001  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  status 000FD8          __initialization 7E98             __end_of_main 7F78  
                 ??_main 0008            __activetblptr 000000                   _ADCON1 000FC1  
       __end_of_led_sens 8000                   _wait00 7EE2               __accesstop 0060  
__end_of__initialization 7E98            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_wait00 0001               _do_nothing 7E9E                ?_led_sens 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E98  
                __ramtop 0800          __size_of_wait00 0042                  __ptext0 7F24  
                __ptext1 7EB0                  __ptext2 7F78                  __ptext3 7E9E  
                __ptext4 7EE2     end_of_initialization 7E98               ??_led_sens 0001  
                wait00@i 0006                  wait00@j 0004                  wait00@k 0001  
             _right_down 7EB0                _PORTAbits 000F80                _PORTBbits 000F81  
            ?_do_nothing 0001           __end_of_wait00 7F24      start_initialization 7E98  
            ?_right_down 0001      __size_of_do_nothing 0012                 ??_wait00 0003  
      __size_of_led_sens 0088      __size_of_right_down 0032             ??_do_nothing 0008  
               __Hrparam 0000       __end_of_do_nothing 7EB0                 __Lrparam 0000  
               _led_sens 7F78            __size_of_main 0054             ??_right_down 0008  
     __end_of_right_down 7EE2  
