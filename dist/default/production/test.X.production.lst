

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 19 10:44:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2553 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTA	set	3968
    51  0000                     _TRISC	set	3988
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISA	set	3986
    54  0000                     _ADCON1	set	4033
    55  0000                     _PORTBbits	set	3969
    56  0000                     _PORTAbits	set	3968
    57  0000                     _PORTC	set	3970
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  007E8E                     __pcinit:
    63                           	opt stack 0
    64  007E8E                     start_initialization:
    65                           	opt stack 0
    66  007E8E                     __initialization:
    67                           	opt stack 0
    68  007E8E                     end_of_initialization:
    69                           	opt stack 0
    70  007E8E                     __end_of__initialization:
    71                           	opt stack 0
    72  007E8E  0100               	movlb	0
    73  007E90  EF8D  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	opt stack 0
    78  000001                     ??_led_sens:
    79  000001                     wait00@k:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x0
    83  000001                     	ds	2
    84  000003                     ??_wait00:
    85                           
    86                           ; 1 bytes @ 0x2
    87  000003                     	ds	1
    88  000004                     wait00@j:
    89                           	opt stack 0
    90                           
    91                           ; 2 bytes @ 0x3
    92  000004                     	ds	2
    93  000006                     wait00@i:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x5
    97  000006                     	ds	2
    98  000008                     
    99                           ; 1 bytes @ 0x7
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 56 in file "sample.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;		None
   110 ;; Return value:  Size  Location     Type
   111 ;;                  2   45[None  ] int 
   112 ;; Registers used:
   113 ;;		wreg, status,2, status,0, cstack
   114 ;; Tracked objects:
   115 ;;		On entry : 0/0
   116 ;;		On exit  : 0/0
   117 ;;		Unchanged: 0/0
   118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   119 ;;      Params:         0       0       0       0       0       0       0       0       0
   120 ;;      Locals:         0       0       0       0       0       0       0       0       0
   121 ;;      Temps:          0       0       0       0       0       0       0       0       0
   122 ;;      Totals:         0       0       0       0       0       0       0       0       0
   123 ;;Total ram usage:        0 bytes
   124 ;; Hardware stack levels required when called:    2
   125 ;; This function calls:
   126 ;;		_do_nothing
   127 ;;		_led_sens
   128 ;;		_right_down
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  007F1A                     __ptext0:
   136                           	opt stack 0
   137  007F1A                     _main:
   138                           	opt stack 29
   139                           
   140                           ;sample.c: 59: ADCON1 = 0x0F;
   141                           
   142                           ;incstack = 0
   143  007F1A  0E0F               	movlw	15
   144  007F1C  6EC1               	movwf	4033,c	;volatile
   145                           
   146                           ;sample.c: 62: TRISA = 0x20;
   147  007F1E  0E20               	movlw	32
   148  007F20  6E92               	movwf	3986,c	;volatile
   149                           
   150                           ;sample.c: 63: TRISB = 0xFF;
   151  007F22  6893               	setf	3987,c	;volatile
   152                           
   153                           ;sample.c: 64: TRISC = 0x00;
   154  007F24  0E00               	movlw	0
   155  007F26  6E94               	movwf	3988,c	;volatile
   156                           
   157                           ;sample.c: 67: PORTA = 0x00;
   158  007F28  0E00               	movlw	0
   159  007F2A  6E80               	movwf	3968,c	;volatile
   160                           
   161                           ;sample.c: 68: PORTB = 0x00;
   162  007F2C  0E00               	movlw	0
   163  007F2E  6E81               	movwf	3969,c	;volatile
   164                           
   165                           ;sample.c: 69: PORTC = 0x00;
   166  007F30  0E00               	movlw	0
   167  007F32  6E82               	movwf	3970,c	;volatile
   168                           
   169                           ;sample.c: 72: while(PORTAbits.RA5==1){
   170  007F34  D002               	goto	l46
   171  007F36                     
   172                           ;sample.c: 73: led_sens();
   173  007F36  ECBC  F03F         	call	_led_sens	;wreg free
   174  007F3A                     l46:
   175  007F3A  BA80               	btfsc	3968,5,c	;volatile
   176  007F3C  D7FC               	goto	l47
   177  007F3E                     u190:
   178                           
   179                           ;sample.c: 79: led_sens();
   180                           
   181                           ;sample.c: 74: }
   182                           ;sample.c: 78: while(1){
   183  007F3E  ECBC  F03F         	call	_led_sens	;wreg free
   184                           
   185                           ;sample.c: 81: if(PORTBbits.RB0==0 && PORTBbits.RB2==0 && PORTBbits.RB3==0){
   186  007F42  A081               	btfss	3969,0,c	;volatile
   187  007F44  B481               	btfsc	3969,2,c	;volatile
   188  007F46  D009               	goto	l50
   189  007F48  B681               	btfsc	3969,3,c	;volatile
   190  007F4A  D007               	goto	l50
   191                           
   192                           ;sample.c: 90: PORTC=0x00;
   193  007F4C  0E00               	movlw	0
   194  007F4E  6E82               	movwf	3970,c	;volatile
   195                           
   196                           ;sample.c: 91: PORTC=0x01;
   197  007F50  0E01               	movlw	1
   198  007F52  6E82               	movwf	3970,c	;volatile
   199                           
   200                           ;sample.c: 92: PORTC=0x02;
   201  007F54  0E02               	movlw	2
   202  007F56  6E82               	movwf	3970,c	;volatile
   203                           
   204                           ;sample.c: 93: }
   205  007F58  D7F2               	goto	u190
   206  007F5A                     l50:
   207                           
   208                           ;sample.c: 94: else if(PORTBbits.RB0==0 && PORTBbits.RB2==1 && PORTBbits.RB3==1){
   209  007F5A  A081               	btfss	3969,0,c	;volatile
   210  007F5C  A481               	btfss	3969,2,c	;volatile
   211  007F5E  D009               	goto	l52
   212  007F60  A681               	btfss	3969,3,c	;volatile
   213  007F62  D007               	goto	l52
   214                           
   215                           ;sample.c: 96: right_down();
   216  007F64  EC53  F03F         	call	_right_down	;wreg free
   217                           
   218                           ;sample.c: 98: do_nothing();
   219  007F68  EC4A  F03F         	call	_do_nothing	;wreg free
   220                           
   221                           ;sample.c: 99: do_nothing();
   222  007F6C  EC4A  F03F         	call	_do_nothing	;wreg free
   223                           
   224                           ;sample.c: 100: }
   225  007F70  D7E6               	goto	u190
   226  007F72                     l52:
   227                           
   228                           ;sample.c: 101: else{
   229                           ;sample.c: 103: right_down();
   230  007F72  EC53  F03F         	call	_right_down	;wreg free
   231  007F76  D7E3               	goto	u190
   232  007F78                     __end_of_main:
   233                           	opt stack 0
   234                           
   235 ;; *************** function _right_down *****************
   236 ;; Defined at:
   237 ;;		line 26 in file "sample.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  2   31[None  ] int 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   251 ;;      Params:         0       0       0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used:    1
   257 ;; Hardware stack levels required when called:    1
   258 ;; This function calls:
   259 ;;		_wait00
   260 ;; This function is called by:
   261 ;;		_main
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text1
   266  007EA6                     __ptext1:
   267                           	opt stack 0
   268  007EA6                     _right_down:
   269                           	opt stack 29
   270                           
   271                           ;sample.c: 27: PORTC=0x03;
   272                           
   273                           ;incstack = 0
   274  007EA6  0E03               	movlw	3
   275  007EA8  6E82               	movwf	3970,c	;volatile
   276                           
   277                           ;sample.c: 28: wait00(3);
   278  007EAA  0E00               	movlw	0
   279  007EAC  6E02               	movwf	wait00@k+1,c
   280  007EAE  0E03               	movlw	3
   281  007EB0  6E01               	movwf	wait00@k,c
   282  007EB2  EC6C  F03F         	call	_wait00	;wreg free
   283                           
   284                           ;sample.c: 29: PORTC=0x02;
   285  007EB6  0E02               	movlw	2
   286  007EB8  6E82               	movwf	3970,c	;volatile
   287                           
   288                           ;sample.c: 30: wait00(5);
   289  007EBA  0E00               	movlw	0
   290  007EBC  6E02               	movwf	wait00@k+1,c
   291  007EBE  0E05               	movlw	5
   292  007EC0  6E01               	movwf	wait00@k,c
   293  007EC2  EC6C  F03F         	call	_wait00	;wreg free
   294                           
   295                           ;sample.c: 31: PORTC=0x00;
   296  007EC6  0E00               	movlw	0
   297  007EC8  6E82               	movwf	3970,c	;volatile
   298                           
   299                           ;sample.c: 32: wait00(20);
   300  007ECA  0E00               	movlw	0
   301  007ECC  6E02               	movwf	wait00@k+1,c
   302  007ECE  0E14               	movlw	20
   303  007ED0  6E01               	movwf	wait00@k,c
   304  007ED2  EC6C  F03F         	call	_wait00	;wreg free
   305  007ED6  0012               	return		;funcret
   306  007ED8                     __end_of_right_down:
   307                           	opt stack 0
   308                           
   309 ;; *************** function _led_sens *****************
   310 ;; Defined at:
   311 ;;		line 47 in file "sample.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  2   40[None  ] int 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   325 ;;      Params:         0       0       0       0       0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0
   327 ;;      Temps:          1       0       0       0       0       0       0       0       0
   328 ;;      Totals:         1       0       0       0       0       0       0       0       0
   329 ;;Total ram usage:        1 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text2
   339  007F78                     __ptext2:
   340                           	opt stack 0
   341  007F78                     _led_sens:
   342                           	opt stack 30
   343                           
   344                           ;sample.c: 49: PORTAbits.RA0 = ~PORTBbits.RB0;
   345                           
   346                           ;incstack = 0
   347  007F78  A081               	btfss	3969,0,c	;volatile
   348  007F7A  D002               	goto	u40
   349  007F7C  0E01               	movlw	1
   350  007F7E  D001               	goto	u46
   351  007F80                     u40:
   352  007F80  0E00               	movlw	0
   353  007F82                     u46:
   354  007F82  0AFF               	xorlw	255
   355  007F84  6E01               	movwf	??_led_sens& (0+255),c
   356  007F86  5080               	movf	3968,w,c	;volatile
   357  007F88  1801               	xorwf	??_led_sens,w,c
   358  007F8A  0BFE               	andlw	-2
   359  007F8C  1801               	xorwf	??_led_sens,w,c
   360  007F8E  6E80               	movwf	3968,c	;volatile
   361                           
   362                           ;sample.c: 50: PORTAbits.RA1 = ~PORTBbits.RB1;
   363  007F90  A281               	btfss	3969,1,c	;volatile
   364  007F92  D002               	goto	u50
   365  007F94  0E01               	movlw	1
   366  007F96  D001               	goto	u56
   367  007F98                     u50:
   368  007F98  0E00               	movlw	0
   369  007F9A                     u56:
   370  007F9A  0AFF               	xorlw	255
   371  007F9C  6E01               	movwf	??_led_sens& (0+255),c
   372  007F9E  4601               	rlncf	??_led_sens,f,c
   373  007FA0  5080               	movf	3968,w,c	;volatile
   374  007FA2  1801               	xorwf	??_led_sens,w,c
   375  007FA4  0BFD               	andlw	-3
   376  007FA6  1801               	xorwf	??_led_sens,w,c
   377  007FA8  6E80               	movwf	3968,c	;volatile
   378                           
   379                           ;sample.c: 51: PORTAbits.RA2 = ~PORTBbits.RB2;
   380  007FAA  A481               	btfss	3969,2,c	;volatile
   381  007FAC  D002               	goto	u60
   382  007FAE  0E01               	movlw	1
   383  007FB0  D001               	goto	u66
   384  007FB2                     u60:
   385  007FB2  0E00               	movlw	0
   386  007FB4                     u66:
   387  007FB4  0AFF               	xorlw	255
   388  007FB6  6E01               	movwf	??_led_sens& (0+255),c
   389  007FB8  4601               	rlncf	??_led_sens,f,c
   390  007FBA  4601               	rlncf	??_led_sens,f,c
   391  007FBC  5080               	movf	3968,w,c	;volatile
   392  007FBE  1801               	xorwf	??_led_sens,w,c
   393  007FC0  0BFB               	andlw	-5
   394  007FC2  1801               	xorwf	??_led_sens,w,c
   395  007FC4  6E80               	movwf	3968,c	;volatile
   396                           
   397                           ;sample.c: 52: PORTAbits.RA3 = ~PORTBbits.RB3;
   398  007FC6  A681               	btfss	3969,3,c	;volatile
   399  007FC8  D002               	goto	u70
   400  007FCA  0E01               	movlw	1
   401  007FCC  D001               	goto	u76
   402  007FCE                     u70:
   403  007FCE  0E00               	movlw	0
   404  007FD0                     u76:
   405  007FD0  0AFF               	xorlw	255
   406  007FD2  6E01               	movwf	??_led_sens& (0+255),c
   407  007FD4  4601               	rlncf	??_led_sens,f,c
   408  007FD6  4601               	rlncf	??_led_sens,f,c
   409  007FD8  4601               	rlncf	??_led_sens,f,c
   410  007FDA  5080               	movf	3968,w,c	;volatile
   411  007FDC  1801               	xorwf	??_led_sens,w,c
   412  007FDE  0BF7               	andlw	-9
   413  007FE0  1801               	xorwf	??_led_sens,w,c
   414  007FE2  6E80               	movwf	3968,c	;volatile
   415                           
   416                           ;sample.c: 53: PORTAbits.RA4 = ~PORTBbits.RB4;
   417  007FE4  A881               	btfss	3969,4,c	;volatile
   418  007FE6  D002               	goto	u80
   419  007FE8  0E01               	movlw	1
   420  007FEA  D001               	goto	u86
   421  007FEC                     u80:
   422  007FEC  0E00               	movlw	0
   423  007FEE                     u86:
   424  007FEE  0AFF               	xorlw	255
   425  007FF0  6E01               	movwf	??_led_sens& (0+255),c
   426  007FF2  3A01               	swapf	??_led_sens,f,c
   427  007FF4  5080               	movf	3968,w,c	;volatile
   428  007FF6  1801               	xorwf	??_led_sens,w,c
   429  007FF8  0BEF               	andlw	-17
   430  007FFA  1801               	xorwf	??_led_sens,w,c
   431  007FFC  6E80               	movwf	3968,c	;volatile
   432  007FFE  0012               	return		;funcret
   433  008000                     __end_of_led_sens:
   434                           	opt stack 0
   435                           
   436 ;; *************** function _do_nothing *****************
   437 ;; Defined at:
   438 ;;		line 42 in file "sample.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  2   37[None  ] int 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   452 ;;      Params:         0       0       0       0       0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used:    1
   458 ;; Hardware stack levels required when called:    1
   459 ;; This function calls:
   460 ;;		_wait00
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text3
   467  007E94                     __ptext3:
   468                           	opt stack 0
   469  007E94                     _do_nothing:
   470                           	opt stack 29
   471                           
   472                           ;sample.c: 43: PORTC=0x00;
   473                           
   474                           ;incstack = 0
   475  007E94  0E00               	movlw	0
   476  007E96  6E82               	movwf	3970,c	;volatile
   477                           
   478                           ;sample.c: 44: wait00(100);
   479  007E98  0E00               	movlw	0
   480  007E9A  6E02               	movwf	wait00@k+1,c
   481  007E9C  0E64               	movlw	100
   482  007E9E  6E01               	movwf	wait00@k,c
   483  007EA0  EC6C  F03F         	call	_wait00	;wreg free
   484  007EA4  0012               	return		;funcret
   485  007EA6                     __end_of_do_nothing:
   486                           	opt stack 0
   487                           
   488 ;; *************** function _wait00 *****************
   489 ;; Defined at:
   490 ;;		line 5 in file "sample.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  k               2    0[COMRAM] short 
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  i               2    5[COMRAM] short 
   495 ;;  j               2    3[COMRAM] short 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  2    0[COMRAM] int 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   505 ;;      Params:         2       0       0       0       0       0       0       0       0
   506 ;;      Locals:         4       0       0       0       0       0       0       0       0
   507 ;;      Temps:          1       0       0       0       0       0       0       0       0
   508 ;;      Totals:         7       0       0       0       0       0       0       0       0
   509 ;;Total ram usage:        7 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_right_down
   515 ;;		_do_nothing
   516 ;;		_left_down
   517 ;;		_straight
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text4
   522  007ED8                     __ptext4:
   523                           	opt stack 0
   524  007ED8                     _wait00:
   525                           	opt stack 29
   526                           
   527                           ;sample.c: 8: short i;
   528                           ;sample.c: 9: short j;
   529                           ;sample.c: 10: for(j=0;j<k;j++){
   530                           
   531                           ;incstack = 0
   532  007ED8  0E00               	movlw	0
   533  007EDA  6E05               	movwf	wait00@j+1,c
   534  007EDC  0E00               	movlw	0
   535  007EDE  6E04               	movwf	wait00@j,c
   536  007EE0  D011               	goto	l21
   537  007EE2                     
   538                           ;sample.c: 11: for(i=0;i<3000;i++){
   539  007EE2  0E00               	movlw	0
   540  007EE4  6E07               	movwf	wait00@i+1,c
   541  007EE6  0E00               	movlw	0
   542  007EE8  6E06               	movwf	wait00@i,c
   543  007EEA                     l756:
   544  007EEA  BE07               	btfsc	wait00@i+1,7,c
   545  007EEC  D006               	goto	l23
   546  007EEE  0EB8               	movlw	184
   547  007EF0  5C06               	subwf	wait00@i,w,c
   548  007EF2  0E0B               	movlw	11
   549  007EF4  5807               	subwfb	wait00@i+1,w,c
   550  007EF6  B0D8               	btfsc	status,0,c
   551  007EF8  D003               	goto	u170
   552  007EFA                     l23:
   553  007EFA  4A06               	infsnz	wait00@i,f,c
   554  007EFC  2A07               	incf	wait00@i+1,f,c
   555  007EFE  D7F5               	goto	l756
   556  007F00                     u170:
   557  007F00  4A04               	infsnz	wait00@j,f,c
   558  007F02  2A05               	incf	wait00@j+1,f,c
   559  007F04                     l21:
   560  007F04  5001               	movf	wait00@k,w,c
   561  007F06  5C04               	subwf	wait00@j,w,c
   562  007F08  5005               	movf	wait00@j+1,w,c
   563  007F0A  0A80               	xorlw	128
   564  007F0C  6E03               	movwf	??_wait00& (0+255),c
   565  007F0E  5002               	movf	wait00@k+1,w,c
   566  007F10  0A80               	xorlw	128
   567  007F12  5803               	subwfb	??_wait00& (0+255),w,c
   568  007F14  B0D8               	btfsc	status,0,c
   569  007F16  0012               	return	
   570  007F18  D7E4               	goto	l22
   571  007F1A                     __end_of_wait00:
   572                           	opt stack 0
   573  0000                     status	equ	0xFD8
   574                           status	equ	0xFD8
   575                           
   576                           	psect	rparam
   577  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _right_down->_wait00
    _do_nothing->_wait00

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1552
                         _do_nothing
                           _led_sens
                         _right_down
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0     776
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_nothing                                           0     0      0     776
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               7     5      2     776
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_nothing
     _wait00
   _led_sens
   _right_down
     _wait00

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 19 10:44:16 2018

                     l21 7F04                       l22 7EE2                       l23 7EFA  
                     l50 7F5A                       l52 7F72                       l46 7F3A  
                     l47 7F36                       u40 7F80                       u50 7F98  
                     u60 7FB2                       u70 7FCE                       u46 7F82  
                     u80 7FEC                       u56 7F9A                       u66 7FB4  
                     u76 7FD0                       u86 7FEE                      l756 7EEA  
                    u170 7F00                      u190 7F3E                     _main 7F1A  
                   start 2000             ___param_bank 000000                    ?_main 0001  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  status 000FD8          __initialization 7E8E             __end_of_main 7F78  
                 ??_main 0008            __activetblptr 000000                   _ADCON1 000FC1  
       __end_of_led_sens 8000                   _wait00 7ED8               __accesstop 0060  
__end_of__initialization 7E8E            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?_wait00 0001               _do_nothing 7E94                ?_led_sens 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E8E  
                __ramtop 0800          __size_of_wait00 0042                  __ptext0 7F1A  
                __ptext1 7EA6                  __ptext2 7F78                  __ptext3 7E94  
                __ptext4 7ED8     end_of_initialization 7E8E               ??_led_sens 0001  
                wait00@i 0006                  wait00@j 0004                  wait00@k 0001  
             _right_down 7EA6                _PORTAbits 000F80                _PORTBbits 000F81  
            ?_do_nothing 0001           __end_of_wait00 7F1A      start_initialization 7E8E  
            ?_right_down 0001      __size_of_do_nothing 0012                 ??_wait00 0003  
      __size_of_led_sens 0088      __size_of_right_down 0032             ??_do_nothing 0008  
               __Hrparam 0000       __end_of_do_nothing 7EA6                 __Lrparam 0000  
               _led_sens 7F78            __size_of_main 005E             ??_right_down 0008  
     __end_of_right_down 7ED8  
