

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 28 13:48:28 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F2553 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PORTB	set	3969
    56  0000                     _PORTA	set	3968
    57  0000                     _TRISC	set	3988
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISA	set	3986
    60  0000                     _ADCON1	set	4033
    61  0000                     _PORTBbits	set	3969
    62  0000                     _PORTAbits	set	3968
    63  0000                     _PORTC	set	3970
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68  00794A                     __pcinit:
    69                           	opt stack 0
    70  00794A                     start_initialization:
    71                           	opt stack 0
    72  00794A                     __initialization:
    73                           	opt stack 0
    74  00794A                     end_of_initialization:
    75                           	opt stack 0
    76  00794A                     __end_of__initialization:
    77                           	opt stack 0
    78  00794A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    79  00794C  6EF8               	movwf	tblptru,c
    80  00794E  0100               	movlb	0
    81  007950  EFF9  F03E         	goto	_main	;jump to C main() function
    82                           tblptru	equ	0xFF8
    83                           
    84                           	psect	cstackCOMRAM
    85  000001                     __pcstackCOMRAM:
    86                           	opt stack 0
    87  000001                     ?___xxtofl:
    88                           	opt stack 0
    89  000001                     ___xxtofl@val:
    90                           	opt stack 0
    91                           
    92                           ; 4 bytes @ 0x0
    93  000001                     	ds	4
    94  000005                     ??___xxtofl:
    95                           
    96                           ; 1 bytes @ 0x4
    97  000005                     	ds	4
    98  000009                     ___xxtofl@sign:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x8
   102  000009                     	ds	1
   103  00000A                     ___xxtofl@exp:
   104                           	opt stack 0
   105                           
   106                           ; 1 bytes @ 0x9
   107  00000A                     	ds	1
   108  00000B                     ___xxtofl@arg:
   109                           	opt stack 0
   110                           
   111                           ; 4 bytes @ 0xA
   112  00000B                     	ds	4
   113  00000F                     ___flge@ff1:
   114                           	opt stack 0
   115                           
   116                           ; 4 bytes @ 0xE
   117  00000F                     	ds	4
   118  000013                     ___flge@ff2:
   119                           	opt stack 0
   120                           
   121                           ; 4 bytes @ 0x12
   122  000013                     	ds	4
   123  000017                     ??___flge:
   124                           
   125                           ; 1 bytes @ 0x16
   126  000017                     	ds	4
   127  00001B                     wait00@k:
   128                           	opt stack 0
   129                           
   130                           ; 4 bytes @ 0x1A
   131  00001B                     	ds	4
   132  00001F                     wait00@j:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x1E
   136  00001F                     	ds	2
   137  000021                     wait00@i:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x20
   141  000021                     	ds	2
   142  000023                     tblptru	equ	0xFF8
   143                           
   144                           ; 1 bytes @ 0x22
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;; *************** function _main *****************
   149 ;; Defined at:
   150 ;;		line 77 in file "sample.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  2   51[None  ] int 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         0       0       0       0       0       0       0       0       0
   166 ;;      Temps:          0       0       0       0       0       0       0       0       0
   167 ;;      Totals:         0       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        0 bytes
   169 ;; Hardware stack levels required when called:    3
   170 ;; This function calls:
   171 ;;		_do_sth
   172 ;;		_led_sens
   173 ;;		_left_down
   174 ;;		_right_down
   175 ;;		_small_left_down
   176 ;;		_small_right_down
   177 ;;		_straight
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  007DF2                     __ptext0:
   185                           	opt stack 0
   186  007DF2                     _main:
   187                           	opt stack 28
   188                           
   189                           ;sample.c: 80: ADCON1 = 0x0F;
   190                           
   191                           ;incstack = 0
   192  007DF2  0E0F               	movlw	15
   193  007DF4  6EC1               	movwf	4033,c	;volatile
   194                           
   195                           ;sample.c: 83: TRISA = 0x20;
   196  007DF6  0E20               	movlw	32
   197  007DF8  6E92               	movwf	3986,c	;volatile
   198                           
   199                           ;sample.c: 84: TRISB = 0xFF;
   200  007DFA  6893               	setf	3987,c	;volatile
   201                           
   202                           ;sample.c: 85: TRISC = 0x00;
   203  007DFC  0E00               	movlw	0
   204  007DFE  6E94               	movwf	3988,c	;volatile
   205                           
   206                           ;sample.c: 88: PORTA = 0x00;
   207  007E00  0E00               	movlw	0
   208  007E02  6E80               	movwf	3968,c	;volatile
   209                           
   210                           ;sample.c: 89: PORTB = 0x00;
   211  007E04  0E00               	movlw	0
   212  007E06  6E81               	movwf	3969,c	;volatile
   213                           
   214                           ;sample.c: 90: PORTC = 0x00;
   215  007E08  0E00               	movlw	0
   216  007E0A  6E82               	movwf	3970,c	;volatile
   217                           
   218                           ;sample.c: 93: while(PORTAbits.RA5==1){
   219  007E0C  D002               	goto	l52
   220  007E0E                     
   221                           ;sample.c: 94: led_sens();
   222  007E0E  ECDC  F03C         	call	_led_sens	;wreg free
   223  007E12                     l52:
   224  007E12  BA80               	btfsc	3968,5,c	;volatile
   225  007E14  D7FC               	goto	l53
   226  007E16                     u1180:
   227                           
   228                           ;sample.c: 100: led_sens();
   229                           
   230                           ;sample.c: 95: }
   231                           ;sample.c: 99: while(1){
   232  007E16  ECDC  F03C         	call	_led_sens	;wreg free
   233                           
   234                           ;sample.c: 102: switch (PORTBbits.RB0) {
   235  007E1A  D0E6               	goto	l56
   236  007E1C                     l59:
   237                           
   238                           ;sample.c: 106: if (PORTBbits.RB2==0) {
   239  007E1C  B481               	btfsc	3969,2,c	;volatile
   240  007E1E  D018               	goto	l60
   241                           
   242                           ;sample.c: 107: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) straight();
   243  007E20  A681               	btfss	3969,3,c	;volatile
   244  007E22  B881               	btfsc	3969,4,c	;volatile
   245  007E24  D003               	goto	l61
   246  007E26  ECC3  F03C         	call	_straight	;wreg free
   247  007E2A  D7F5               	goto	u1180
   248  007E2C                     l61:
   249                           
   250                           ;sample.c: 108: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) right_down();
   251  007E2C  A681               	btfss	3969,3,c	;volatile
   252  007E2E  A881               	btfss	3969,4,c	;volatile
   253  007E30  D003               	goto	l63
   254  007E32  EC1B  F03D         	call	_right_down	;wreg free
   255  007E36  D7EF               	goto	u1180
   256  007E38                     l63:
   257                           
   258                           ;sample.c: 109: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) small_right_down();
   259  007E38  B681               	btfsc	3969,3,c	;volatile
   260  007E3A  B881               	btfsc	3969,4,c	;volatile
   261  007E3C  D003               	goto	l65
   262  007E3E  EC65  F03D         	call	_small_right_down	;wreg free
   263  007E42  D7E9               	goto	u1180
   264  007E44                     l65:
   265                           
   266                           ;sample.c: 110: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) right_down();
   267  007E44  B681               	btfsc	3969,3,c	;volatile
   268  007E46  A881               	btfss	3969,4,c	;volatile
   269  007E48  D7E6               	goto	u1180
   270  007E4A  EC1B  F03D         	call	_right_down	;wreg free
   271                           
   272                           ;sample.c: 111: } else if (PORTBbits.RB2==1) {
   273  007E4E  D7E3               	goto	u1180
   274  007E50                     l60:
   275  007E50  A481               	btfss	3969,2,c	;volatile
   276  007E52  D7E1               	goto	u1180
   277                           
   278                           ;sample.c: 112: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) straight();
   279  007E54  A681               	btfss	3969,3,c	;volatile
   280  007E56  B881               	btfsc	3969,4,c	;volatile
   281  007E58  D003               	goto	l70
   282  007E5A  ECC3  F03C         	call	_straight	;wreg free
   283  007E5E  D7DB               	goto	u1180
   284  007E60                     l70:
   285                           
   286                           ;sample.c: 113: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) do_sth();
   287  007E60  A681               	btfss	3969,3,c	;volatile
   288  007E62  A881               	btfss	3969,4,c	;volatile
   289  007E64  D003               	goto	l72
   290  007E66  ECAA  F03C         	call	_do_sth	;wreg free
   291  007E6A  D7D5               	goto	u1180
   292  007E6C                     l72:
   293                           
   294                           ;sample.c: 114: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) small_right_down();
   295  007E6C  B681               	btfsc	3969,3,c	;volatile
   296  007E6E  B881               	btfsc	3969,4,c	;volatile
   297  007E70  D003               	goto	l74
   298  007E72  EC65  F03D         	call	_small_right_down	;wreg free
   299  007E76  D7CF               	goto	u1180
   300  007E78                     l74:
   301                           
   302                           ;sample.c: 115: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) left_down();
   303  007E78  B681               	btfsc	3969,3,c	;volatile
   304  007E7A  A881               	btfss	3969,4,c	;volatile
   305  007E7C  D7CC               	goto	u1180
   306  007E7E  ECF6  F03C         	call	_left_down	;wreg free
   307                           
   308                           ;sample.c: 116: }
   309                           ;sample.c: 117: break;
   310  007E82  D7C9               	goto	u1180
   311  007E84                     l78:
   312                           
   313                           ;sample.c: 119: if (PORTBbits.RB2==0) {
   314  007E84  B481               	btfsc	3969,2,c	;volatile
   315  007E86  D018               	goto	l79
   316                           
   317                           ;sample.c: 120: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) small_left_down();
   318  007E88  A681               	btfss	3969,3,c	;volatile
   319  007E8A  B881               	btfsc	3969,4,c	;volatile
   320  007E8C  D003               	goto	l80
   321  007E8E  EC40  F03D         	call	_small_left_down	;wreg free
   322  007E92  D7C1               	goto	u1180
   323  007E94                     l80:
   324                           
   325                           ;sample.c: 121: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) do_sth();
   326  007E94  A681               	btfss	3969,3,c	;volatile
   327  007E96  A881               	btfss	3969,4,c	;volatile
   328  007E98  D003               	goto	l82
   329  007E9A  ECAA  F03C         	call	_do_sth	;wreg free
   330  007E9E  D7BB               	goto	u1180
   331  007EA0                     l82:
   332                           
   333                           ;sample.c: 122: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) do_sth();
   334  007EA0  B681               	btfsc	3969,3,c	;volatile
   335  007EA2  B881               	btfsc	3969,4,c	;volatile
   336  007EA4  D003               	goto	l84
   337  007EA6  ECAA  F03C         	call	_do_sth	;wreg free
   338  007EAA  D7B5               	goto	u1180
   339  007EAC                     l84:
   340                           
   341                           ;sample.c: 123: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) do_sth();
   342  007EAC  B681               	btfsc	3969,3,c	;volatile
   343  007EAE  A881               	btfss	3969,4,c	;volatile
   344  007EB0  D7B2               	goto	u1180
   345  007EB2  ECAA  F03C         	call	_do_sth	;wreg free
   346                           
   347                           ;sample.c: 124: } else if (PORTBbits.RB2==1) {
   348  007EB6  D7AF               	goto	u1180
   349  007EB8                     l79:
   350  007EB8  A481               	btfss	3969,2,c	;volatile
   351  007EBA  D7AD               	goto	u1180
   352                           
   353                           ;sample.c: 125: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) small_left_down();
   354  007EBC  A681               	btfss	3969,3,c	;volatile
   355  007EBE  B881               	btfsc	3969,4,c	;volatile
   356  007EC0  D003               	goto	l89
   357  007EC2  EC40  F03D         	call	_small_left_down	;wreg free
   358  007EC6  D7A7               	goto	u1180
   359  007EC8                     l89:
   360                           
   361                           ;sample.c: 126: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) do_sth();
   362  007EC8  A681               	btfss	3969,3,c	;volatile
   363  007ECA  A881               	btfss	3969,4,c	;volatile
   364  007ECC  D003               	goto	l91
   365  007ECE  ECAA  F03C         	call	_do_sth	;wreg free
   366  007ED2  D7A1               	goto	u1180
   367  007ED4                     l91:
   368                           
   369                           ;sample.c: 127: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) straight();
   370  007ED4  B681               	btfsc	3969,3,c	;volatile
   371  007ED6  B881               	btfsc	3969,4,c	;volatile
   372  007ED8  D003               	goto	l93
   373  007EDA  ECC3  F03C         	call	_straight	;wreg free
   374  007EDE  D79B               	goto	u1180
   375  007EE0                     l93:
   376                           
   377                           ;sample.c: 128: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) left_down();
   378  007EE0  B681               	btfsc	3969,3,c	;volatile
   379  007EE2  A881               	btfss	3969,4,c	;volatile
   380  007EE4  D798               	goto	u1180
   381  007EE6  ECF6  F03C         	call	_left_down	;wreg free
   382                           
   383                           ;sample.c: 132: }
   384                           
   385                           ;sample.c: 131: default: break;
   386                           
   387                           ;sample.c: 129: }
   388                           ;sample.c: 130: break;
   389  007EEA  D795               	goto	u1180
   390  007EEC  A281               	btfss	3969,1,c	;volatile
   391  007EEE  D002               	goto	u1550
   392  007EF0  0E01               	movlw	1
   393  007EF2  D001               	goto	u1556
   394  007EF4                     u1550:
   395  007EF4  0E00               	movlw	0
   396  007EF6                     u1556:
   397                           
   398                           ; Switch size 1, requested type "space"
   399                           ; Number of cases is 2, Range of values is 0 to 1
   400                           ; switch strategies available:
   401                           ; Name         Instructions Cycles
   402                           ; simple_byte            7     4 (average)
   403                           ;	Chosen strategy is simple_byte
   404  007EF6  0A00               	xorlw	0	; case 0
   405  007EF8  B4D8               	btfsc	status,2,c
   406  007EFA  D790               	goto	l59
   407  007EFC  0A01               	xorlw	1	; case 1
   408  007EFE  B4D8               	btfsc	status,2,c
   409  007F00  D7C1               	goto	l78
   410                           
   411                           ;sample.c: 133: break;
   412  007F02  D789               	goto	u1180
   413  007F04                     l100:
   414                           
   415                           ;sample.c: 137: if (PORTBbits.RB2==0) {
   416  007F04  B481               	btfsc	3969,2,c	;volatile
   417  007F06  D018               	goto	l101
   418                           
   419                           ;sample.c: 138: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) left_down();
   420  007F08  A681               	btfss	3969,3,c	;volatile
   421  007F0A  B881               	btfsc	3969,4,c	;volatile
   422  007F0C  D003               	goto	l102
   423  007F0E  ECF6  F03C         	call	_left_down	;wreg free
   424  007F12  D781               	goto	u1180
   425  007F14                     l102:
   426                           
   427                           ;sample.c: 139: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) straight();
   428  007F14  A681               	btfss	3969,3,c	;volatile
   429  007F16  A881               	btfss	3969,4,c	;volatile
   430  007F18  D003               	goto	l104
   431  007F1A  ECC3  F03C         	call	_straight	;wreg free
   432  007F1E  D77B               	goto	u1180
   433  007F20                     l104:
   434                           
   435                           ;sample.c: 140: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) do_sth();
   436  007F20  B681               	btfsc	3969,3,c	;volatile
   437  007F22  B881               	btfsc	3969,4,c	;volatile
   438  007F24  D003               	goto	l106
   439  007F26  ECAA  F03C         	call	_do_sth	;wreg free
   440  007F2A  D775               	goto	u1180
   441  007F2C                     l106:
   442                           
   443                           ;sample.c: 141: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) small_left_down();
   444  007F2C  B681               	btfsc	3969,3,c	;volatile
   445  007F2E  A881               	btfss	3969,4,c	;volatile
   446  007F30  D772               	goto	u1180
   447  007F32  EC40  F03D         	call	_small_left_down	;wreg free
   448                           
   449                           ;sample.c: 142: } else if (PORTBbits.RB2==1) {
   450  007F36  D76F               	goto	u1180
   451  007F38                     l101:
   452  007F38  A481               	btfss	3969,2,c	;volatile
   453  007F3A  D76D               	goto	u1180
   454                           
   455                           ;sample.c: 143: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) do_sth();
   456  007F3C  A681               	btfss	3969,3,c	;volatile
   457  007F3E  B881               	btfsc	3969,4,c	;volatile
   458  007F40  D003               	goto	l111
   459  007F42  ECAA  F03C         	call	_do_sth	;wreg free
   460  007F46  D767               	goto	u1180
   461  007F48                     l111:
   462                           
   463                           ;sample.c: 144: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) do_sth();
   464  007F48  A681               	btfss	3969,3,c	;volatile
   465  007F4A  A881               	btfss	3969,4,c	;volatile
   466  007F4C  D003               	goto	l113
   467  007F4E  ECAA  F03C         	call	_do_sth	;wreg free
   468  007F52  D761               	goto	u1180
   469  007F54                     l113:
   470                           
   471                           ;sample.c: 145: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) do_sth();
   472  007F54  B681               	btfsc	3969,3,c	;volatile
   473  007F56  B881               	btfsc	3969,4,c	;volatile
   474  007F58  D003               	goto	l115
   475  007F5A  ECAA  F03C         	call	_do_sth	;wreg free
   476  007F5E  D75B               	goto	u1180
   477  007F60                     l115:
   478                           
   479                           ;sample.c: 146: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) small_left_down();
   480  007F60  B681               	btfsc	3969,3,c	;volatile
   481  007F62  A881               	btfss	3969,4,c	;volatile
   482  007F64  D758               	goto	u1180
   483  007F66  EC40  F03D         	call	_small_left_down	;wreg free
   484                           
   485                           ;sample.c: 147: }
   486                           ;sample.c: 148: break;
   487  007F6A  D755               	goto	u1180
   488  007F6C                     l119:
   489                           
   490                           ;sample.c: 150: if (PORTBbits.RB2==0) {
   491  007F6C  B481               	btfsc	3969,2,c	;volatile
   492  007F6E  D018               	goto	l120
   493                           
   494                           ;sample.c: 151: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) left_down();
   495  007F70  A681               	btfss	3969,3,c	;volatile
   496  007F72  B881               	btfsc	3969,4,c	;volatile
   497  007F74  D003               	goto	l121
   498  007F76  ECF6  F03C         	call	_left_down	;wreg free
   499  007F7A  D74D               	goto	u1180
   500  007F7C                     l121:
   501                           
   502                           ;sample.c: 152: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) small_right_down();
   503  007F7C  A681               	btfss	3969,3,c	;volatile
   504  007F7E  A881               	btfss	3969,4,c	;volatile
   505  007F80  D003               	goto	l123
   506  007F82  EC65  F03D         	call	_small_right_down	;wreg free
   507  007F86  D747               	goto	u1180
   508  007F88                     l123:
   509                           
   510                           ;sample.c: 153: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) do_sth();
   511  007F88  B681               	btfsc	3969,3,c	;volatile
   512  007F8A  B881               	btfsc	3969,4,c	;volatile
   513  007F8C  D003               	goto	l125
   514  007F8E  ECAA  F03C         	call	_do_sth	;wreg free
   515  007F92  D741               	goto	u1180
   516  007F94                     l125:
   517                           
   518                           ;sample.c: 154: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) straight();
   519  007F94  B681               	btfsc	3969,3,c	;volatile
   520  007F96  A881               	btfss	3969,4,c	;volatile
   521  007F98  D73E               	goto	u1180
   522  007F9A  ECC3  F03C         	call	_straight	;wreg free
   523                           
   524                           ;sample.c: 155: } else if (PORTBbits.RB2==1) {
   525  007F9E  D73B               	goto	u1180
   526  007FA0                     l120:
   527  007FA0  A481               	btfss	3969,2,c	;volatile
   528  007FA2  D739               	goto	u1180
   529                           
   530                           ;sample.c: 156: if (PORTBbits.RB3==0 && PORTBbits.RB4==0) right_down();
   531  007FA4  A681               	btfss	3969,3,c	;volatile
   532  007FA6  B881               	btfsc	3969,4,c	;volatile
   533  007FA8  D003               	goto	l130
   534  007FAA  EC1B  F03D         	call	_right_down	;wreg free
   535  007FAE  D733               	goto	u1180
   536  007FB0                     l130:
   537                           
   538                           ;sample.c: 157: else if (PORTBbits.RB3==0 && PORTBbits.RB4==1) small_right_down();
   539  007FB0  A681               	btfss	3969,3,c	;volatile
   540  007FB2  A881               	btfss	3969,4,c	;volatile
   541  007FB4  D003               	goto	l132
   542  007FB6  EC65  F03D         	call	_small_right_down	;wreg free
   543  007FBA  D72D               	goto	u1180
   544  007FBC                     l132:
   545                           
   546                           ;sample.c: 158: else if (PORTBbits.RB3==1 && PORTBbits.RB4==0) right_down;
   547  007FBC  A681               	btfss	3969,3,c	;volatile
   548  007FBE  D002               	goto	l134
   549  007FC0  A881               	btfss	3969,4,c	;volatile
   550  007FC2  D729               	goto	u1180
   551  007FC4                     l134:
   552                           
   553                           ;sample.c: 159: else if (PORTBbits.RB3==1 && PORTBbits.RB4==1) straight();
   554  007FC4  B681               	btfsc	3969,3,c	;volatile
   555  007FC6  A881               	btfss	3969,4,c	;volatile
   556  007FC8  D726               	goto	u1180
   557  007FCA  ECC3  F03C         	call	_straight	;wreg free
   558                           
   559                           ;sample.c: 163: }
   560                           
   561                           ;sample.c: 162: default: break;
   562                           
   563                           ;sample.c: 160: }
   564                           ;sample.c: 161: break;
   565  007FCE  D723               	goto	u1180
   566  007FD0  A281               	btfss	3969,1,c	;volatile
   567  007FD2  D002               	goto	u1920
   568  007FD4  0E01               	movlw	1
   569  007FD6  D001               	goto	u1926
   570  007FD8                     u1920:
   571  007FD8  0E00               	movlw	0
   572  007FDA                     u1926:
   573                           
   574                           ; Switch size 1, requested type "space"
   575                           ; Number of cases is 2, Range of values is 0 to 1
   576                           ; switch strategies available:
   577                           ; Name         Instructions Cycles
   578                           ; simple_byte            7     4 (average)
   579                           ;	Chosen strategy is simple_byte
   580  007FDA  0A00               	xorlw	0	; case 0
   581  007FDC  B4D8               	btfsc	status,2,c
   582  007FDE  D792               	goto	l100
   583  007FE0  0A01               	xorlw	1	; case 1
   584  007FE2  B4D8               	btfsc	status,2,c
   585  007FE4  D7C3               	goto	l119
   586                           
   587                           ;sample.c: 166: }
   588                           
   589                           ;sample.c: 165: default: break;
   590                           
   591                           ;sample.c: 164: break;
   592  007FE6  D717               	goto	u1180
   593  007FE8                     l56:
   594  007FE8  A081               	btfss	3969,0,c	;volatile
   595  007FEA  D002               	goto	u1930
   596  007FEC  0E01               	movlw	1
   597  007FEE  D001               	goto	u1936
   598  007FF0                     u1930:
   599  007FF0  0E00               	movlw	0
   600  007FF2                     u1936:
   601                           
   602                           ; Switch size 1, requested type "space"
   603                           ; Number of cases is 2, Range of values is 0 to 1
   604                           ; switch strategies available:
   605                           ; Name         Instructions Cycles
   606                           ; simple_byte            7     4 (average)
   607                           ;	Chosen strategy is simple_byte
   608  007FF2  0A00               	xorlw	0	; case 0
   609  007FF4  B4D8               	btfsc	status,2,c
   610  007FF6  D77A               	goto	l58
   611  007FF8  0A01               	xorlw	1	; case 1
   612  007FFA  B4D8               	btfsc	status,2,c
   613  007FFC  D7E9               	goto	l99
   614  007FFE  D70B               	goto	u1180
   615  008000                     __end_of_main:
   616                           	opt stack 0
   617                           tblptru	equ	0xFF8
   618                           status	equ	0xFD8
   619                           
   620 ;; *************** function _straight *****************
   621 ;; Defined at:
   622 ;;		line 54 in file "sample.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  2   40[None  ] int 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   636 ;;      Params:         0       0       0       0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		_wait00
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text1
   651  007986                     __ptext1:
   652                           	opt stack 0
   653  007986                     _straight:
   654                           	opt stack 28
   655                           
   656                           ;sample.c: 55: PORTC=0x03;
   657                           
   658                           ;incstack = 0
   659  007986  0E03               	movlw	3
   660  007988  6E82               	movwf	3970,c	;volatile
   661                           
   662                           ;sample.c: 56: wait00(8);
   663  00798A  0E00               	movlw	0
   664  00798C  6E1B               	movwf	wait00@k,c
   665  00798E  0E00               	movlw	0
   666  007990  6E1C               	movwf	wait00@k+1,c
   667  007992  0E00               	movlw	0
   668  007994  6E1D               	movwf	wait00@k+2,c
   669  007996  0E41               	movlw	65
   670  007998  6E1E               	movwf	wait00@k+3,c
   671  00799A  EC8A  F03D         	call	_wait00	;wreg free
   672                           
   673                           ;sample.c: 57: PORTC=0x00;
   674  00799E  0E00               	movlw	0
   675  0079A0  6E82               	movwf	3970,c	;volatile
   676                           
   677                           ;sample.c: 58: wait00(20);
   678  0079A2  0E00               	movlw	0
   679  0079A4  6E1B               	movwf	wait00@k,c
   680  0079A6  0E00               	movlw	0
   681  0079A8  6E1C               	movwf	wait00@k+1,c
   682  0079AA  0EA0               	movlw	160
   683  0079AC  6E1D               	movwf	wait00@k+2,c
   684  0079AE  0E41               	movlw	65
   685  0079B0  6E1E               	movwf	wait00@k+3,c
   686  0079B2  EC8A  F03D         	call	_wait00	;wreg free
   687  0079B6  0012               	return		;funcret
   688  0079B8                     __end_of_straight:
   689                           	opt stack 0
   690                           tblptru	equ	0xFF8
   691                           status	equ	0xFD8
   692                           
   693 ;; *************** function _small_right_down *****************
   694 ;; Defined at:
   695 ;;		line 27 in file "sample.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  2   31[None  ] int 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   709 ;;      Params:         0       0       0       0       0       0       0       0       0
   710 ;;      Locals:         0       0       0       0       0       0       0       0       0
   711 ;;      Temps:          0       0       0       0       0       0       0       0       0
   712 ;;      Totals:         0       0       0       0       0       0       0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    2
   716 ;; This function calls:
   717 ;;		_wait00
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text2
   724  007ACA                     __ptext2:
   725                           	opt stack 0
   726  007ACA                     _small_right_down:
   727                           	opt stack 28
   728                           
   729                           ;sample.c: 28: PORTC=0x03;
   730                           
   731                           ;incstack = 0
   732  007ACA  0E03               	movlw	3
   733  007ACC  6E82               	movwf	3970,c	;volatile
   734                           
   735                           ;sample.c: 29: wait00(0.3);
   736  007ACE  0E9A               	movlw	154
   737  007AD0  6E1B               	movwf	wait00@k,c
   738  007AD2  0E99               	movlw	153
   739  007AD4  6E1C               	movwf	wait00@k+1,c
   740  007AD6  0E99               	movlw	153
   741  007AD8  6E1D               	movwf	wait00@k+2,c
   742  007ADA  0E3E               	movlw	62
   743  007ADC  6E1E               	movwf	wait00@k+3,c
   744  007ADE  EC8A  F03D         	call	_wait00	;wreg free
   745                           
   746                           ;sample.c: 30: PORTC=0x01;
   747  007AE2  0E01               	movlw	1
   748  007AE4  6E82               	movwf	3970,c	;volatile
   749                           
   750                           ;sample.c: 31: wait00(2);
   751  007AE6  0E00               	movlw	0
   752  007AE8  6E1B               	movwf	wait00@k,c
   753  007AEA  0E00               	movlw	0
   754  007AEC  6E1C               	movwf	wait00@k+1,c
   755  007AEE  0E00               	movlw	0
   756  007AF0  6E1D               	movwf	wait00@k+2,c
   757  007AF2  0E40               	movlw	64
   758  007AF4  6E1E               	movwf	wait00@k+3,c
   759  007AF6  EC8A  F03D         	call	_wait00	;wreg free
   760                           
   761                           ;sample.c: 32: PORTC=0x00;
   762  007AFA  0E00               	movlw	0
   763  007AFC  6E82               	movwf	3970,c	;volatile
   764                           
   765                           ;sample.c: 33: wait00(20);
   766  007AFE  0E00               	movlw	0
   767  007B00  6E1B               	movwf	wait00@k,c
   768  007B02  0E00               	movlw	0
   769  007B04  6E1C               	movwf	wait00@k+1,c
   770  007B06  0EA0               	movlw	160
   771  007B08  6E1D               	movwf	wait00@k+2,c
   772  007B0A  0E41               	movlw	65
   773  007B0C  6E1E               	movwf	wait00@k+3,c
   774  007B0E  EC8A  F03D         	call	_wait00	;wreg free
   775  007B12  0012               	return		;funcret
   776  007B14                     __end_of_small_right_down:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _small_left_down *****************
   782 ;; Defined at:
   783 ;;		line 45 in file "sample.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2   37[None  ] int 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    2
   804 ;; This function calls:
   805 ;;		_wait00
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text3
   812  007A80                     __ptext3:
   813                           	opt stack 0
   814  007A80                     _small_left_down:
   815                           	opt stack 28
   816                           
   817                           ;sample.c: 46: PORTC=0x03;
   818                           
   819                           ;incstack = 0
   820  007A80  0E03               	movlw	3
   821  007A82  6E82               	movwf	3970,c	;volatile
   822                           
   823                           ;sample.c: 47: wait00(0.3);
   824  007A84  0E9A               	movlw	154
   825  007A86  6E1B               	movwf	wait00@k,c
   826  007A88  0E99               	movlw	153
   827  007A8A  6E1C               	movwf	wait00@k+1,c
   828  007A8C  0E99               	movlw	153
   829  007A8E  6E1D               	movwf	wait00@k+2,c
   830  007A90  0E3E               	movlw	62
   831  007A92  6E1E               	movwf	wait00@k+3,c
   832  007A94  EC8A  F03D         	call	_wait00	;wreg free
   833                           
   834                           ;sample.c: 48: PORTC=0x02;
   835  007A98  0E02               	movlw	2
   836  007A9A  6E82               	movwf	3970,c	;volatile
   837                           
   838                           ;sample.c: 49: wait00(2);
   839  007A9C  0E00               	movlw	0
   840  007A9E  6E1B               	movwf	wait00@k,c
   841  007AA0  0E00               	movlw	0
   842  007AA2  6E1C               	movwf	wait00@k+1,c
   843  007AA4  0E00               	movlw	0
   844  007AA6  6E1D               	movwf	wait00@k+2,c
   845  007AA8  0E40               	movlw	64
   846  007AAA  6E1E               	movwf	wait00@k+3,c
   847  007AAC  EC8A  F03D         	call	_wait00	;wreg free
   848                           
   849                           ;sample.c: 50: PORTC=0x00;
   850  007AB0  0E00               	movlw	0
   851  007AB2  6E82               	movwf	3970,c	;volatile
   852                           
   853                           ;sample.c: 51: wait00(20);
   854  007AB4  0E00               	movlw	0
   855  007AB6  6E1B               	movwf	wait00@k,c
   856  007AB8  0E00               	movlw	0
   857  007ABA  6E1C               	movwf	wait00@k+1,c
   858  007ABC  0EA0               	movlw	160
   859  007ABE  6E1D               	movwf	wait00@k+2,c
   860  007AC0  0E41               	movlw	65
   861  007AC2  6E1E               	movwf	wait00@k+3,c
   862  007AC4  EC8A  F03D         	call	_wait00	;wreg free
   863  007AC8  0012               	return		;funcret
   864  007ACA                     __end_of_small_left_down:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _right_down *****************
   870 ;; Defined at:
   871 ;;		line 18 in file "sample.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2   28[None  ] int 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0       0       0       0       0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    2
   892 ;; This function calls:
   893 ;;		_wait00
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text4
   900  007A36                     __ptext4:
   901                           	opt stack 0
   902  007A36                     _right_down:
   903                           	opt stack 28
   904                           
   905                           ;sample.c: 19: PORTC=0x03;
   906                           
   907                           ;incstack = 0
   908  007A36  0E03               	movlw	3
   909  007A38  6E82               	movwf	3970,c	;volatile
   910                           
   911                           ;sample.c: 20: wait00(0.3);
   912  007A3A  0E9A               	movlw	154
   913  007A3C  6E1B               	movwf	wait00@k,c
   914  007A3E  0E99               	movlw	153
   915  007A40  6E1C               	movwf	wait00@k+1,c
   916  007A42  0E99               	movlw	153
   917  007A44  6E1D               	movwf	wait00@k+2,c
   918  007A46  0E3E               	movlw	62
   919  007A48  6E1E               	movwf	wait00@k+3,c
   920  007A4A  EC8A  F03D         	call	_wait00	;wreg free
   921                           
   922                           ;sample.c: 21: PORTC=0x01;
   923  007A4E  0E01               	movlw	1
   924  007A50  6E82               	movwf	3970,c	;volatile
   925                           
   926                           ;sample.c: 22: wait00(5);
   927  007A52  0E00               	movlw	0
   928  007A54  6E1B               	movwf	wait00@k,c
   929  007A56  0E00               	movlw	0
   930  007A58  6E1C               	movwf	wait00@k+1,c
   931  007A5A  0EA0               	movlw	160
   932  007A5C  6E1D               	movwf	wait00@k+2,c
   933  007A5E  0E40               	movlw	64
   934  007A60  6E1E               	movwf	wait00@k+3,c
   935  007A62  EC8A  F03D         	call	_wait00	;wreg free
   936                           
   937                           ;sample.c: 23: PORTC=0x00;
   938  007A66  0E00               	movlw	0
   939  007A68  6E82               	movwf	3970,c	;volatile
   940                           
   941                           ;sample.c: 24: wait00(20);
   942  007A6A  0E00               	movlw	0
   943  007A6C  6E1B               	movwf	wait00@k,c
   944  007A6E  0E00               	movlw	0
   945  007A70  6E1C               	movwf	wait00@k+1,c
   946  007A72  0EA0               	movlw	160
   947  007A74  6E1D               	movwf	wait00@k+2,c
   948  007A76  0E41               	movlw	65
   949  007A78  6E1E               	movwf	wait00@k+3,c
   950  007A7A  EC8A  F03D         	call	_wait00	;wreg free
   951  007A7E  0012               	return		;funcret
   952  007A80                     __end_of_right_down:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _left_down *****************
   958 ;; Defined at:
   959 ;;		line 36 in file "sample.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   34[None  ] int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		_wait00
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text5
   988  0079EC                     __ptext5:
   989                           	opt stack 0
   990  0079EC                     _left_down:
   991                           	opt stack 28
   992                           
   993                           ;sample.c: 37: PORTC=0x03;
   994                           
   995                           ;incstack = 0
   996  0079EC  0E03               	movlw	3
   997  0079EE  6E82               	movwf	3970,c	;volatile
   998                           
   999                           ;sample.c: 38: wait00(0.3);
  1000  0079F0  0E9A               	movlw	154
  1001  0079F2  6E1B               	movwf	wait00@k,c
  1002  0079F4  0E99               	movlw	153
  1003  0079F6  6E1C               	movwf	wait00@k+1,c
  1004  0079F8  0E99               	movlw	153
  1005  0079FA  6E1D               	movwf	wait00@k+2,c
  1006  0079FC  0E3E               	movlw	62
  1007  0079FE  6E1E               	movwf	wait00@k+3,c
  1008  007A00  EC8A  F03D         	call	_wait00	;wreg free
  1009                           
  1010                           ;sample.c: 39: PORTC=0x02;
  1011  007A04  0E02               	movlw	2
  1012  007A06  6E82               	movwf	3970,c	;volatile
  1013                           
  1014                           ;sample.c: 40: wait00(5);
  1015  007A08  0E00               	movlw	0
  1016  007A0A  6E1B               	movwf	wait00@k,c
  1017  007A0C  0E00               	movlw	0
  1018  007A0E  6E1C               	movwf	wait00@k+1,c
  1019  007A10  0EA0               	movlw	160
  1020  007A12  6E1D               	movwf	wait00@k+2,c
  1021  007A14  0E40               	movlw	64
  1022  007A16  6E1E               	movwf	wait00@k+3,c
  1023  007A18  EC8A  F03D         	call	_wait00	;wreg free
  1024                           
  1025                           ;sample.c: 41: PORTC=0x00;
  1026  007A1C  0E00               	movlw	0
  1027  007A1E  6E82               	movwf	3970,c	;volatile
  1028                           
  1029                           ;sample.c: 42: wait00(20);
  1030  007A20  0E00               	movlw	0
  1031  007A22  6E1B               	movwf	wait00@k,c
  1032  007A24  0E00               	movlw	0
  1033  007A26  6E1C               	movwf	wait00@k+1,c
  1034  007A28  0EA0               	movlw	160
  1035  007A2A  6E1D               	movwf	wait00@k+2,c
  1036  007A2C  0E41               	movlw	65
  1037  007A2E  6E1E               	movwf	wait00@k+3,c
  1038  007A30  EC8A  F03D         	call	_wait00	;wreg free
  1039  007A34  0012               	return		;funcret
  1040  007A36                     __end_of_left_down:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _led_sens *****************
  1046 ;; Defined at:
  1047 ;;		line 68 in file "sample.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2   46[None  ] int 
  1054 ;; Registers used:
  1055 ;;		None
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text6
  1075  0079B8                     __ptext6:
  1076                           	opt stack 0
  1077  0079B8                     _led_sens:
  1078                           	opt stack 30
  1079                           
  1080                           ;sample.c: 70: PORTAbits.RA0 = PORTBbits.RB0;
  1081                           
  1082                           ;incstack = 0
  1083  0079B8  A081               	btfss	3969,0,c	;volatile
  1084  0079BA  D002               	bra	u195
  1085  0079BC  8080               	bsf	3968,0,c	;volatile
  1086  0079BE  D001               	bra	u197
  1087  0079C0                     u195:
  1088  0079C0  9080               	bcf	3968,0,c	;volatile
  1089  0079C2                     u197:
  1090                           
  1091                           ;sample.c: 71: PORTAbits.RA1 = PORTBbits.RB1;
  1092  0079C2  A281               	btfss	3969,1,c	;volatile
  1093  0079C4  D002               	bra	u205
  1094  0079C6  8280               	bsf	3968,1,c	;volatile
  1095  0079C8  D001               	bra	u207
  1096  0079CA                     u205:
  1097  0079CA  9280               	bcf	3968,1,c	;volatile
  1098  0079CC                     u207:
  1099                           
  1100                           ;sample.c: 72: PORTAbits.RA2 = PORTBbits.RB2;
  1101  0079CC  A481               	btfss	3969,2,c	;volatile
  1102  0079CE  D002               	bra	u215
  1103  0079D0  8480               	bsf	3968,2,c	;volatile
  1104  0079D2  D001               	bra	u217
  1105  0079D4                     u215:
  1106  0079D4  9480               	bcf	3968,2,c	;volatile
  1107  0079D6                     u217:
  1108                           
  1109                           ;sample.c: 73: PORTAbits.RA3 = PORTBbits.RB3;
  1110  0079D6  A681               	btfss	3969,3,c	;volatile
  1111  0079D8  D002               	bra	u225
  1112  0079DA  8680               	bsf	3968,3,c	;volatile
  1113  0079DC  D001               	bra	u227
  1114  0079DE                     u225:
  1115  0079DE  9680               	bcf	3968,3,c	;volatile
  1116  0079E0                     u227:
  1117                           
  1118                           ;sample.c: 74: PORTAbits.RA4 = PORTBbits.RB4;
  1119  0079E0  A881               	btfss	3969,4,c	;volatile
  1120  0079E2  D002               	bra	u235
  1121  0079E4  8880               	bsf	3968,4,c	;volatile
  1122  0079E6  D001               	bra	u237
  1123  0079E8                     u235:
  1124  0079E8  9880               	bcf	3968,4,c	;volatile
  1125  0079EA                     u237:
  1126  0079EA  0012               	return		;funcret
  1127  0079EC                     __end_of_led_sens:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _do_sth *****************
  1133 ;; Defined at:
  1134 ;;		line 61 in file "sample.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2   43[None  ] int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    2
  1155 ;; This function calls:
  1156 ;;		_wait00
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text7
  1163  007954                     __ptext7:
  1164                           	opt stack 0
  1165  007954                     _do_sth:
  1166                           	opt stack 28
  1167                           
  1168                           ;sample.c: 62: PORTC=0x03;
  1169                           
  1170                           ;incstack = 0
  1171  007954  0E03               	movlw	3
  1172  007956  6E82               	movwf	3970,c	;volatile
  1173                           
  1174                           ;sample.c: 63: wait00(2);
  1175  007958  0E00               	movlw	0
  1176  00795A  6E1B               	movwf	wait00@k,c
  1177  00795C  0E00               	movlw	0
  1178  00795E  6E1C               	movwf	wait00@k+1,c
  1179  007960  0E00               	movlw	0
  1180  007962  6E1D               	movwf	wait00@k+2,c
  1181  007964  0E40               	movlw	64
  1182  007966  6E1E               	movwf	wait00@k+3,c
  1183  007968  EC8A  F03D         	call	_wait00	;wreg free
  1184                           
  1185                           ;sample.c: 64: PORTC=0x00;
  1186  00796C  0E00               	movlw	0
  1187  00796E  6E82               	movwf	3970,c	;volatile
  1188                           
  1189                           ;sample.c: 65: wait00(200);
  1190  007970  0E00               	movlw	0
  1191  007972  6E1B               	movwf	wait00@k,c
  1192  007974  0E00               	movlw	0
  1193  007976  6E1C               	movwf	wait00@k+1,c
  1194  007978  0E48               	movlw	72
  1195  00797A  6E1D               	movwf	wait00@k+2,c
  1196  00797C  0E43               	movlw	67
  1197  00797E  6E1E               	movwf	wait00@k+3,c
  1198  007980  EC8A  F03D         	call	_wait00	;wreg free
  1199  007984  0012               	return		;funcret
  1200  007986                     __end_of_do_sth:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _wait00 *****************
  1206 ;; Defined at:
  1207 ;;		line 7 in file "sample.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  k               4   26[COMRAM] float 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  i               2   32[COMRAM] short 
  1212 ;;  j               2   30[COMRAM] short 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  2   26[COMRAM] int 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1222 ;;      Params:         4       0       0       0       0       0       0       0       0
  1223 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1225 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1226 ;;Total ram usage:        8 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    1
  1229 ;; This function calls:
  1230 ;;		___flge
  1231 ;;		___xxtofl
  1232 ;; This function is called by:
  1233 ;;		_right_down
  1234 ;;		_small_right_down
  1235 ;;		_left_down
  1236 ;;		_small_left_down
  1237 ;;		_straight
  1238 ;;		_do_sth
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text8
  1243  007B14                     __ptext8:
  1244                           	opt stack 0
  1245  007B14                     _wait00:
  1246                           	opt stack 28
  1247                           
  1248                           ;sample.c: 10: short i;
  1249                           ;sample.c: 11: short j;
  1250                           ;sample.c: 12: for(j=0;j<k;j++){
  1251                           
  1252                           ;incstack = 0
  1253  007B14  0E00               	movlw	0
  1254  007B16  6E20               	movwf	wait00@j+1,c
  1255  007B18  0E00               	movlw	0
  1256  007B1A  6E1F               	movwf	wait00@j,c
  1257  007B1C  D011               	goto	l21
  1258  007B1E                     
  1259                           ;sample.c: 13: for(i=0;i<3000;i++){
  1260  007B1E  0E00               	movlw	0
  1261  007B20  6E22               	movwf	wait00@i+1,c
  1262  007B22  0E00               	movlw	0
  1263  007B24  6E21               	movwf	wait00@i,c
  1264  007B26                     l1147:
  1265  007B26  BE22               	btfsc	wait00@i+1,7,c
  1266  007B28  D006               	goto	l23
  1267  007B2A  0EB8               	movlw	184
  1268  007B2C  5C21               	subwf	wait00@i,w,c
  1269  007B2E  0E0B               	movlw	11
  1270  007B30  5822               	subwfb	wait00@i+1,w,c
  1271  007B32  B0D8               	btfsc	status,0,c
  1272  007B34  D003               	goto	u1160
  1273  007B36                     l23:
  1274  007B36  4A21               	infsnz	wait00@i,f,c
  1275  007B38  2A22               	incf	wait00@i+1,f,c
  1276  007B3A  D7F5               	goto	l1147
  1277  007B3C                     u1160:
  1278  007B3C  4A1F               	infsnz	wait00@j,f,c
  1279  007B3E  2A20               	incf	wait00@j+1,f,c
  1280  007B40                     l21:
  1281  007B40  C01F  F001         	movff	wait00@j,___xxtofl@val
  1282  007B44  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1283  007B48  0E00               	movlw	0
  1284  007B4A  BE02               	btfsc	___xxtofl@val+1,7,c
  1285  007B4C  0EFF               	movlw	-1
  1286  007B4E  6E03               	movwf	___xxtofl@val+2,c
  1287  007B50  6E04               	movwf	___xxtofl@val+3,c
  1288  007B52  0E01               	movlw	1
  1289  007B54  EC51  F03E         	call	___xxtofl
  1290  007B58  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1291  007B5C  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1292  007B60  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1293  007B64  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1294  007B68  C01B  F013         	movff	wait00@k,___flge@ff2
  1295  007B6C  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1296  007B70  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1297  007B74  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1298  007B78  ECC1  F03D         	call	___flge	;wreg free
  1299  007B7C  B0D8               	btfsc	status,0,c
  1300  007B7E  0012               	return	
  1301  007B80  D7CE               	goto	l22
  1302  007B82                     __end_of_wait00:
  1303                           	opt stack 0
  1304                           tblptru	equ	0xFF8
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function ___xxtofl *****************
  1308 ;; Defined at:
  1309 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  sign            1    wreg     unsigned char 
  1312 ;;  val             4    0[COMRAM] long 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  sign            1    8[COMRAM] unsigned char 
  1315 ;;  arg             4   10[COMRAM] unsigned long 
  1316 ;;  exp             1    9[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  4    0[COMRAM] unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         4       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1329 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:       14 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_wait00
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text9
  1340  007CA2                     __ptext9:
  1341                           	opt stack 0
  1342  007CA2                     ___xxtofl:
  1343                           	opt stack 28
  1344                           
  1345                           ;incstack = 0
  1346                           ;___xxtofl@sign stored from wreg
  1347  007CA2  6E09               	movwf	___xxtofl@sign,c
  1348  007CA4  5009               	movf	___xxtofl@sign,w,c
  1349  007CA6  A4D8               	btfss	status,2,c
  1350  007CA8  AE04               	btfss	___xxtofl@val+3,7,c
  1351  007CAA  D01A               	goto	l689
  1352  007CAC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1353  007CB0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1354  007CB4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1355  007CB8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1356  007CBC  1E05               	comf	??___xxtofl,f,c
  1357  007CBE  1E06               	comf	??___xxtofl+1,f,c
  1358  007CC0  1E07               	comf	??___xxtofl+2,f,c
  1359  007CC2  1E08               	comf	??___xxtofl+3,f,c
  1360  007CC4  2A05               	incf	??___xxtofl,f,c
  1361  007CC6  0E00               	movlw	0
  1362  007CC8  2206               	addwfc	??___xxtofl+1,f,c
  1363  007CCA  2207               	addwfc	??___xxtofl+2,f,c
  1364  007CCC  2208               	addwfc	??___xxtofl+3,f,c
  1365  007CCE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1366  007CD2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1367  007CD6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1368  007CDA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1369  007CDE  D008               	goto	l690
  1370  007CE0                     l689:
  1371  007CE0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1372  007CE4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1373  007CE8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1374  007CEC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1375  007CF0                     l690:
  1376  007CF0  5001               	movf	___xxtofl@val,w,c
  1377  007CF2  1002               	iorwf	___xxtofl@val+1,w,c
  1378  007CF4  1003               	iorwf	___xxtofl@val+2,w,c
  1379  007CF6  1004               	iorwf	___xxtofl@val+3,w,c
  1380  007CF8  A4D8               	btfss	status,2,c
  1381  007CFA  D009               	goto	l691
  1382  007CFC  0E00               	movlw	0
  1383  007CFE  6E01               	movwf	?___xxtofl,c
  1384  007D00  0E00               	movlw	0
  1385  007D02  6E02               	movwf	?___xxtofl+1,c
  1386  007D04  0E00               	movlw	0
  1387  007D06  6E03               	movwf	?___xxtofl+2,c
  1388  007D08  0E00               	movlw	0
  1389  007D0A  6E04               	movwf	?___xxtofl+3,c
  1390  007D0C  0012               	return	
  1391  007D0E                     l691:
  1392  007D0E  0E96               	movlw	150
  1393  007D10  6E0A               	movwf	___xxtofl@exp,c
  1394  007D12  D006               	goto	l693
  1395  007D14  2A0A               	incf	___xxtofl@exp,f,c
  1396  007D16  90D8               	bcf	status,0,c
  1397  007D18  320E               	rrcf	___xxtofl@arg+3,f,c
  1398  007D1A  320D               	rrcf	___xxtofl@arg+2,f,c
  1399  007D1C  320C               	rrcf	___xxtofl@arg+1,f,c
  1400  007D1E  320B               	rrcf	___xxtofl@arg,f,c
  1401  007D20                     l693:
  1402  007D20  0E00               	movlw	0
  1403  007D22  140B               	andwf	___xxtofl@arg,w,c
  1404  007D24  6E05               	movwf	??___xxtofl& (0+255),c
  1405  007D26  0E00               	movlw	0
  1406  007D28  140C               	andwf	___xxtofl@arg+1,w,c
  1407  007D2A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1408  007D2C  0E00               	movlw	0
  1409  007D2E  140D               	andwf	___xxtofl@arg+2,w,c
  1410  007D30  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1411  007D32  0EFE               	movlw	254
  1412  007D34  140E               	andwf	___xxtofl@arg+3,w,c
  1413  007D36  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1414  007D38  5005               	movf	??___xxtofl,w,c
  1415  007D3A  1006               	iorwf	??___xxtofl+1,w,c
  1416  007D3C  1007               	iorwf	??___xxtofl+2,w,c
  1417  007D3E  1008               	iorwf	??___xxtofl+3,w,c
  1418  007D40  B4D8               	btfsc	status,2,c
  1419  007D42  D00D               	goto	l696
  1420  007D44  D7E7               	goto	l694
  1421  007D46  2A0A               	incf	___xxtofl@exp,f,c
  1422  007D48  0E01               	movlw	1
  1423  007D4A  260B               	addwf	___xxtofl@arg,f,c
  1424  007D4C  0E00               	movlw	0
  1425  007D4E  220C               	addwfc	___xxtofl@arg+1,f,c
  1426  007D50  220D               	addwfc	___xxtofl@arg+2,f,c
  1427  007D52  220E               	addwfc	___xxtofl@arg+3,f,c
  1428  007D54  90D8               	bcf	status,0,c
  1429  007D56  320E               	rrcf	___xxtofl@arg+3,f,c
  1430  007D58  320D               	rrcf	___xxtofl@arg+2,f,c
  1431  007D5A  320C               	rrcf	___xxtofl@arg+1,f,c
  1432  007D5C  320B               	rrcf	___xxtofl@arg,f,c
  1433  007D5E                     l696:
  1434  007D5E  0E00               	movlw	0
  1435  007D60  140B               	andwf	___xxtofl@arg,w,c
  1436  007D62  6E05               	movwf	??___xxtofl& (0+255),c
  1437  007D64  0E00               	movlw	0
  1438  007D66  140C               	andwf	___xxtofl@arg+1,w,c
  1439  007D68  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1440  007D6A  0E00               	movlw	0
  1441  007D6C  140D               	andwf	___xxtofl@arg+2,w,c
  1442  007D6E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1443  007D70  0EFF               	movlw	255
  1444  007D72  140E               	andwf	___xxtofl@arg+3,w,c
  1445  007D74  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1446  007D76  5005               	movf	??___xxtofl,w,c
  1447  007D78  1006               	iorwf	??___xxtofl+1,w,c
  1448  007D7A  1007               	iorwf	??___xxtofl+2,w,c
  1449  007D7C  1008               	iorwf	??___xxtofl+3,w,c
  1450  007D7E  B4D8               	btfsc	status,2,c
  1451  007D80  D007               	goto	l699
  1452  007D82  D7E1               	goto	l697
  1453  007D84  060A               	decf	___xxtofl@exp,f,c
  1454  007D86  90D8               	bcf	status,0,c
  1455  007D88  360B               	rlcf	___xxtofl@arg,f,c
  1456  007D8A  360C               	rlcf	___xxtofl@arg+1,f,c
  1457  007D8C  360D               	rlcf	___xxtofl@arg+2,f,c
  1458  007D8E  360E               	rlcf	___xxtofl@arg+3,f,c
  1459  007D90                     l699:
  1460  007D90  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1461  007D92  D003               	goto	u1110
  1462  007D94  0E02               	movlw	2
  1463  007D96  600A               	cpfslt	___xxtofl@exp,c
  1464  007D98  D7F5               	goto	l700
  1465  007D9A                     u1110:
  1466  007D9A  B00A               	btfsc	___xxtofl@exp,0,c
  1467  007D9C  D008               	goto	l704
  1468  007D9E  0EFF               	movlw	255
  1469  007DA0  160B               	andwf	___xxtofl@arg,f,c
  1470  007DA2  0EFF               	movlw	255
  1471  007DA4  160C               	andwf	___xxtofl@arg+1,f,c
  1472  007DA6  0E7F               	movlw	127
  1473  007DA8  160D               	andwf	___xxtofl@arg+2,f,c
  1474  007DAA  0EFF               	movlw	255
  1475  007DAC  160E               	andwf	___xxtofl@arg+3,f,c
  1476  007DAE                     l704:
  1477  007DAE  90D8               	bcf	status,0,c
  1478  007DB0  320A               	rrcf	___xxtofl@exp,f,c
  1479  007DB2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1480  007DB6  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1481  007DB8  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1482  007DBA  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1483  007DBC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1484  007DC0  6A07               	clrf	??___xxtofl+2,c
  1485  007DC2  6A06               	clrf	??___xxtofl+1,c
  1486  007DC4  6A05               	clrf	??___xxtofl,c
  1487  007DC6  5005               	movf	??___xxtofl,w,c
  1488  007DC8  120B               	iorwf	___xxtofl@arg,f,c
  1489  007DCA  5006               	movf	??___xxtofl+1,w,c
  1490  007DCC  120C               	iorwf	___xxtofl@arg+1,f,c
  1491  007DCE  5007               	movf	??___xxtofl+2,w,c
  1492  007DD0  120D               	iorwf	___xxtofl@arg+2,f,c
  1493  007DD2  5008               	movf	??___xxtofl+3,w,c
  1494  007DD4  120E               	iorwf	___xxtofl@arg+3,f,c
  1495  007DD6  5009               	movf	___xxtofl@sign,w,c
  1496  007DD8  A4D8               	btfss	status,2,c
  1497  007DDA  AE04               	btfss	___xxtofl@val+3,7,c
  1498  007DDC  D001               	goto	l705
  1499  007DDE  8E0E               	bsf	___xxtofl@arg+3,7,c
  1500  007DE0                     l705:
  1501  007DE0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1502  007DE4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1503  007DE8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1504  007DEC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1505  007DF0  0012               	return	
  1506  007DF2                     __end_of___xxtofl:
  1507                           	opt stack 0
  1508                           tblptru	equ	0xFF8
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function ___flge *****************
  1512 ;; Defined at:
  1513 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  ff1             4   14[COMRAM] unsigned char 
  1516 ;;  ff2             4   18[COMRAM] unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         8       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1531 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:       12 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_wait00
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text10
  1542  007B82                     __ptext10:
  1543                           	opt stack 0
  1544  007B82                     ___flge:
  1545                           	opt stack 28
  1546                           
  1547                           ;incstack = 0
  1548  007B82  0E00               	movlw	0
  1549  007B84  140F               	andwf	___flge@ff1,w,c
  1550  007B86  6E17               	movwf	??___flge& (0+255),c
  1551  007B88  0E00               	movlw	0
  1552  007B8A  1410               	andwf	___flge@ff1+1,w,c
  1553  007B8C  6E18               	movwf	(??___flge+1)& (0+255),c
  1554  007B8E  0E80               	movlw	128
  1555  007B90  1411               	andwf	___flge@ff1+2,w,c
  1556  007B92  6E19               	movwf	(??___flge+2)& (0+255),c
  1557  007B94  0E7F               	movlw	127
  1558  007B96  1412               	andwf	___flge@ff1+3,w,c
  1559  007B98  6E1A               	movwf	(??___flge+3)& (0+255),c
  1560  007B9A  5017               	movf	??___flge,w,c
  1561  007B9C  1018               	iorwf	??___flge+1,w,c
  1562  007B9E  1019               	iorwf	??___flge+2,w,c
  1563  007BA0  101A               	iorwf	??___flge+3,w,c
  1564  007BA2  A4D8               	btfss	status,2,c
  1565  007BA4  D008               	goto	l341
  1566  007BA6  0E00               	movlw	0
  1567  007BA8  6E0F               	movwf	___flge@ff1,c
  1568  007BAA  0E00               	movlw	0
  1569  007BAC  6E10               	movwf	___flge@ff1+1,c
  1570  007BAE  0E00               	movlw	0
  1571  007BB0  6E11               	movwf	___flge@ff1+2,c
  1572  007BB2  0E00               	movlw	0
  1573  007BB4  6E12               	movwf	___flge@ff1+3,c
  1574  007BB6                     l341:
  1575  007BB6  0E00               	movlw	0
  1576  007BB8  1413               	andwf	___flge@ff2,w,c
  1577  007BBA  6E17               	movwf	??___flge& (0+255),c
  1578  007BBC  0E00               	movlw	0
  1579  007BBE  1414               	andwf	___flge@ff2+1,w,c
  1580  007BC0  6E18               	movwf	(??___flge+1)& (0+255),c
  1581  007BC2  0E80               	movlw	128
  1582  007BC4  1415               	andwf	___flge@ff2+2,w,c
  1583  007BC6  6E19               	movwf	(??___flge+2)& (0+255),c
  1584  007BC8  0E7F               	movlw	127
  1585  007BCA  1416               	andwf	___flge@ff2+3,w,c
  1586  007BCC  6E1A               	movwf	(??___flge+3)& (0+255),c
  1587  007BCE  5017               	movf	??___flge,w,c
  1588  007BD0  1018               	iorwf	??___flge+1,w,c
  1589  007BD2  1019               	iorwf	??___flge+2,w,c
  1590  007BD4  101A               	iorwf	??___flge+3,w,c
  1591  007BD6  A4D8               	btfss	status,2,c
  1592  007BD8  D008               	goto	l342
  1593  007BDA  0E00               	movlw	0
  1594  007BDC  6E13               	movwf	___flge@ff2,c
  1595  007BDE  0E00               	movlw	0
  1596  007BE0  6E14               	movwf	___flge@ff2+1,c
  1597  007BE2  0E00               	movlw	0
  1598  007BE4  6E15               	movwf	___flge@ff2+2,c
  1599  007BE6  0E00               	movlw	0
  1600  007BE8  6E16               	movwf	___flge@ff2+3,c
  1601  007BEA                     l342:
  1602  007BEA  AE12               	btfss	___flge@ff1+3,7,c
  1603  007BEC  D01D               	goto	l343
  1604  007BEE  C00F  F017         	movff	___flge@ff1,??___flge
  1605  007BF2  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1606  007BF6  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1607  007BFA  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1608  007BFE  1E17               	comf	??___flge,f,c
  1609  007C00  1E18               	comf	??___flge+1,f,c
  1610  007C02  1E19               	comf	??___flge+2,f,c
  1611  007C04  1E1A               	comf	??___flge+3,f,c
  1612  007C06  2A17               	incf	??___flge,f,c
  1613  007C08  0E00               	movlw	0
  1614  007C0A  2218               	addwfc	??___flge+1,f,c
  1615  007C0C  2219               	addwfc	??___flge+2,f,c
  1616  007C0E  221A               	addwfc	??___flge+3,f,c
  1617  007C10  0E00               	movlw	0
  1618  007C12  2417               	addwf	??___flge,w,c
  1619  007C14  6E0F               	movwf	___flge@ff1,c
  1620  007C16  0E00               	movlw	0
  1621  007C18  2018               	addwfc	??___flge+1,w,c
  1622  007C1A  6E10               	movwf	___flge@ff1+1,c
  1623  007C1C  0E00               	movlw	0
  1624  007C1E  2019               	addwfc	??___flge+2,w,c
  1625  007C20  6E11               	movwf	___flge@ff1+2,c
  1626  007C22  0E80               	movlw	128
  1627  007C24  201A               	addwfc	??___flge+3,w,c
  1628  007C26  6E12               	movwf	___flge@ff1+3,c
  1629  007C28                     l343:
  1630  007C28  AE16               	btfss	___flge@ff2+3,7,c
  1631  007C2A  D01D               	goto	l344
  1632  007C2C  C013  F017         	movff	___flge@ff2,??___flge
  1633  007C30  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1634  007C34  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1635  007C38  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1636  007C3C  1E17               	comf	??___flge,f,c
  1637  007C3E  1E18               	comf	??___flge+1,f,c
  1638  007C40  1E19               	comf	??___flge+2,f,c
  1639  007C42  1E1A               	comf	??___flge+3,f,c
  1640  007C44  2A17               	incf	??___flge,f,c
  1641  007C46  0E00               	movlw	0
  1642  007C48  2218               	addwfc	??___flge+1,f,c
  1643  007C4A  2219               	addwfc	??___flge+2,f,c
  1644  007C4C  221A               	addwfc	??___flge+3,f,c
  1645  007C4E  0E00               	movlw	0
  1646  007C50  2417               	addwf	??___flge,w,c
  1647  007C52  6E13               	movwf	___flge@ff2,c
  1648  007C54  0E00               	movlw	0
  1649  007C56  2018               	addwfc	??___flge+1,w,c
  1650  007C58  6E14               	movwf	___flge@ff2+1,c
  1651  007C5A  0E00               	movlw	0
  1652  007C5C  2019               	addwfc	??___flge+2,w,c
  1653  007C5E  6E15               	movwf	___flge@ff2+2,c
  1654  007C60  0E80               	movlw	128
  1655  007C62  201A               	addwfc	??___flge+3,w,c
  1656  007C64  6E16               	movwf	___flge@ff2+3,c
  1657  007C66                     l344:
  1658  007C66  0E00               	movlw	0
  1659  007C68  1A0F               	xorwf	___flge@ff1,f,c
  1660  007C6A  0E00               	movlw	0
  1661  007C6C  1A10               	xorwf	___flge@ff1+1,f,c
  1662  007C6E  0E00               	movlw	0
  1663  007C70  1A11               	xorwf	___flge@ff1+2,f,c
  1664  007C72  0E80               	movlw	128
  1665  007C74  1A12               	xorwf	___flge@ff1+3,f,c
  1666  007C76  0E00               	movlw	0
  1667  007C78  1A13               	xorwf	___flge@ff2,f,c
  1668  007C7A  0E00               	movlw	0
  1669  007C7C  1A14               	xorwf	___flge@ff2+1,f,c
  1670  007C7E  0E00               	movlw	0
  1671  007C80  1A15               	xorwf	___flge@ff2+2,f,c
  1672  007C82  0E80               	movlw	128
  1673  007C84  1A16               	xorwf	___flge@ff2+3,f,c
  1674  007C86  5013               	movf	___flge@ff2,w,c
  1675  007C88  5C0F               	subwf	___flge@ff1,w,c
  1676  007C8A  5014               	movf	___flge@ff2+1,w,c
  1677  007C8C  5810               	subwfb	___flge@ff1+1,w,c
  1678  007C8E  5015               	movf	___flge@ff2+2,w,c
  1679  007C90  5811               	subwfb	___flge@ff1+2,w,c
  1680  007C92  5016               	movf	___flge@ff2+3,w,c
  1681  007C94  5812               	subwfb	___flge@ff1+3,w,c
  1682  007C96  B0D8               	btfsc	status,0,c
  1683  007C98  D002               	goto	l1075
  1684  007C9A  90D8               	bcf	status,0,c
  1685  007C9C  0012               	return	
  1686  007C9E                     l1075:
  1687  007C9E  80D8               	bsf	status,0,c
  1688  007CA0  0012               	return	
  1689  007CA2                     __end_of___flge:
  1690                           	opt stack 0
  1691  0000                     tblptru	equ	0xFF8
  1692                           status	equ	0xFD8
  1693                           tblptru	equ	0xFF8
  1694                           status	equ	0xFD8
  1695                           
  1696                           	psect	rparam
  1697  0000                     tblptru	equ	0xFF8
  1698                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _do_sth->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12240
                             _do_sth
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_sth                                               0     0      0    2040
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    2040
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_sth
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     22      22       1       35.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 28 13:48:28 2018

                       l21 7B40                         l22 7B1E                         l23 7B36  
                       l60 7E50                         l52 7E12                         l61 7E2C  
                       l53 7E0E                         l70 7E60                         l63 7E38  
                       l56 7FE8                         l80 7E94                         l72 7E6C  
                       l65 7E44                         l58 7EEC                         l82 7EA0  
                       l74 7E78                         l91 7ED4                         l59 7E1C  
                       l84 7EAC                         l93 7EE0                         l78 7E84  
                       l79 7EB8                         l89 7EC8                         l99 7FD0  
                      l100 7F04                        l101 7F38                        l102 7F14  
                      l111 7F48                        l120 7FA0                        l104 7F20  
                      l121 7F7C                        l113 7F54                        l130 7FB0  
                      l106 7F2C                        l123 7F88                        l115 7F60  
                      l132 7FBC                        l125 7F94                        l134 7FC4  
                      l119 7F6C                        l341 7BB6                        l342 7BEA  
                      l343 7C28                        l344 7C66                        l700 7D84  
                      l704 7DAE                        l705 7DE0                        l690 7CF0  
                      l691 7D0E                        l693 7D20                        l694 7D14  
                      l696 7D5E                        l697 7D46                        l689 7CE0  
                      l699 7D90                        u205 79CA                        u215 79D4  
                      u207 79CC                        u225 79DE                        u217 79D6  
                      u235 79E8                        u227 79E0                        u237 79EA  
                      u195 79C0                        u197 79C2                       l1075 7C9E  
                     l1147 7B26                       u1110 7D9A                       u1160 7B3C  
                     u1180 7E16                       u1550 7EF4                       u1556 7EF6  
                     u1920 7FD8                       u1930 7FF0                       u1926 7FDA  
                     u1936 7FF2                       _main 7DF2                       start 2000  
             ___param_bank 000000                      ?_main 0001                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94  __size_of_small_right_down 004A  
          _small_left_down 7A80                      status 000FD8            __initialization 794A  
             __end_of_main 8000                     ??_main 0023              __activetblptr 000002  
                   _ADCON1 000FC1           __end_of___xxtofl 7DF2                     ___flge 7B82  
         __end_of_led_sens 79EC                     _do_sth 7954                     _wait00 7B14  
                   tblptru 000FF8    __end_of_small_left_down 7ACA           __end_of_straight 79B8  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 794A              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _small_right_down 7ACA         __size_of_left_down 004A                    ?___flge 000F  
                  ?_do_sth 0001                    ?_wait00 001B                  ?___xxtofl 0001  
         ?_small_left_down 0001                  ?_led_sens 0001                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0120            __size_of_do_sth 0032  
                ?_straight 0001                    __pcinit 794A                    __ramtop 0800  
          __size_of_wait00 006E          __end_of_left_down 7A36                    __ptext0 7DF2  
                  __ptext1 7986                    __ptext2 7ACA                    __ptext3 7A80  
                  __ptext4 7A36                    __ptext5 79EC                    __ptext6 79B8  
                  __ptext7 7954                    __ptext8 7B14                    __ptext9 7CA2  
               ??___xxtofl 0005       end_of_initialization 794A                 ??_led_sens 0001  
            __Lmediumconst 0000                    wait00@i 0021                    wait00@j 001F  
                  wait00@k 001B                 _right_down 7A36                 ??_straight 0023  
                _PORTAbits 000F80                  _PORTBbits 000F81              ___xxtofl@sign 0009  
 __end_of_small_right_down 7B14             __end_of___flge 7CA2             __end_of_do_sth 7986  
           __end_of_wait00 7B82        start_initialization 794A                ?_right_down 0001  
                 ??___flge 0017                   ??_do_sth 0023                   ??_wait00 001F  
        __size_of___xxtofl 0150          __size_of_led_sens 0034          __size_of_straight 0032  
                _left_down 79EC        __size_of_right_down 004A   __size_of_small_left_down 004A  
               ?_left_down 0001                   __Hrparam 0000                   __Lrparam 0000  
        ?_small_right_down 0001         ??_small_right_down 0023                   ___xxtofl 7CA2  
                 __ptext10 7B82                   _led_sens 79B8              __size_of_main 020E  
             ??_right_down 0023          ??_small_left_down 0023                   _straight 7986  
              ??_left_down 0023         __end_of_right_down 7A80  
