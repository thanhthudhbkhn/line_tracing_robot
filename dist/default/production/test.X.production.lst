

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 01 16:57:39 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F2553 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _PORTC	set	3970
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  00790C                     __pcinit:
    68                           	opt stack 0
    69  00790C                     start_initialization:
    70                           	opt stack 0
    71  00790C                     __initialization:
    72                           	opt stack 0
    73  00790C                     end_of_initialization:
    74                           	opt stack 0
    75  00790C                     __end_of__initialization:
    76                           	opt stack 0
    77  00790C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  00790E  6EF8               	movwf	tblptru,c
    79  007910  0100               	movlb	0
    80  007912  EFC1  F03E         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000001                     ?___xxtofl:
    87                           	opt stack 0
    88  000001                     ___xxtofl@val:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x0
    92  000001                     	ds	4
    93  000005                     ??___xxtofl:
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___xxtofl@sign:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x8
   101  000009                     	ds	1
   102  00000A                     ___xxtofl@exp:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x9
   106  00000A                     	ds	1
   107  00000B                     ___xxtofl@arg:
   108                           	opt stack 0
   109                           
   110                           ; 4 bytes @ 0xA
   111  00000B                     	ds	4
   112  00000F                     ___flge@ff1:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xE
   116  00000F                     	ds	4
   117  000013                     ___flge@ff2:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x12
   121  000013                     	ds	4
   122  000017                     ??___flge:
   123                           
   124                           ; 1 bytes @ 0x16
   125  000017                     	ds	4
   126  00001B                     wait00@k:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x1A
   130  00001B                     	ds	4
   131  00001F                     wait00@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1E
   135  00001F                     	ds	2
   136  000021                     wait00@i:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x20
   140  000021                     	ds	2
   141  000023                     main@status:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x22
   145  000023                     	ds	2
   146  000025                     main@background:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x24
   150  000025                     	ds	2
   151                           tblptru	equ	0xFF8
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 72 in file "sample.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  background      2   36[COMRAM] int 
   163 ;;  status          2   34[COMRAM] int 
   164 ;; Return value:  Size  Location     Type
   165 ;;                  2   48[None  ] int 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   173 ;;      Params:         0       0       0       0       0       0       0       0       0
   174 ;;      Locals:         4       0       0       0       0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0
   176 ;;      Totals:         4       0       0       0       0       0       0       0       0
   177 ;;Total ram usage:        4 bytes
   178 ;; Hardware stack levels required when called:    3
   179 ;; This function calls:
   180 ;;		_led_sens
   181 ;;		_left_down
   182 ;;		_right_down
   183 ;;		_small_left_down
   184 ;;		_small_right_down
   185 ;;		_straight
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  007D82                     __ptext0:
   193                           	opt stack 0
   194  007D82                     _main:
   195                           	opt stack 28
   196                           
   197                           ;sample.c: 74: int background = -1;
   198                           
   199                           ;incstack = 0
   200  007D82  6825               	setf	main@background,c
   201  007D84  6826               	setf	main@background+1,c
   202                           
   203                           ;sample.c: 75: int status = -1;
   204  007D86  6823               	setf	main@status,c
   205  007D88  6824               	setf	main@status+1,c
   206                           
   207                           ;sample.c: 77: ADCON1 = 0x0F;
   208  007D8A  0E0F               	movlw	15
   209  007D8C  6EC1               	movwf	4033,c	;volatile
   210                           
   211                           ;sample.c: 80: TRISA = 0x20;
   212  007D8E  0E20               	movlw	32
   213  007D90  6E92               	movwf	3986,c	;volatile
   214                           
   215                           ;sample.c: 81: TRISB = 0xFF;
   216  007D92  6893               	setf	3987,c	;volatile
   217                           
   218                           ;sample.c: 82: TRISC = 0x00;
   219  007D94  0E00               	movlw	0
   220  007D96  6E94               	movwf	3988,c	;volatile
   221                           
   222                           ;sample.c: 85: PORTA = 0x00;
   223  007D98  0E00               	movlw	0
   224  007D9A  6E80               	movwf	3968,c	;volatile
   225                           
   226                           ;sample.c: 86: PORTB = 0x00;
   227  007D9C  0E00               	movlw	0
   228  007D9E  6E81               	movwf	3969,c	;volatile
   229                           
   230                           ;sample.c: 87: PORTC = 0x00;
   231  007DA0  0E00               	movlw	0
   232  007DA2  6E82               	movwf	3970,c	;volatile
   233                           
   234                           ;sample.c: 90: while(PORTAbits.RA5==1){
   235  007DA4  D002               	goto	l49
   236  007DA6                     
   237                           ;sample.c: 91: led_sens();
   238  007DA6  ECA4  F03C         	call	_led_sens	;wreg free
   239  007DAA                     l49:
   240  007DAA  BA80               	btfsc	3968,5,c	;volatile
   241  007DAC  D7FC               	goto	l50
   242  007DAE                     u490:
   243                           
   244                           ;sample.c: 97: led_sens();
   245                           
   246                           ;sample.c: 92: }
   247                           ;sample.c: 96: while(1){
   248  007DAE  ECA4  F03C         	call	_led_sens	;wreg free
   249                           
   250                           ;sample.c: 99: switch (PORTB) {
   251  007DB2  D0C4               	goto	l53
   252  007DB4                     
   253                           ;sample.c: 101: case 0b11111:
   254                           ;sample.c: 102: if (status == 2) {
   255  007DB4  0E02               	movlw	2
   256  007DB6  1823               	xorwf	main@status,w,c
   257  007DB8  1024               	iorwf	main@status+1,w,c
   258  007DBA  A4D8               	btfss	status,2,c
   259  007DBC  D003               	goto	l56
   260                           
   261                           ;sample.c: 103: right_down();
   262  007DBE  ECE3  F03C         	call	_right_down	;wreg free
   263                           
   264                           ;sample.c: 104: }
   265  007DC2  D7F5               	goto	u490
   266  007DC4                     l56:
   267                           
   268                           ;sample.c: 105: else if (status == 1) {
   269  007DC4  0423               	decf	main@status,w,c
   270  007DC6  1024               	iorwf	main@status+1,w,c
   271  007DC8  A4D8               	btfss	status,2,c
   272  007DCA  D003               	goto	l58
   273                           
   274                           ;sample.c: 106: left_down();
   275  007DCC  ECBE  F03C         	call	_left_down	;wreg free
   276                           
   277                           ;sample.c: 107: }
   278  007DD0  D7EE               	goto	u490
   279  007DD2                     l58:
   280                           
   281                           ;sample.c: 108: else straight();
   282  007DD2  EC8B  F03C         	call	_straight	;wreg free
   283                           
   284                           ;sample.c: 109: break;
   285  007DD6  D7EB               	goto	u490
   286  007DD8                     
   287                           ;sample.c: 111: background = 0;
   288  007DD8  0E00               	movlw	0
   289  007DDA  6E26               	movwf	main@background+1,c
   290  007DDC  0E00               	movlw	0
   291  007DDE  6E25               	movwf	main@background,c
   292                           
   293                           ;sample.c: 112: left_down();
   294  007DE0  ECBE  F03C         	call	_left_down	;wreg free
   295  007DE4  D006               	goto	l1194
   296  007DE6                     
   297                           ;sample.c: 116: background = 0;
   298  007DE6  0E00               	movlw	0
   299  007DE8  6E26               	movwf	main@background+1,c
   300  007DEA  0E00               	movlw	0
   301  007DEC  6E25               	movwf	main@background,c
   302                           
   303                           ;sample.c: 117: small_left_down();
   304  007DEE  EC08  F03D         	call	_small_left_down	;wreg free
   305  007DF2                     l1194:
   306                           
   307                           ;sample.c: 118: status = 1;
   308  007DF2  0E00               	movlw	0
   309  007DF4  6E24               	movwf	main@status+1,c
   310  007DF6  0E01               	movlw	1
   311  007DF8  D01B               	goto	L4
   312  007DFA                     
   313                           ;sample.c: 121: if (background == 1) {
   314  007DFA  0425               	decf	main@background,w,c
   315  007DFC  1026               	iorwf	main@background+1,w,c
   316  007DFE  A4D8               	btfss	status,2,c
   317  007E00  D006               	goto	l64
   318                           
   319                           ;sample.c: 122: small_right_down();
   320  007E02  EC2D  F03D         	call	_small_right_down	;wreg free
   321  007E06                     l1200:
   322                           
   323                           ;sample.c: 123: status = 2;
   324  007E06  0E00               	movlw	0
   325  007E08  6E24               	movwf	main@status+1,c
   326  007E0A  0E02               	movlw	2
   327  007E0C  D011               	goto	L4
   328  007E0E                     l64:
   329                           
   330                           ;sample.c: 125: left_down();
   331  007E0E  ECBE  F03C         	call	_left_down	;wreg free
   332  007E12  D7EF               	goto	l1194
   333  007E14                     
   334                           ;sample.c: 130: background = 0;
   335  007E14  0E00               	movlw	0
   336  007E16  6E26               	movwf	main@background+1,c
   337  007E18  0E00               	movlw	0
   338  007E1A  6E25               	movwf	main@background,c
   339                           
   340                           ;sample.c: 131: straight();
   341  007E1C  EC8B  F03C         	call	_straight	;wreg free
   342  007E20  D06A               	goto	l1298
   343  007E22                     
   344                           ;sample.c: 136: background = 0;
   345  007E22  0E00               	movlw	0
   346  007E24  6E26               	movwf	main@background+1,c
   347  007E26  0E00               	movlw	0
   348  007E28  6E25               	movwf	main@background,c
   349                           
   350                           ;sample.c: 137: small_left_down();
   351  007E2A  EC08  F03D         	call	_small_left_down	;wreg free
   352  007E2E  D7E1               	goto	l1194
   353  007E30                     L4:
   354  007E30  6E23               	movwf	main@status,c
   355                           
   356                           ;sample.c: 139: break;
   357  007E32  D7BD               	goto	u490
   358  007E34                     
   359                           ;sample.c: 141: if(background == 0) {
   360  007E34  5025               	movf	main@background,w,c
   361  007E36  1026               	iorwf	main@background+1,w,c
   362  007E38  A4D8               	btfss	status,2,c
   363  007E3A  D003               	goto	l70
   364                           
   365                           ;sample.c: 142: small_left_down();
   366  007E3C  EC08  F03D         	call	_small_left_down	;wreg free
   367  007E40  D7D8               	goto	l1194
   368  007E42                     l70:
   369                           
   370                           ;sample.c: 145: right_down();
   371  007E42  ECE3  F03C         	call	_right_down	;wreg free
   372                           
   373                           ;sample.c: 146: status = 2;
   374  007E46  0E00               	movlw	0
   375  007E48  6E24               	movwf	main@status+1,c
   376  007E4A  0E02               	movlw	2
   377  007E4C  D064               	goto	L5
   378  007E4E                     l1228:
   379                           
   380                           ;sample.c: 147: background=1;
   381  007E4E  0E00               	movlw	0
   382  007E50  6E26               	movwf	main@background+1,c
   383  007E52  0E01               	movlw	1
   384  007E54  6E25               	movwf	main@background,c
   385                           
   386                           ;sample.c: 148: }
   387                           ;sample.c: 149: break;
   388  007E56  D7AB               	goto	u490
   389  007E58                     
   390                           ;sample.c: 151: background= 0;
   391  007E58  0E00               	movlw	0
   392  007E5A  6E26               	movwf	main@background+1,c
   393  007E5C  0E00               	movlw	0
   394  007E5E  6E25               	movwf	main@background,c
   395                           
   396                           ;sample.c: 152: small_right_down();
   397  007E60  EC2D  F03D         	call	_small_right_down	;wreg free
   398  007E64  D7D0               	goto	l1200
   399  007E66                     
   400                           ;sample.c: 159: background = 0;
   401  007E66  0E00               	movlw	0
   402  007E68  6E26               	movwf	main@background+1,c
   403  007E6A  0E00               	movlw	0
   404  007E6C  6E25               	movwf	main@background,c
   405                           
   406                           ;sample.c: 160: small_right_down();
   407  007E6E  EC2D  F03D         	call	_small_right_down	;wreg free
   408  007E72  D7C9               	goto	l1200
   409  007E74                     
   410                           ;sample.c: 165: background = 0;
   411  007E74  0E00               	movlw	0
   412  007E76  6E26               	movwf	main@background+1,c
   413  007E78  0E00               	movlw	0
   414  007E7A  6E25               	movwf	main@background,c
   415                           
   416                           ;sample.c: 166: straight();
   417  007E7C  EC8B  F03C         	call	_straight	;wreg free
   418  007E80  D03A               	goto	l1298
   419  007E82                     
   420                           ;sample.c: 170: background = 1;
   421  007E82  0E00               	movlw	0
   422  007E84  6E26               	movwf	main@background+1,c
   423  007E86  0E01               	movlw	1
   424  007E88  6E25               	movwf	main@background,c
   425                           
   426                           ;sample.c: 171: right_down();
   427  007E8A  ECE3  F03C         	call	_right_down	;wreg free
   428  007E8E  D7BB               	goto	l1200
   429  007E90                     
   430                           ;sample.c: 175: background = 0;
   431  007E90  0E00               	movlw	0
   432  007E92  6E26               	movwf	main@background+1,c
   433  007E94  0E00               	movlw	0
   434  007E96  6E25               	movwf	main@background,c
   435                           
   436                           ;sample.c: 176: right_down();
   437  007E98  ECE3  F03C         	call	_right_down	;wreg free
   438  007E9C  D7B4               	goto	l1200
   439  007E9E                     
   440                           ;sample.c: 180: background = 1;
   441  007E9E  0E00               	movlw	0
   442  007EA0  6E26               	movwf	main@background+1,c
   443  007EA2  0E01               	movlw	1
   444  007EA4  6E25               	movwf	main@background,c
   445                           
   446                           ;sample.c: 181: straight();
   447  007EA6  EC8B  F03C         	call	_straight	;wreg free
   448  007EAA  D025               	goto	l1298
   449  007EAC                     
   450                           ;sample.c: 186: background = 1;
   451  007EAC  0E00               	movlw	0
   452  007EAE  6E26               	movwf	main@background+1,c
   453  007EB0  0E01               	movlw	1
   454  007EB2  6E25               	movwf	main@background,c
   455                           
   456                           ;sample.c: 187: small_right_down();
   457  007EB4  EC2D  F03D         	call	_small_right_down	;wreg free
   458  007EB8  D7A6               	goto	l1200
   459  007EBA                     
   460                           ;sample.c: 194: background = 1;
   461  007EBA  0E00               	movlw	0
   462  007EBC  6E26               	movwf	main@background+1,c
   463  007EBE  0E01               	movlw	1
   464  007EC0  6E25               	movwf	main@background,c
   465                           
   466                           ;sample.c: 195: small_right_down();
   467  007EC2  EC2D  F03D         	call	_small_right_down	;wreg free
   468  007EC6  D79F               	goto	l1200
   469  007EC8                     
   470                           ;sample.c: 199: if (background == 1) {
   471  007EC8  0425               	decf	main@background,w,c
   472  007ECA  1026               	iorwf	main@background+1,w,c
   473  007ECC  A4D8               	btfss	status,2,c
   474  007ECE  D003               	goto	l89
   475                           
   476                           ;sample.c: 200: small_left_down();
   477  007ED0  EC08  F03D         	call	_small_left_down	;wreg free
   478  007ED4  D78E               	goto	l1194
   479  007ED6                     l89:
   480                           
   481                           ;sample.c: 203: right_down();
   482  007ED6  ECE3  F03C         	call	_right_down	;wreg free
   483  007EDA  D795               	goto	l1200
   484  007EDC                     
   485                           ;sample.c: 208: background = 1;
   486  007EDC  0E00               	movlw	0
   487  007EDE  6E26               	movwf	main@background+1,c
   488  007EE0  0E01               	movlw	1
   489  007EE2  6E25               	movwf	main@background,c
   490                           
   491                           ;sample.c: 209: small_left_down();
   492  007EE4  EC08  F03D         	call	_small_left_down	;wreg free
   493  007EE8  D784               	goto	l1194
   494  007EEA                     
   495                           ;sample.c: 214: background = 1;
   496  007EEA  0E00               	movlw	0
   497  007EEC  6E26               	movwf	main@background+1,c
   498  007EEE  0E01               	movlw	1
   499  007EF0  6E25               	movwf	main@background,c
   500                           
   501                           ;sample.c: 215: straight();
   502  007EF2  EC8B  F03C         	call	_straight	;wreg free
   503  007EF6                     l1298:
   504                           
   505                           ;sample.c: 216: status = 0;
   506  007EF6  0E00               	movlw	0
   507  007EF8  6E24               	movwf	main@status+1,c
   508  007EFA  0E00               	movlw	0
   509  007EFC  D799               	goto	L4
   510  007EFE                     
   511                           ;sample.c: 219: if (background == 0) {
   512  007EFE  5025               	movf	main@background,w,c
   513  007F00  1026               	iorwf	main@background+1,w,c
   514  007F02  A4D8               	btfss	status,2,c
   515  007F04  D003               	goto	l95
   516                           
   517                           ;sample.c: 220: small_right_down();
   518  007F06  EC2D  F03D         	call	_small_right_down	;wreg free
   519  007F0A  D77D               	goto	l1200
   520  007F0C                     l95:
   521                           
   522                           ;sample.c: 223: left_down();
   523  007F0C  ECBE  F03C         	call	_left_down	;wreg free
   524                           
   525                           ;sample.c: 224: status = 1;
   526  007F10  0E00               	movlw	0
   527  007F12  6E24               	movwf	main@status+1,c
   528  007F14  0E01               	movlw	1
   529  007F16                     L5:
   530  007F16  6E23               	movwf	main@status,c
   531  007F18  D79A               	goto	l1228
   532  007F1A                     
   533                           ;sample.c: 229: background = 1;
   534  007F1A  0E00               	movlw	0
   535  007F1C  6E26               	movwf	main@background+1,c
   536  007F1E  0E01               	movlw	1
   537  007F20  6E25               	movwf	main@background,c
   538                           
   539                           ;sample.c: 230: small_left_down();
   540  007F22  EC08  F03D         	call	_small_left_down	;wreg free
   541  007F26  D765               	goto	l1194
   542  007F28                     
   543                           ;sample.c: 234: background = 1;
   544  007F28  0E00               	movlw	0
   545  007F2A  6E26               	movwf	main@background+1,c
   546  007F2C  0E01               	movlw	1
   547  007F2E  6E25               	movwf	main@background,c
   548                           
   549                           ;sample.c: 235: left_down();
   550  007F30  ECBE  F03C         	call	_left_down	;wreg free
   551  007F34  D75E               	goto	l1194
   552  007F36                     
   553                           ;sample.c: 239: straight();
   554  007F36  EC8B  F03C         	call	_straight	;wreg free
   555                           
   556                           ;sample.c: 241: }
   557                           
   558                           ;sample.c: 240: break;
   559  007F3A  D739               	goto	u490
   560  007F3C                     l53:
   561  007F3C  5081               	movf	3969,w,c	;volatile
   562                           
   563                           ; Switch size 1, requested type "space"
   564                           ; Number of cases is 32, Range of values is 0 to 31
   565                           ; switch strategies available:
   566                           ; Name         Instructions Cycles
   567                           ; simple_byte           97    49 (average)
   568                           ;	Chosen strategy is simple_byte
   569  007F3E  0A00               	xorlw	0	; case 0
   570  007F40  B4D8               	btfsc	status,2,c
   571  007F42  D738               	goto	l54
   572  007F44  0A01               	xorlw	1	; case 1
   573  007F46  B4D8               	btfsc	status,2,c
   574  007F48  D747               	goto	l61
   575  007F4A  0A03               	xorlw	3	; case 2
   576  007F4C  B4D8               	btfsc	status,2,c
   577  007F4E  D74B               	goto	l62
   578  007F50  0A01               	xorlw	1	; case 3
   579  007F52  B4D8               	btfsc	status,2,c
   580  007F54  D752               	goto	l63
   581  007F56  0A07               	xorlw	7	; case 4
   582  007F58  B4D8               	btfsc	status,2,c
   583  007F5A  D75C               	goto	l66
   584  007F5C  0A01               	xorlw	1	; case 5
   585  007F5E  B4D8               	btfsc	status,2,c
   586  007F60  D726               	goto	u490
   587  007F62  0A03               	xorlw	3	; case 6
   588  007F64  B4D8               	btfsc	status,2,c
   589  007F66  D75D               	goto	l68
   590  007F68  0A01               	xorlw	1	; case 7
   591  007F6A  B4D8               	btfsc	status,2,c
   592  007F6C  D763               	goto	l69
   593  007F6E  0A0F               	xorlw	15	; case 8
   594  007F70  B4D8               	btfsc	status,2,c
   595  007F72  D772               	goto	l72
   596  007F74  0A01               	xorlw	1	; case 9
   597  007F76  B4D8               	btfsc	status,2,c
   598  007F78  D71A               	goto	u490
   599  007F7A  0A03               	xorlw	3	; case 10
   600  007F7C  B4D8               	btfsc	status,2,c
   601  007F7E  D717               	goto	u490
   602  007F80  0A01               	xorlw	1	; case 11
   603  007F82  B4D8               	btfsc	status,2,c
   604  007F84  D714               	goto	u490
   605  007F86  0A07               	xorlw	7	; case 12
   606  007F88  B4D8               	btfsc	status,2,c
   607  007F8A  D76D               	goto	l76
   608  007F8C  0A01               	xorlw	1	; case 13
   609  007F8E  B4D8               	btfsc	status,2,c
   610  007F90  D70E               	goto	u490
   611  007F92  0A03               	xorlw	3	; case 14
   612  007F94  B4D8               	btfsc	status,2,c
   613  007F96  D76E               	goto	l78
   614  007F98  0A01               	xorlw	1	; case 15
   615  007F9A  B4D8               	btfsc	status,2,c
   616  007F9C  D772               	goto	l79
   617  007F9E  0A1F               	xorlw	31	; case 16
   618  007FA0  B4D8               	btfsc	status,2,c
   619  007FA2  D776               	goto	l80
   620  007FA4  0A01               	xorlw	1	; case 17
   621  007FA6  B4D8               	btfsc	status,2,c
   622  007FA8  D77A               	goto	l81
   623  007FAA  0A03               	xorlw	3	; case 18
   624  007FAC  B4D8               	btfsc	status,2,c
   625  007FAE  D6FF               	goto	u490
   626  007FB0  0A01               	xorlw	1	; case 19
   627  007FB2  B4D8               	btfsc	status,2,c
   628  007FB4  D77B               	goto	l83
   629  007FB6  0A07               	xorlw	7	; case 20
   630  007FB8  B4D8               	btfsc	status,2,c
   631  007FBA  D6F9               	goto	u490
   632  007FBC  0A01               	xorlw	1	; case 21
   633  007FBE  B4D8               	btfsc	status,2,c
   634  007FC0  D6F6               	goto	u490
   635  007FC2  0A03               	xorlw	3	; case 22
   636  007FC4  B4D8               	btfsc	status,2,c
   637  007FC6  D6F3               	goto	u490
   638  007FC8  0A01               	xorlw	1	; case 23
   639  007FCA  B4D8               	btfsc	status,2,c
   640  007FCC  D776               	goto	l87
   641  007FCE  0A0F               	xorlw	15	; case 24
   642  007FD0  B4D8               	btfsc	status,2,c
   643  007FD2  D77A               	goto	l88
   644  007FD4  0A01               	xorlw	1	; case 25
   645  007FD6  B4D8               	btfsc	status,2,c
   646  007FD8  D781               	goto	l91
   647  007FDA  0A03               	xorlw	3	; case 26
   648  007FDC  B4D8               	btfsc	status,2,c
   649  007FDE  D6E7               	goto	u490
   650  007FE0  0A01               	xorlw	1	; case 27
   651  007FE2  B4D8               	btfsc	status,2,c
   652  007FE4  D782               	goto	l93
   653  007FE6  0A07               	xorlw	7	; case 28
   654  007FE8  B4D8               	btfsc	status,2,c
   655  007FEA  D789               	goto	l94
   656  007FEC  0A01               	xorlw	1	; case 29
   657  007FEE  B4D8               	btfsc	status,2,c
   658  007FF0  D794               	goto	l97
   659  007FF2  0A03               	xorlw	3	; case 30
   660  007FF4  B4D8               	btfsc	status,2,c
   661  007FF6  D798               	goto	l98
   662  007FF8  0A01               	xorlw	1	; case 31
   663  007FFA  B4D8               	btfsc	status,2,c
   664  007FFC  D6DB               	goto	l54
   665  007FFE  D79B               	goto	l99
   666  008000                     __end_of_main:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           status	equ	0xFD8
   670                           
   671 ;; *************** function _straight *****************
   672 ;; Defined at:
   673 ;;		line 57 in file "sample.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  2   40[None  ] int 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   687 ;;      Params:         0       0       0       0       0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		_wait00
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702  007916                     __ptext1:
   703                           	opt stack 0
   704  007916                     _straight:
   705                           	opt stack 28
   706                           
   707                           ;sample.c: 58: PORTC=0x03;
   708                           
   709                           ;incstack = 0
   710  007916  0E03               	movlw	3
   711  007918  6E82               	movwf	3970,c	;volatile
   712                           
   713                           ;sample.c: 59: wait00(10);
   714  00791A  0E00               	movlw	0
   715  00791C  6E1B               	movwf	wait00@k,c
   716  00791E  0E00               	movlw	0
   717  007920  6E1C               	movwf	wait00@k+1,c
   718  007922  0E20               	movlw	32
   719  007924  6E1D               	movwf	wait00@k+2,c
   720  007926  0E41               	movlw	65
   721  007928  6E1E               	movwf	wait00@k+3,c
   722  00792A  EC52  F03D         	call	_wait00	;wreg free
   723                           
   724                           ;sample.c: 60: PORTC=0x00;
   725  00792E  0E00               	movlw	0
   726  007930  6E82               	movwf	3970,c	;volatile
   727                           
   728                           ;sample.c: 61: wait00(10);
   729  007932  0E00               	movlw	0
   730  007934  6E1B               	movwf	wait00@k,c
   731  007936  0E00               	movlw	0
   732  007938  6E1C               	movwf	wait00@k+1,c
   733  00793A  0E20               	movlw	32
   734  00793C  6E1D               	movwf	wait00@k+2,c
   735  00793E  0E41               	movlw	65
   736  007940  6E1E               	movwf	wait00@k+3,c
   737  007942  EC52  F03D         	call	_wait00	;wreg free
   738  007946  0012               	return		;funcret
   739  007948                     __end_of_straight:
   740                           	opt stack 0
   741                           tblptru	equ	0xFF8
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function _small_right_down *****************
   745 ;; Defined at:
   746 ;;		line 30 in file "sample.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  2   31[None  ] int 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   760 ;;      Params:         0       0       0       0       0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    2
   767 ;; This function calls:
   768 ;;		_wait00
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text2
   775  007A5A                     __ptext2:
   776                           	opt stack 0
   777  007A5A                     _small_right_down:
   778                           	opt stack 28
   779                           
   780                           ;sample.c: 31: PORTC=0x03;
   781                           
   782                           ;incstack = 0
   783  007A5A  0E03               	movlw	3
   784  007A5C  6E82               	movwf	3970,c	;volatile
   785                           
   786                           ;sample.c: 32: wait00(0.3);
   787  007A5E  0E9A               	movlw	154
   788  007A60  6E1B               	movwf	wait00@k,c
   789  007A62  0E99               	movlw	153
   790  007A64  6E1C               	movwf	wait00@k+1,c
   791  007A66  0E99               	movlw	153
   792  007A68  6E1D               	movwf	wait00@k+2,c
   793  007A6A  0E3E               	movlw	62
   794  007A6C  6E1E               	movwf	wait00@k+3,c
   795  007A6E  EC52  F03D         	call	_wait00	;wreg free
   796                           
   797                           ;sample.c: 33: PORTC=0x01;
   798  007A72  0E01               	movlw	1
   799  007A74  6E82               	movwf	3970,c	;volatile
   800                           
   801                           ;sample.c: 34: wait00(6);
   802  007A76  0E00               	movlw	0
   803  007A78  6E1B               	movwf	wait00@k,c
   804  007A7A  0E00               	movlw	0
   805  007A7C  6E1C               	movwf	wait00@k+1,c
   806  007A7E  0EC0               	movlw	192
   807  007A80  6E1D               	movwf	wait00@k+2,c
   808  007A82  0E40               	movlw	64
   809  007A84  6E1E               	movwf	wait00@k+3,c
   810  007A86  EC52  F03D         	call	_wait00	;wreg free
   811                           
   812                           ;sample.c: 35: PORTC=0x00;
   813  007A8A  0E00               	movlw	0
   814  007A8C  6E82               	movwf	3970,c	;volatile
   815                           
   816                           ;sample.c: 36: wait00(12);
   817  007A8E  0E00               	movlw	0
   818  007A90  6E1B               	movwf	wait00@k,c
   819  007A92  0E00               	movlw	0
   820  007A94  6E1C               	movwf	wait00@k+1,c
   821  007A96  0E40               	movlw	64
   822  007A98  6E1D               	movwf	wait00@k+2,c
   823  007A9A  0E41               	movlw	65
   824  007A9C  6E1E               	movwf	wait00@k+3,c
   825  007A9E  EC52  F03D         	call	_wait00	;wreg free
   826  007AA2  0012               	return		;funcret
   827  007AA4                     __end_of_small_right_down:
   828                           	opt stack 0
   829                           tblptru	equ	0xFF8
   830                           status	equ	0xFD8
   831                           
   832 ;; *************** function _small_left_down *****************
   833 ;; Defined at:
   834 ;;		line 48 in file "sample.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  2   37[None  ] int 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   848 ;;      Params:         0       0       0       0       0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    2
   855 ;; This function calls:
   856 ;;		_wait00
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text3
   863  007A10                     __ptext3:
   864                           	opt stack 0
   865  007A10                     _small_left_down:
   866                           	opt stack 28
   867                           
   868                           ;sample.c: 49: PORTC=0x03;
   869                           
   870                           ;incstack = 0
   871  007A10  0E03               	movlw	3
   872  007A12  6E82               	movwf	3970,c	;volatile
   873                           
   874                           ;sample.c: 50: wait00(0.3);
   875  007A14  0E9A               	movlw	154
   876  007A16  6E1B               	movwf	wait00@k,c
   877  007A18  0E99               	movlw	153
   878  007A1A  6E1C               	movwf	wait00@k+1,c
   879  007A1C  0E99               	movlw	153
   880  007A1E  6E1D               	movwf	wait00@k+2,c
   881  007A20  0E3E               	movlw	62
   882  007A22  6E1E               	movwf	wait00@k+3,c
   883  007A24  EC52  F03D         	call	_wait00	;wreg free
   884                           
   885                           ;sample.c: 51: PORTC=0x02;
   886  007A28  0E02               	movlw	2
   887  007A2A  6E82               	movwf	3970,c	;volatile
   888                           
   889                           ;sample.c: 52: wait00(6);
   890  007A2C  0E00               	movlw	0
   891  007A2E  6E1B               	movwf	wait00@k,c
   892  007A30  0E00               	movlw	0
   893  007A32  6E1C               	movwf	wait00@k+1,c
   894  007A34  0EC0               	movlw	192
   895  007A36  6E1D               	movwf	wait00@k+2,c
   896  007A38  0E40               	movlw	64
   897  007A3A  6E1E               	movwf	wait00@k+3,c
   898  007A3C  EC52  F03D         	call	_wait00	;wreg free
   899                           
   900                           ;sample.c: 53: PORTC=0x00;
   901  007A40  0E00               	movlw	0
   902  007A42  6E82               	movwf	3970,c	;volatile
   903                           
   904                           ;sample.c: 54: wait00(12);
   905  007A44  0E00               	movlw	0
   906  007A46  6E1B               	movwf	wait00@k,c
   907  007A48  0E00               	movlw	0
   908  007A4A  6E1C               	movwf	wait00@k+1,c
   909  007A4C  0E40               	movlw	64
   910  007A4E  6E1D               	movwf	wait00@k+2,c
   911  007A50  0E41               	movlw	65
   912  007A52  6E1E               	movwf	wait00@k+3,c
   913  007A54  EC52  F03D         	call	_wait00	;wreg free
   914  007A58  0012               	return		;funcret
   915  007A5A                     __end_of_small_left_down:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _right_down *****************
   921 ;; Defined at:
   922 ;;		line 21 in file "sample.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  2   28[None  ] int 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         0       0       0       0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		_wait00
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text4
   951  0079C6                     __ptext4:
   952                           	opt stack 0
   953  0079C6                     _right_down:
   954                           	opt stack 28
   955                           
   956                           ;sample.c: 22: PORTC=0x03;
   957                           
   958                           ;incstack = 0
   959  0079C6  0E03               	movlw	3
   960  0079C8  6E82               	movwf	3970,c	;volatile
   961                           
   962                           ;sample.c: 23: wait00(0.3);
   963  0079CA  0E9A               	movlw	154
   964  0079CC  6E1B               	movwf	wait00@k,c
   965  0079CE  0E99               	movlw	153
   966  0079D0  6E1C               	movwf	wait00@k+1,c
   967  0079D2  0E99               	movlw	153
   968  0079D4  6E1D               	movwf	wait00@k+2,c
   969  0079D6  0E3E               	movlw	62
   970  0079D8  6E1E               	movwf	wait00@k+3,c
   971  0079DA  EC52  F03D         	call	_wait00	;wreg free
   972                           
   973                           ;sample.c: 24: PORTC=0x01;
   974  0079DE  0E01               	movlw	1
   975  0079E0  6E82               	movwf	3970,c	;volatile
   976                           
   977                           ;sample.c: 25: wait00(15);
   978  0079E2  0E00               	movlw	0
   979  0079E4  6E1B               	movwf	wait00@k,c
   980  0079E6  0E00               	movlw	0
   981  0079E8  6E1C               	movwf	wait00@k+1,c
   982  0079EA  0E70               	movlw	112
   983  0079EC  6E1D               	movwf	wait00@k+2,c
   984  0079EE  0E41               	movlw	65
   985  0079F0  6E1E               	movwf	wait00@k+3,c
   986  0079F2  EC52  F03D         	call	_wait00	;wreg free
   987                           
   988                           ;sample.c: 26: PORTC=0x00;
   989  0079F6  0E00               	movlw	0
   990  0079F8  6E82               	movwf	3970,c	;volatile
   991                           
   992                           ;sample.c: 27: wait00(20);
   993  0079FA  0E00               	movlw	0
   994  0079FC  6E1B               	movwf	wait00@k,c
   995  0079FE  0E00               	movlw	0
   996  007A00  6E1C               	movwf	wait00@k+1,c
   997  007A02  0EA0               	movlw	160
   998  007A04  6E1D               	movwf	wait00@k+2,c
   999  007A06  0E41               	movlw	65
  1000  007A08  6E1E               	movwf	wait00@k+3,c
  1001  007A0A  EC52  F03D         	call	_wait00	;wreg free
  1002  007A0E  0012               	return		;funcret
  1003  007A10                     __end_of_right_down:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           status	equ	0xFD8
  1007                           
  1008 ;; *************** function _left_down *****************
  1009 ;; Defined at:
  1010 ;;		line 39 in file "sample.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  2   34[None  ] int 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		_wait00
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text5
  1039  00797C                     __ptext5:
  1040                           	opt stack 0
  1041  00797C                     _left_down:
  1042                           	opt stack 28
  1043                           
  1044                           ;sample.c: 40: PORTC=0x03;
  1045                           
  1046                           ;incstack = 0
  1047  00797C  0E03               	movlw	3
  1048  00797E  6E82               	movwf	3970,c	;volatile
  1049                           
  1050                           ;sample.c: 41: wait00(0.3);
  1051  007980  0E9A               	movlw	154
  1052  007982  6E1B               	movwf	wait00@k,c
  1053  007984  0E99               	movlw	153
  1054  007986  6E1C               	movwf	wait00@k+1,c
  1055  007988  0E99               	movlw	153
  1056  00798A  6E1D               	movwf	wait00@k+2,c
  1057  00798C  0E3E               	movlw	62
  1058  00798E  6E1E               	movwf	wait00@k+3,c
  1059  007990  EC52  F03D         	call	_wait00	;wreg free
  1060                           
  1061                           ;sample.c: 42: PORTC=0x02;
  1062  007994  0E02               	movlw	2
  1063  007996  6E82               	movwf	3970,c	;volatile
  1064                           
  1065                           ;sample.c: 43: wait00(15);
  1066  007998  0E00               	movlw	0
  1067  00799A  6E1B               	movwf	wait00@k,c
  1068  00799C  0E00               	movlw	0
  1069  00799E  6E1C               	movwf	wait00@k+1,c
  1070  0079A0  0E70               	movlw	112
  1071  0079A2  6E1D               	movwf	wait00@k+2,c
  1072  0079A4  0E41               	movlw	65
  1073  0079A6  6E1E               	movwf	wait00@k+3,c
  1074  0079A8  EC52  F03D         	call	_wait00	;wreg free
  1075                           
  1076                           ;sample.c: 44: PORTC=0x00;
  1077  0079AC  0E00               	movlw	0
  1078  0079AE  6E82               	movwf	3970,c	;volatile
  1079                           
  1080                           ;sample.c: 45: wait00(20);
  1081  0079B0  0E00               	movlw	0
  1082  0079B2  6E1B               	movwf	wait00@k,c
  1083  0079B4  0E00               	movlw	0
  1084  0079B6  6E1C               	movwf	wait00@k+1,c
  1085  0079B8  0EA0               	movlw	160
  1086  0079BA  6E1D               	movwf	wait00@k+2,c
  1087  0079BC  0E41               	movlw	65
  1088  0079BE  6E1E               	movwf	wait00@k+3,c
  1089  0079C0  EC52  F03D         	call	_wait00	;wreg free
  1090  0079C4  0012               	return		;funcret
  1091  0079C6                     __end_of_left_down:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _wait00 *****************
  1097 ;; Defined at:
  1098 ;;		line 11 in file "sample.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  k               4   26[COMRAM] float 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  i               2   32[COMRAM] short 
  1103 ;;  j               2   30[COMRAM] short 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2   26[COMRAM] int 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         4       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        8 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    1
  1120 ;; This function calls:
  1121 ;;		___flge
  1122 ;;		___xxtofl
  1123 ;; This function is called by:
  1124 ;;		_right_down
  1125 ;;		_small_right_down
  1126 ;;		_left_down
  1127 ;;		_small_left_down
  1128 ;;		_straight
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text6
  1133  007AA4                     __ptext6:
  1134                           	opt stack 0
  1135  007AA4                     _wait00:
  1136                           	opt stack 28
  1137                           
  1138                           ;sample.c: 13: short i;
  1139                           ;sample.c: 14: short j;
  1140                           ;sample.c: 15: for(j=0;j<k;j++){
  1141                           
  1142                           ;incstack = 0
  1143  007AA4  0E00               	movlw	0
  1144  007AA6  6E20               	movwf	wait00@j+1,c
  1145  007AA8  0E00               	movlw	0
  1146  007AAA  6E1F               	movwf	wait00@j,c
  1147  007AAC  D011               	goto	l21
  1148  007AAE                     
  1149                           ;sample.c: 16: for(i=0;i<3000;i++){
  1150  007AAE  0E00               	movlw	0
  1151  007AB0  6E22               	movwf	wait00@i+1,c
  1152  007AB2  0E00               	movlw	0
  1153  007AB4  6E21               	movwf	wait00@i,c
  1154  007AB6                     l1104:
  1155  007AB6  BE22               	btfsc	wait00@i+1,7,c
  1156  007AB8  D006               	goto	l23
  1157  007ABA  0EB8               	movlw	184
  1158  007ABC  5C21               	subwf	wait00@i,w,c
  1159  007ABE  0E0B               	movlw	11
  1160  007AC0  5822               	subwfb	wait00@i+1,w,c
  1161  007AC2  B0D8               	btfsc	status,0,c
  1162  007AC4  D003               	goto	u470
  1163  007AC6                     l23:
  1164  007AC6  4A21               	infsnz	wait00@i,f,c
  1165  007AC8  2A22               	incf	wait00@i+1,f,c
  1166  007ACA  D7F5               	goto	l1104
  1167  007ACC                     u470:
  1168  007ACC  4A1F               	infsnz	wait00@j,f,c
  1169  007ACE  2A20               	incf	wait00@j+1,f,c
  1170  007AD0                     l21:
  1171  007AD0  C01F  F001         	movff	wait00@j,___xxtofl@val
  1172  007AD4  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1173  007AD8  0E00               	movlw	0
  1174  007ADA  BE02               	btfsc	___xxtofl@val+1,7,c
  1175  007ADC  0EFF               	movlw	-1
  1176  007ADE  6E03               	movwf	___xxtofl@val+2,c
  1177  007AE0  6E04               	movwf	___xxtofl@val+3,c
  1178  007AE2  0E01               	movlw	1
  1179  007AE4  EC19  F03E         	call	___xxtofl
  1180  007AE8  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1181  007AEC  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1182  007AF0  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1183  007AF4  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1184  007AF8  C01B  F013         	movff	wait00@k,___flge@ff2
  1185  007AFC  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1186  007B00  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1187  007B04  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1188  007B08  EC89  F03D         	call	___flge	;wreg free
  1189  007B0C  B0D8               	btfsc	status,0,c
  1190  007B0E  0012               	return	
  1191  007B10  D7CE               	goto	l22
  1192  007B12                     __end_of_wait00:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function ___xxtofl *****************
  1198 ;; Defined at:
  1199 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  sign            1    wreg     unsigned char 
  1202 ;;  val             4    0[COMRAM] long 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  sign            1    8[COMRAM] unsigned char 
  1205 ;;  arg             4   10[COMRAM] unsigned long 
  1206 ;;  exp             1    9[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  4    0[COMRAM] unsigned char 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         4       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1219 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:       14 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_wait00
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text7
  1230  007C32                     __ptext7:
  1231                           	opt stack 0
  1232  007C32                     ___xxtofl:
  1233                           	opt stack 28
  1234                           
  1235                           ;incstack = 0
  1236                           ;___xxtofl@sign stored from wreg
  1237  007C32  6E09               	movwf	___xxtofl@sign,c
  1238  007C34  5009               	movf	___xxtofl@sign,w,c
  1239  007C36  A4D8               	btfss	status,2,c
  1240  007C38  AE04               	btfss	___xxtofl@val+3,7,c
  1241  007C3A  D01A               	goto	l650
  1242  007C3C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1243  007C40  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1244  007C44  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1245  007C48  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1246  007C4C  1E05               	comf	??___xxtofl,f,c
  1247  007C4E  1E06               	comf	??___xxtofl+1,f,c
  1248  007C50  1E07               	comf	??___xxtofl+2,f,c
  1249  007C52  1E08               	comf	??___xxtofl+3,f,c
  1250  007C54  2A05               	incf	??___xxtofl,f,c
  1251  007C56  0E00               	movlw	0
  1252  007C58  2206               	addwfc	??___xxtofl+1,f,c
  1253  007C5A  2207               	addwfc	??___xxtofl+2,f,c
  1254  007C5C  2208               	addwfc	??___xxtofl+3,f,c
  1255  007C5E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1256  007C62  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1257  007C66  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1258  007C6A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1259  007C6E  D008               	goto	l651
  1260  007C70                     l650:
  1261  007C70  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1262  007C74  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1263  007C78  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1264  007C7C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1265  007C80                     l651:
  1266  007C80  5001               	movf	___xxtofl@val,w,c
  1267  007C82  1002               	iorwf	___xxtofl@val+1,w,c
  1268  007C84  1003               	iorwf	___xxtofl@val+2,w,c
  1269  007C86  1004               	iorwf	___xxtofl@val+3,w,c
  1270  007C88  A4D8               	btfss	status,2,c
  1271  007C8A  D009               	goto	l652
  1272  007C8C  0E00               	movlw	0
  1273  007C8E  6E01               	movwf	?___xxtofl,c
  1274  007C90  0E00               	movlw	0
  1275  007C92  6E02               	movwf	?___xxtofl+1,c
  1276  007C94  0E00               	movlw	0
  1277  007C96  6E03               	movwf	?___xxtofl+2,c
  1278  007C98  0E00               	movlw	0
  1279  007C9A  6E04               	movwf	?___xxtofl+3,c
  1280  007C9C  0012               	return	
  1281  007C9E                     l652:
  1282  007C9E  0E96               	movlw	150
  1283  007CA0  6E0A               	movwf	___xxtofl@exp,c
  1284  007CA2  D006               	goto	l654
  1285  007CA4  2A0A               	incf	___xxtofl@exp,f,c
  1286  007CA6  90D8               	bcf	status,0,c
  1287  007CA8  320E               	rrcf	___xxtofl@arg+3,f,c
  1288  007CAA  320D               	rrcf	___xxtofl@arg+2,f,c
  1289  007CAC  320C               	rrcf	___xxtofl@arg+1,f,c
  1290  007CAE  320B               	rrcf	___xxtofl@arg,f,c
  1291  007CB0                     l654:
  1292  007CB0  0E00               	movlw	0
  1293  007CB2  140B               	andwf	___xxtofl@arg,w,c
  1294  007CB4  6E05               	movwf	??___xxtofl& (0+255),c
  1295  007CB6  0E00               	movlw	0
  1296  007CB8  140C               	andwf	___xxtofl@arg+1,w,c
  1297  007CBA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1298  007CBC  0E00               	movlw	0
  1299  007CBE  140D               	andwf	___xxtofl@arg+2,w,c
  1300  007CC0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1301  007CC2  0EFE               	movlw	254
  1302  007CC4  140E               	andwf	___xxtofl@arg+3,w,c
  1303  007CC6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1304  007CC8  5005               	movf	??___xxtofl,w,c
  1305  007CCA  1006               	iorwf	??___xxtofl+1,w,c
  1306  007CCC  1007               	iorwf	??___xxtofl+2,w,c
  1307  007CCE  1008               	iorwf	??___xxtofl+3,w,c
  1308  007CD0  B4D8               	btfsc	status,2,c
  1309  007CD2  D00D               	goto	l657
  1310  007CD4  D7E7               	goto	l655
  1311  007CD6  2A0A               	incf	___xxtofl@exp,f,c
  1312  007CD8  0E01               	movlw	1
  1313  007CDA  260B               	addwf	___xxtofl@arg,f,c
  1314  007CDC  0E00               	movlw	0
  1315  007CDE  220C               	addwfc	___xxtofl@arg+1,f,c
  1316  007CE0  220D               	addwfc	___xxtofl@arg+2,f,c
  1317  007CE2  220E               	addwfc	___xxtofl@arg+3,f,c
  1318  007CE4  90D8               	bcf	status,0,c
  1319  007CE6  320E               	rrcf	___xxtofl@arg+3,f,c
  1320  007CE8  320D               	rrcf	___xxtofl@arg+2,f,c
  1321  007CEA  320C               	rrcf	___xxtofl@arg+1,f,c
  1322  007CEC  320B               	rrcf	___xxtofl@arg,f,c
  1323  007CEE                     l657:
  1324  007CEE  0E00               	movlw	0
  1325  007CF0  140B               	andwf	___xxtofl@arg,w,c
  1326  007CF2  6E05               	movwf	??___xxtofl& (0+255),c
  1327  007CF4  0E00               	movlw	0
  1328  007CF6  140C               	andwf	___xxtofl@arg+1,w,c
  1329  007CF8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1330  007CFA  0E00               	movlw	0
  1331  007CFC  140D               	andwf	___xxtofl@arg+2,w,c
  1332  007CFE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1333  007D00  0EFF               	movlw	255
  1334  007D02  140E               	andwf	___xxtofl@arg+3,w,c
  1335  007D04  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1336  007D06  5005               	movf	??___xxtofl,w,c
  1337  007D08  1006               	iorwf	??___xxtofl+1,w,c
  1338  007D0A  1007               	iorwf	??___xxtofl+2,w,c
  1339  007D0C  1008               	iorwf	??___xxtofl+3,w,c
  1340  007D0E  B4D8               	btfsc	status,2,c
  1341  007D10  D007               	goto	l660
  1342  007D12  D7E1               	goto	l658
  1343  007D14  060A               	decf	___xxtofl@exp,f,c
  1344  007D16  90D8               	bcf	status,0,c
  1345  007D18  360B               	rlcf	___xxtofl@arg,f,c
  1346  007D1A  360C               	rlcf	___xxtofl@arg+1,f,c
  1347  007D1C  360D               	rlcf	___xxtofl@arg+2,f,c
  1348  007D1E  360E               	rlcf	___xxtofl@arg+3,f,c
  1349  007D20                     l660:
  1350  007D20  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1351  007D22  D003               	goto	u420
  1352  007D24  0E02               	movlw	2
  1353  007D26  600A               	cpfslt	___xxtofl@exp,c
  1354  007D28  D7F5               	goto	l661
  1355  007D2A                     u420:
  1356  007D2A  B00A               	btfsc	___xxtofl@exp,0,c
  1357  007D2C  D008               	goto	l665
  1358  007D2E  0EFF               	movlw	255
  1359  007D30  160B               	andwf	___xxtofl@arg,f,c
  1360  007D32  0EFF               	movlw	255
  1361  007D34  160C               	andwf	___xxtofl@arg+1,f,c
  1362  007D36  0E7F               	movlw	127
  1363  007D38  160D               	andwf	___xxtofl@arg+2,f,c
  1364  007D3A  0EFF               	movlw	255
  1365  007D3C  160E               	andwf	___xxtofl@arg+3,f,c
  1366  007D3E                     l665:
  1367  007D3E  90D8               	bcf	status,0,c
  1368  007D40  320A               	rrcf	___xxtofl@exp,f,c
  1369  007D42  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1370  007D46  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1371  007D48  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1372  007D4A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1373  007D4C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1374  007D50  6A07               	clrf	??___xxtofl+2,c
  1375  007D52  6A06               	clrf	??___xxtofl+1,c
  1376  007D54  6A05               	clrf	??___xxtofl,c
  1377  007D56  5005               	movf	??___xxtofl,w,c
  1378  007D58  120B               	iorwf	___xxtofl@arg,f,c
  1379  007D5A  5006               	movf	??___xxtofl+1,w,c
  1380  007D5C  120C               	iorwf	___xxtofl@arg+1,f,c
  1381  007D5E  5007               	movf	??___xxtofl+2,w,c
  1382  007D60  120D               	iorwf	___xxtofl@arg+2,f,c
  1383  007D62  5008               	movf	??___xxtofl+3,w,c
  1384  007D64  120E               	iorwf	___xxtofl@arg+3,f,c
  1385  007D66  5009               	movf	___xxtofl@sign,w,c
  1386  007D68  A4D8               	btfss	status,2,c
  1387  007D6A  AE04               	btfss	___xxtofl@val+3,7,c
  1388  007D6C  D001               	goto	l666
  1389  007D6E  8E0E               	bsf	___xxtofl@arg+3,7,c
  1390  007D70                     l666:
  1391  007D70  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1392  007D74  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1393  007D78  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1394  007D7C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1395  007D80  0012               	return	
  1396  007D82                     __end_of___xxtofl:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function ___flge *****************
  1402 ;; Defined at:
  1403 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  ff1             4   14[COMRAM] unsigned char 
  1406 ;;  ff2             4   18[COMRAM] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;		None               void
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1418 ;;      Params:         8       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1420 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1421 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1422 ;;Total ram usage:       12 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_wait00
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text8
  1432  007B12                     __ptext8:
  1433                           	opt stack 0
  1434  007B12                     ___flge:
  1435                           	opt stack 28
  1436                           
  1437                           ;incstack = 0
  1438  007B12  0E00               	movlw	0
  1439  007B14  140F               	andwf	___flge@ff1,w,c
  1440  007B16  6E17               	movwf	??___flge& (0+255),c
  1441  007B18  0E00               	movlw	0
  1442  007B1A  1410               	andwf	___flge@ff1+1,w,c
  1443  007B1C  6E18               	movwf	(??___flge+1)& (0+255),c
  1444  007B1E  0E80               	movlw	128
  1445  007B20  1411               	andwf	___flge@ff1+2,w,c
  1446  007B22  6E19               	movwf	(??___flge+2)& (0+255),c
  1447  007B24  0E7F               	movlw	127
  1448  007B26  1412               	andwf	___flge@ff1+3,w,c
  1449  007B28  6E1A               	movwf	(??___flge+3)& (0+255),c
  1450  007B2A  5017               	movf	??___flge,w,c
  1451  007B2C  1018               	iorwf	??___flge+1,w,c
  1452  007B2E  1019               	iorwf	??___flge+2,w,c
  1453  007B30  101A               	iorwf	??___flge+3,w,c
  1454  007B32  A4D8               	btfss	status,2,c
  1455  007B34  D008               	goto	l302
  1456  007B36  0E00               	movlw	0
  1457  007B38  6E0F               	movwf	___flge@ff1,c
  1458  007B3A  0E00               	movlw	0
  1459  007B3C  6E10               	movwf	___flge@ff1+1,c
  1460  007B3E  0E00               	movlw	0
  1461  007B40  6E11               	movwf	___flge@ff1+2,c
  1462  007B42  0E00               	movlw	0
  1463  007B44  6E12               	movwf	___flge@ff1+3,c
  1464  007B46                     l302:
  1465  007B46  0E00               	movlw	0
  1466  007B48  1413               	andwf	___flge@ff2,w,c
  1467  007B4A  6E17               	movwf	??___flge& (0+255),c
  1468  007B4C  0E00               	movlw	0
  1469  007B4E  1414               	andwf	___flge@ff2+1,w,c
  1470  007B50  6E18               	movwf	(??___flge+1)& (0+255),c
  1471  007B52  0E80               	movlw	128
  1472  007B54  1415               	andwf	___flge@ff2+2,w,c
  1473  007B56  6E19               	movwf	(??___flge+2)& (0+255),c
  1474  007B58  0E7F               	movlw	127
  1475  007B5A  1416               	andwf	___flge@ff2+3,w,c
  1476  007B5C  6E1A               	movwf	(??___flge+3)& (0+255),c
  1477  007B5E  5017               	movf	??___flge,w,c
  1478  007B60  1018               	iorwf	??___flge+1,w,c
  1479  007B62  1019               	iorwf	??___flge+2,w,c
  1480  007B64  101A               	iorwf	??___flge+3,w,c
  1481  007B66  A4D8               	btfss	status,2,c
  1482  007B68  D008               	goto	l303
  1483  007B6A  0E00               	movlw	0
  1484  007B6C  6E13               	movwf	___flge@ff2,c
  1485  007B6E  0E00               	movlw	0
  1486  007B70  6E14               	movwf	___flge@ff2+1,c
  1487  007B72  0E00               	movlw	0
  1488  007B74  6E15               	movwf	___flge@ff2+2,c
  1489  007B76  0E00               	movlw	0
  1490  007B78  6E16               	movwf	___flge@ff2+3,c
  1491  007B7A                     l303:
  1492  007B7A  AE12               	btfss	___flge@ff1+3,7,c
  1493  007B7C  D01D               	goto	l304
  1494  007B7E  C00F  F017         	movff	___flge@ff1,??___flge
  1495  007B82  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1496  007B86  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1497  007B8A  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1498  007B8E  1E17               	comf	??___flge,f,c
  1499  007B90  1E18               	comf	??___flge+1,f,c
  1500  007B92  1E19               	comf	??___flge+2,f,c
  1501  007B94  1E1A               	comf	??___flge+3,f,c
  1502  007B96  2A17               	incf	??___flge,f,c
  1503  007B98  0E00               	movlw	0
  1504  007B9A  2218               	addwfc	??___flge+1,f,c
  1505  007B9C  2219               	addwfc	??___flge+2,f,c
  1506  007B9E  221A               	addwfc	??___flge+3,f,c
  1507  007BA0  0E00               	movlw	0
  1508  007BA2  2417               	addwf	??___flge,w,c
  1509  007BA4  6E0F               	movwf	___flge@ff1,c
  1510  007BA6  0E00               	movlw	0
  1511  007BA8  2018               	addwfc	??___flge+1,w,c
  1512  007BAA  6E10               	movwf	___flge@ff1+1,c
  1513  007BAC  0E00               	movlw	0
  1514  007BAE  2019               	addwfc	??___flge+2,w,c
  1515  007BB0  6E11               	movwf	___flge@ff1+2,c
  1516  007BB2  0E80               	movlw	128
  1517  007BB4  201A               	addwfc	??___flge+3,w,c
  1518  007BB6  6E12               	movwf	___flge@ff1+3,c
  1519  007BB8                     l304:
  1520  007BB8  AE16               	btfss	___flge@ff2+3,7,c
  1521  007BBA  D01D               	goto	l305
  1522  007BBC  C013  F017         	movff	___flge@ff2,??___flge
  1523  007BC0  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1524  007BC4  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1525  007BC8  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1526  007BCC  1E17               	comf	??___flge,f,c
  1527  007BCE  1E18               	comf	??___flge+1,f,c
  1528  007BD0  1E19               	comf	??___flge+2,f,c
  1529  007BD2  1E1A               	comf	??___flge+3,f,c
  1530  007BD4  2A17               	incf	??___flge,f,c
  1531  007BD6  0E00               	movlw	0
  1532  007BD8  2218               	addwfc	??___flge+1,f,c
  1533  007BDA  2219               	addwfc	??___flge+2,f,c
  1534  007BDC  221A               	addwfc	??___flge+3,f,c
  1535  007BDE  0E00               	movlw	0
  1536  007BE0  2417               	addwf	??___flge,w,c
  1537  007BE2  6E13               	movwf	___flge@ff2,c
  1538  007BE4  0E00               	movlw	0
  1539  007BE6  2018               	addwfc	??___flge+1,w,c
  1540  007BE8  6E14               	movwf	___flge@ff2+1,c
  1541  007BEA  0E00               	movlw	0
  1542  007BEC  2019               	addwfc	??___flge+2,w,c
  1543  007BEE  6E15               	movwf	___flge@ff2+2,c
  1544  007BF0  0E80               	movlw	128
  1545  007BF2  201A               	addwfc	??___flge+3,w,c
  1546  007BF4  6E16               	movwf	___flge@ff2+3,c
  1547  007BF6                     l305:
  1548  007BF6  0E00               	movlw	0
  1549  007BF8  1A0F               	xorwf	___flge@ff1,f,c
  1550  007BFA  0E00               	movlw	0
  1551  007BFC  1A10               	xorwf	___flge@ff1+1,f,c
  1552  007BFE  0E00               	movlw	0
  1553  007C00  1A11               	xorwf	___flge@ff1+2,f,c
  1554  007C02  0E80               	movlw	128
  1555  007C04  1A12               	xorwf	___flge@ff1+3,f,c
  1556  007C06  0E00               	movlw	0
  1557  007C08  1A13               	xorwf	___flge@ff2,f,c
  1558  007C0A  0E00               	movlw	0
  1559  007C0C  1A14               	xorwf	___flge@ff2+1,f,c
  1560  007C0E  0E00               	movlw	0
  1561  007C10  1A15               	xorwf	___flge@ff2+2,f,c
  1562  007C12  0E80               	movlw	128
  1563  007C14  1A16               	xorwf	___flge@ff2+3,f,c
  1564  007C16  5013               	movf	___flge@ff2,w,c
  1565  007C18  5C0F               	subwf	___flge@ff1,w,c
  1566  007C1A  5014               	movf	___flge@ff2+1,w,c
  1567  007C1C  5810               	subwfb	___flge@ff1+1,w,c
  1568  007C1E  5015               	movf	___flge@ff2+2,w,c
  1569  007C20  5811               	subwfb	___flge@ff1+2,w,c
  1570  007C22  5016               	movf	___flge@ff2+3,w,c
  1571  007C24  5812               	subwfb	___flge@ff1+3,w,c
  1572  007C26  B0D8               	btfsc	status,0,c
  1573  007C28  D002               	goto	l1032
  1574  007C2A  90D8               	bcf	status,0,c
  1575  007C2C  0012               	return	
  1576  007C2E                     l1032:
  1577  007C2E  80D8               	bsf	status,0,c
  1578  007C30  0012               	return	
  1579  007C32                     __end_of___flge:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function _led_sens *****************
  1585 ;; Defined at:
  1586 ;;		line 64 in file "sample.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  2   43[None  ] int 
  1593 ;; Registers used:
  1594 ;;		None
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text9
  1614  007948                     __ptext9:
  1615                           	opt stack 0
  1616  007948                     _led_sens:
  1617                           	opt stack 30
  1618                           
  1619                           ;sample.c: 65: PORTAbits.RA0 = PORTBbits.RB0;
  1620                           
  1621                           ;incstack = 0
  1622  007948  A081               	btfss	3969,0,c	;volatile
  1623  00794A  D002               	bra	u195
  1624  00794C  8080               	bsf	3968,0,c	;volatile
  1625  00794E  D001               	bra	u197
  1626  007950                     u195:
  1627  007950  9080               	bcf	3968,0,c	;volatile
  1628  007952                     u197:
  1629                           
  1630                           ;sample.c: 66: PORTAbits.RA1 = PORTBbits.RB1;
  1631  007952  A281               	btfss	3969,1,c	;volatile
  1632  007954  D002               	bra	u205
  1633  007956  8280               	bsf	3968,1,c	;volatile
  1634  007958  D001               	bra	u207
  1635  00795A                     u205:
  1636  00795A  9280               	bcf	3968,1,c	;volatile
  1637  00795C                     u207:
  1638                           
  1639                           ;sample.c: 67: PORTAbits.RA2 = PORTBbits.RB2;
  1640  00795C  A481               	btfss	3969,2,c	;volatile
  1641  00795E  D002               	bra	u215
  1642  007960  8480               	bsf	3968,2,c	;volatile
  1643  007962  D001               	bra	u217
  1644  007964                     u215:
  1645  007964  9480               	bcf	3968,2,c	;volatile
  1646  007966                     u217:
  1647                           
  1648                           ;sample.c: 68: PORTAbits.RA3 = PORTBbits.RB3;
  1649  007966  A681               	btfss	3969,3,c	;volatile
  1650  007968  D002               	bra	u225
  1651  00796A  8680               	bsf	3968,3,c	;volatile
  1652  00796C  D001               	bra	u227
  1653  00796E                     u225:
  1654  00796E  9680               	bcf	3968,3,c	;volatile
  1655  007970                     u227:
  1656                           
  1657                           ;sample.c: 69: PORTAbits.RA4 = PORTBbits.RB4;
  1658  007970  A881               	btfss	3969,4,c	;volatile
  1659  007972  D002               	bra	u235
  1660  007974  8880               	bsf	3968,4,c	;volatile
  1661  007976  D001               	bra	u237
  1662  007978                     u235:
  1663  007978  9880               	bcf	3968,4,c	;volatile
  1664  00797A                     u237:
  1665  00797A  0012               	return		;funcret
  1666  00797C                     __end_of_led_sens:
  1667                           	opt stack 0
  1668  0000                     tblptru	equ	0xFF8
  1669                           status	equ	0xFD8
  1670                           tblptru	equ	0xFF8
  1671                           status	equ	0xFD8
  1672                           
  1673                           	psect	rparam
  1674  0000                     tblptru	equ	0xFF8
  1675                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9616
                                             34 COMRAM     4     4      0
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1888
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     26      26       1       40.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 01 16:57:39 2018

                       l21 7AD0                         l22 7AAE                         l23 7AC6  
                       l50 7DA6                         l53 7F3C                         l61 7DD8  
                       l70 7E42                         l62 7DE6                         l54 7DB4  
                       l63 7DFA                         l80 7E90                         l72 7E58  
                       l64 7E0E                         l56 7DC4                         l81 7E9E  
                       l49 7DAA                         l66 7E14                         l58 7DD2  
                       l91 7EDC                         l83 7EAC                         l76 7E66  
                       l68 7E22                         l93 7EEA                         l69 7E34  
                       l94 7EFE                         l78 7E74                         l95 7F0C  
                       l87 7EBA                         l79 7E82                         l88 7EC8  
                       l97 7F1A                         l89 7ED6                         l98 7F28  
                       l99 7F36                        l302 7B46                        l303 7B7A  
                      l304 7BB8                        l305 7BF6                        l650 7C70  
                      l651 7C80                        l660 7D20                        l652 7C9E  
                      l661 7D14                        l654 7CB0                        l655 7CA4  
                      l665 7D3E                        l657 7CEE                        l666 7D70  
                      l658 7CD6                        u205 795A                        u215 7964  
                      u207 795C                        u225 796E                        u217 7966  
                      u235 7978                        u227 7970                        u420 7D2A  
                      u237 797A                        u195 7950                        u197 7952  
                      u470 7ACC                        u490 7DAE                       l1032 7C2E  
                     l1104 7AB6                       l1200 7E06                       l1228 7E4E  
                     l1194 7DF2                       l1298 7EF6                       _main 7D82  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 004A            _small_left_down 7A10                      status 000FD8  
          __initialization 790C               __end_of_main 8000                     ??_main 0023  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of___xxtofl 7D82  
                   ___flge 7B12           __end_of_led_sens 797C                     _wait00 7AA4  
                   tblptru 000FF8    __end_of_small_left_down 7A5A           __end_of_straight 7948  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 790C             main@background 0025              ___rparam_used 000001  
           __pcstackCOMRAM 0001           _small_right_down 7A5A         __size_of_left_down 004A  
                  ?___flge 000F                    ?_wait00 001B                  ?___xxtofl 0001  
         ?_small_left_down 0001                  ?_led_sens 0001                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0120                  ?_straight 0001  
                  __pcinit 790C                    __ramtop 0800            __size_of_wait00 006E  
        __end_of_left_down 79C6                    __ptext0 7D82                    __ptext1 7916  
                  __ptext2 7A5A                    __ptext3 7A10                    __ptext4 79C6  
                  __ptext5 797C                    __ptext6 7AA4                    __ptext7 7C32  
                  __ptext8 7B12                    __ptext9 7948                 ??___xxtofl 0005  
     end_of_initialization 790C                 ??_led_sens 0001              __Lmediumconst 0000  
                  wait00@i 0021                    wait00@j 001F                    wait00@k 001B  
               _right_down 79C6                 ??_straight 0023                  _PORTAbits 000F80  
                _PORTBbits 000F81              ___xxtofl@sign 0009                 main@status 0023  
 __end_of_small_right_down 7AA4             __end_of___flge 7C32             __end_of_wait00 7B12  
      start_initialization 790C                ?_right_down 0001                   ??___flge 0017  
                 ??_wait00 001F          __size_of___xxtofl 0150          __size_of_led_sens 0034  
        __size_of_straight 0032                  _left_down 797C        __size_of_right_down 004A  
 __size_of_small_left_down 004A                 ?_left_down 0001                   __Hrparam 0000  
                 __Lrparam 0000          ?_small_right_down 0001         ??_small_right_down 0023  
                 ___xxtofl 7C32                   _led_sens 7948              __size_of_main 027E  
             ??_right_down 0023          ??_small_left_down 0023                   _straight 7916  
              ??_left_down 0023         __end_of_right_down 7A10  
