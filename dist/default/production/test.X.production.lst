

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 23 21:40:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F2553 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTB	set	3969
    53  0000                     _PORTA	set	3968
    54  0000                     _TRISC	set	3988
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISA	set	3986
    57  0000                     _ADCON1	set	4033
    58  0000                     _PORTBbits	set	3969
    59  0000                     _PORTAbits	set	3968
    60  0000                     _PORTC	set	3970
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  007D38                     __pcinit:
    66                           	opt stack 0
    67  007D38                     start_initialization:
    68                           	opt stack 0
    69  007D38                     __initialization:
    70                           	opt stack 0
    71  007D38                     end_of_initialization:
    72                           	opt stack 0
    73  007D38                     __end_of__initialization:
    74                           	opt stack 0
    75  007D38  0E00               	movlw	low (__Lmediumconst shr (0+16))
    76  007D3A  6EF8               	movwf	tblptru,c
    77  007D3C  0100               	movlb	0
    78  007D3E  EF51  F03F         	goto	_main	;jump to C main() function
    79                           tblptru	equ	0xFF8
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	opt stack 0
    84  000001                     wait00@k:
    85                           	opt stack 0
    86                           
    87                           ; 2 bytes @ 0x0
    88  000001                     	ds	2
    89  000003                     ??_wait00:
    90                           
    91                           ; 1 bytes @ 0x2
    92  000003                     	ds	1
    93  000004                     wait00@j:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x3
    97  000004                     	ds	2
    98  000006                     wait00@i:
    99                           	opt stack 0
   100                           
   101                           ; 2 bytes @ 0x5
   102  000006                     	ds	2
   103  000008                     tblptru	equ	0xFF8
   104                           
   105                           ; 1 bytes @ 0x7
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 69 in file "sample.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;		None
   116 ;; Return value:  Size  Location     Type
   117 ;;                  2   48[None  ] int 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   125 ;;      Params:         0       0       0       0       0       0       0       0       0
   126 ;;      Locals:         0       0       0       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0
   128 ;;      Totals:         0       0       0       0       0       0       0       0       0
   129 ;;Total ram usage:        0 bytes
   130 ;; Hardware stack levels required when called:    2
   131 ;; This function calls:
   132 ;;		_led_sens
   133 ;;		_left_down
   134 ;;		_right_down
   135 ;;		_small_left_down
   136 ;;		_small_right_down
   137 ;;		_straight
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144  007EA2                     __ptext0:
   145                           	opt stack 0
   146  007EA2                     _main:
   147                           	opt stack 29
   148                           
   149                           ;sample.c: 72: ADCON1 = 0x0F;
   150                           
   151                           ;incstack = 0
   152  007EA2  0E0F               	movlw	15
   153  007EA4  6EC1               	movwf	4033,c	;volatile
   154                           
   155                           ;sample.c: 75: TRISA = 0x20;
   156  007EA6  0E20               	movlw	32
   157  007EA8  6E92               	movwf	3986,c	;volatile
   158                           
   159                           ;sample.c: 76: TRISB = 0xFF;
   160  007EAA  6893               	setf	3987,c	;volatile
   161                           
   162                           ;sample.c: 77: TRISC = 0x00;
   163  007EAC  0E00               	movlw	0
   164  007EAE  6E94               	movwf	3988,c	;volatile
   165                           
   166                           ;sample.c: 80: PORTA = 0x00;
   167  007EB0  0E00               	movlw	0
   168  007EB2  6E80               	movwf	3968,c	;volatile
   169                           
   170                           ;sample.c: 81: PORTB = 0x00;
   171  007EB4  0E00               	movlw	0
   172  007EB6  6E81               	movwf	3969,c	;volatile
   173                           
   174                           ;sample.c: 82: PORTC = 0x00;
   175  007EB8  0E00               	movlw	0
   176  007EBA  6E82               	movwf	3970,c	;volatile
   177                           
   178                           ;sample.c: 85: while(PORTAbits.RA5==1){
   179  007EBC  D002               	goto	l49
   180  007EBE                     
   181                           ;sample.c: 86: led_sens();
   182  007EBE  EC16  F03F         	call	_led_sens	;wreg free
   183  007EC2                     l49:
   184  007EC2  BA80               	btfsc	3968,5,c	;volatile
   185  007EC4  D7FC               	goto	l50
   186  007EC6                     u130:
   187                           
   188                           ;sample.c: 92: led_sens();
   189                           
   190                           ;sample.c: 87: }
   191                           ;sample.c: 91: while(1){
   192  007EC6  EC16  F03F         	call	_led_sens	;wreg free
   193                           
   194                           ;sample.c: 93: switch (PORTB) {
   195  007ECA  D038               	goto	l53
   196  007ECC                     
   197                           ;sample.c: 95: straight();
   198  007ECC  ECA1  F03E         	call	_straight	;wreg free
   199                           
   200                           ;sample.c: 96: break;
   201  007ED0  D7FA               	goto	u130
   202  007ED2                     
   203                           ;sample.c: 98: left_down();
   204  007ED2  ECB2  F03E         	call	_left_down	;wreg free
   205                           
   206                           ;sample.c: 99: break;
   207  007ED6  D7F7               	goto	u130
   208  007ED8                     
   209                           ;sample.c: 101: small_left_down();
   210  007ED8  ECE4  F03E         	call	_small_left_down	;wreg free
   211                           
   212                           ;sample.c: 102: break;
   213  007EDC  D7F4               	goto	u130
   214  007EDE                     
   215                           ;sample.c: 104: small_left_down();
   216  007EDE  ECE4  F03E         	call	_small_left_down	;wreg free
   217                           
   218                           ;sample.c: 105: break;
   219  007EE2  D7F1               	goto	u130
   220  007EE4                     
   221                           ;sample.c: 107: straight();
   222  007EE4  ECA1  F03E         	call	_straight	;wreg free
   223                           
   224                           ;sample.c: 109: case 0b00101: break;
   225                           
   226                           ;sample.c: 108: break;
   227  007EE8  D7EE               	goto	u130
   228  007EEA                     
   229                           ;sample.c: 111: small_left_down();
   230  007EEA  ECE4  F03E         	call	_small_left_down	;wreg free
   231                           
   232                           ;sample.c: 112: break;
   233  007EEE  D7EB               	goto	u130
   234  007EF0                     
   235                           ;sample.c: 114: small_right_down();
   236  007EF0  ECFD  F03E         	call	_small_right_down	;wreg free
   237                           
   238                           ;sample.c: 115: break;
   239  007EF4  D7E8               	goto	u130
   240  007EF6                     
   241                           ;sample.c: 117: small_right_down();
   242  007EF6  ECFD  F03E         	call	_small_right_down	;wreg free
   243                           
   244                           ;sample.c: 121: case 0b01011: break;
   245                           
   246                           ;sample.c: 120: case 0b01010: break;
   247                           
   248                           ;sample.c: 119: case 0b01001: break;
   249                           
   250                           ;sample.c: 118: break;
   251  007EFA  D7E5               	goto	u130
   252  007EFC                     
   253                           ;sample.c: 123: small_right_down();
   254  007EFC  ECFD  F03E         	call	_small_right_down	;wreg free
   255                           
   256                           ;sample.c: 125: case 0b01101: break;
   257                           
   258                           ;sample.c: 124: break;
   259  007F00  D7E2               	goto	u130
   260  007F02                     
   261                           ;sample.c: 127: straight();
   262  007F02  ECA1  F03E         	call	_straight	;wreg free
   263                           
   264                           ;sample.c: 128: break;
   265  007F06  D7DF               	goto	u130
   266  007F08                     
   267                           ;sample.c: 130: right_down();
   268  007F08  ECCB  F03E         	call	_right_down	;wreg free
   269                           
   270                           ;sample.c: 131: break;
   271  007F0C  D7DC               	goto	u130
   272  007F0E                     
   273                           ;sample.c: 133: right_down();
   274  007F0E  ECCB  F03E         	call	_right_down	;wreg free
   275                           
   276                           ;sample.c: 134: break;
   277  007F12  D7D9               	goto	u130
   278  007F14                     
   279                           ;sample.c: 136: straight();
   280  007F14  ECA1  F03E         	call	_straight	;wreg free
   281                           
   282                           ;sample.c: 143: case 0b10111: break;
   283                           
   284                           ;sample.c: 142: case 0b10110: break;
   285                           
   286                           ;sample.c: 141: case 0b10101: break;
   287                           
   288                           ;sample.c: 140: case 0b10100: break;
   289                           
   290                           ;sample.c: 139: case 0b10011: break;
   291                           
   292                           ;sample.c: 138: case 0b10010: break;
   293                           
   294                           ;sample.c: 137: break;
   295  007F18  D7D6               	goto	u130
   296  007F1A                     
   297                           ;sample.c: 145: small_right_down();
   298  007F1A  ECFD  F03E         	call	_small_right_down	;wreg free
   299                           
   300                           ;sample.c: 148: case 0b11010: break;
   301                           
   302                           ;sample.c: 147: case 0b11001: break;
   303                           
   304                           ;sample.c: 146: break;
   305  007F1E  D7D3               	goto	u130
   306  007F20                     
   307                           ;sample.c: 150: straight();
   308  007F20  ECA1  F03E         	call	_straight	;wreg free
   309                           
   310                           ;sample.c: 151: break;
   311  007F24  D7D0               	goto	u130
   312  007F26                     
   313                           ;sample.c: 153: small_left_down();
   314  007F26  ECE4  F03E         	call	_small_left_down	;wreg free
   315                           
   316                           ;sample.c: 155: case 0b11101: break;
   317                           
   318                           ;sample.c: 154: break;
   319  007F2A  D7CD               	goto	u130
   320  007F2C                     
   321                           ;sample.c: 157: left_down();
   322  007F2C  ECB2  F03E         	call	_left_down	;wreg free
   323  007F30                     l86:
   324                           
   325                           ;sample.c: 159: straight();
   326  007F30  ECA1  F03E         	call	_straight	;wreg free
   327                           
   328                           ;sample.c: 160: break;
   329  007F34  D7C8               	goto	u130
   330  007F36                     
   331                           ;sample.c: 162: straight();
   332  007F36  ECA1  F03E         	call	_straight	;wreg free
   333                           
   334                           ;sample.c: 164: }
   335                           
   336                           ;sample.c: 163: break;
   337  007F3A  D7C5               	goto	u130
   338  007F3C                     l53:
   339  007F3C  5081               	movf	3969,w,c	;volatile
   340                           
   341                           ; Switch size 1, requested type "space"
   342                           ; Number of cases is 32, Range of values is 0 to 31
   343                           ; switch strategies available:
   344                           ; Name         Instructions Cycles
   345                           ; simple_byte           97    49 (average)
   346                           ;	Chosen strategy is simple_byte
   347  007F3E  0A00               	xorlw	0	; case 0
   348  007F40  B4D8               	btfsc	status,2,c
   349  007F42  D7C4               	goto	l54
   350  007F44  0A01               	xorlw	1	; case 1
   351  007F46  B4D8               	btfsc	status,2,c
   352  007F48  D7C4               	goto	l56
   353  007F4A  0A03               	xorlw	3	; case 2
   354  007F4C  B4D8               	btfsc	status,2,c
   355  007F4E  D7C4               	goto	l57
   356  007F50  0A01               	xorlw	1	; case 3
   357  007F52  B4D8               	btfsc	status,2,c
   358  007F54  D7C4               	goto	l58
   359  007F56  0A07               	xorlw	7	; case 4
   360  007F58  B4D8               	btfsc	status,2,c
   361  007F5A  D7C4               	goto	l59
   362  007F5C  0A01               	xorlw	1	; case 5
   363  007F5E  B4D8               	btfsc	status,2,c
   364  007F60  D7B2               	goto	u130
   365  007F62  0A03               	xorlw	3	; case 6
   366  007F64  B4D8               	btfsc	status,2,c
   367  007F66  D7C1               	goto	l61
   368  007F68  0A01               	xorlw	1	; case 7
   369  007F6A  B4D8               	btfsc	status,2,c
   370  007F6C  D7C1               	goto	l62
   371  007F6E  0A0F               	xorlw	15	; case 8
   372  007F70  B4D8               	btfsc	status,2,c
   373  007F72  D7C1               	goto	l63
   374  007F74  0A01               	xorlw	1	; case 9
   375  007F76  B4D8               	btfsc	status,2,c
   376  007F78  D7A6               	goto	u130
   377  007F7A  0A03               	xorlw	3	; case 10
   378  007F7C  B4D8               	btfsc	status,2,c
   379  007F7E  D7A3               	goto	u130
   380  007F80  0A01               	xorlw	1	; case 11
   381  007F82  B4D8               	btfsc	status,2,c
   382  007F84  D7A0               	goto	u130
   383  007F86  0A07               	xorlw	7	; case 12
   384  007F88  B4D8               	btfsc	status,2,c
   385  007F8A  D7B8               	goto	l67
   386  007F8C  0A01               	xorlw	1	; case 13
   387  007F8E  B4D8               	btfsc	status,2,c
   388  007F90  D79A               	goto	u130
   389  007F92  0A03               	xorlw	3	; case 14
   390  007F94  B4D8               	btfsc	status,2,c
   391  007F96  D7B5               	goto	l69
   392  007F98  0A01               	xorlw	1	; case 15
   393  007F9A  B4D8               	btfsc	status,2,c
   394  007F9C  D7B5               	goto	l70
   395  007F9E  0A1F               	xorlw	31	; case 16
   396  007FA0  B4D8               	btfsc	status,2,c
   397  007FA2  D7B5               	goto	l71
   398  007FA4  0A01               	xorlw	1	; case 17
   399  007FA6  B4D8               	btfsc	status,2,c
   400  007FA8  D7B5               	goto	l72
   401  007FAA  0A03               	xorlw	3	; case 18
   402  007FAC  B4D8               	btfsc	status,2,c
   403  007FAE  D78B               	goto	u130
   404  007FB0  0A01               	xorlw	1	; case 19
   405  007FB2  B4D8               	btfsc	status,2,c
   406  007FB4  D788               	goto	u130
   407  007FB6  0A07               	xorlw	7	; case 20
   408  007FB8  B4D8               	btfsc	status,2,c
   409  007FBA  D785               	goto	u130
   410  007FBC  0A01               	xorlw	1	; case 21
   411  007FBE  B4D8               	btfsc	status,2,c
   412  007FC0  D782               	goto	u130
   413  007FC2  0A03               	xorlw	3	; case 22
   414  007FC4  B4D8               	btfsc	status,2,c
   415  007FC6  D77F               	goto	u130
   416  007FC8  0A01               	xorlw	1	; case 23
   417  007FCA  B4D8               	btfsc	status,2,c
   418  007FCC  D77C               	goto	u130
   419  007FCE  0A0F               	xorlw	15	; case 24
   420  007FD0  B4D8               	btfsc	status,2,c
   421  007FD2  D7A3               	goto	l79
   422  007FD4  0A01               	xorlw	1	; case 25
   423  007FD6  B4D8               	btfsc	status,2,c
   424  007FD8  D776               	goto	u130
   425  007FDA  0A03               	xorlw	3	; case 26
   426  007FDC  B4D8               	btfsc	status,2,c
   427  007FDE  D773               	goto	u130
   428  007FE0  0A01               	xorlw	1	; case 27
   429  007FE2  B4D8               	btfsc	status,2,c
   430  007FE4  D79D               	goto	l82
   431  007FE6  0A07               	xorlw	7	; case 28
   432  007FE8  B4D8               	btfsc	status,2,c
   433  007FEA  D79D               	goto	l83
   434  007FEC  0A01               	xorlw	1	; case 29
   435  007FEE  B4D8               	btfsc	status,2,c
   436  007FF0  D76A               	goto	u130
   437  007FF2  0A03               	xorlw	3	; case 30
   438  007FF4  B4D8               	btfsc	status,2,c
   439  007FF6  D79A               	goto	l85
   440  007FF8  0A01               	xorlw	1	; case 31
   441  007FFA  B4D8               	btfsc	status,2,c
   442  007FFC  D799               	goto	l86
   443  007FFE  D79B               	goto	l87
   444  008000                     __end_of_main:
   445                           	opt stack 0
   446                           tblptru	equ	0xFF8
   447                           status	equ	0xFD8
   448                           
   449 ;; *************** function _straight *****************
   450 ;; Defined at:
   451 ;;		line 53 in file "sample.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2   40[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; Hardware stack levels required when called:    1
   472 ;; This function calls:
   473 ;;		_wait00
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text1
   480  007D42                     __ptext1:
   481                           	opt stack 0
   482  007D42                     _straight:
   483                           	opt stack 29
   484                           
   485                           ;sample.c: 54: PORTC=0x03;
   486                           
   487                           ;incstack = 0
   488  007D42  0E03               	movlw	3
   489  007D44  6E82               	movwf	3970,c	;volatile
   490                           
   491                           ;sample.c: 55: wait00(8);
   492  007D46  0E00               	movlw	0
   493  007D48  6E02               	movwf	wait00@k+1,c
   494  007D4A  0E08               	movlw	8
   495  007D4C  6E01               	movwf	wait00@k,c
   496  007D4E  EC30  F03F         	call	_wait00	;wreg free
   497                           
   498                           ;sample.c: 56: PORTC=0x00;
   499  007D52  0E00               	movlw	0
   500  007D54  6E82               	movwf	3970,c	;volatile
   501                           
   502                           ;sample.c: 57: wait00(20);
   503  007D56  0E00               	movlw	0
   504  007D58  6E02               	movwf	wait00@k+1,c
   505  007D5A  0E14               	movlw	20
   506  007D5C  6E01               	movwf	wait00@k,c
   507  007D5E  EC30  F03F         	call	_wait00	;wreg free
   508  007D62  0012               	return		;funcret
   509  007D64                     __end_of_straight:
   510                           	opt stack 0
   511                           tblptru	equ	0xFF8
   512                           status	equ	0xFD8
   513                           
   514 ;; *************** function _small_right_down *****************
   515 ;; Defined at:
   516 ;;		line 44 in file "sample.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  2   37[None  ] int 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    1
   537 ;; This function calls:
   538 ;;		_wait00
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text2
   545  007DFA                     __ptext2:
   546                           	opt stack 0
   547  007DFA                     _small_right_down:
   548                           	opt stack 29
   549                           
   550                           ;sample.c: 45: PORTC=0x03;
   551                           
   552                           ;incstack = 0
   553  007DFA  0E03               	movlw	3
   554  007DFC  6E82               	movwf	3970,c	;volatile
   555                           
   556                           ;sample.c: 46: wait00(0.3);
   557  007DFE  0E00               	movlw	0
   558  007E00  6E02               	movwf	wait00@k+1,c
   559  007E02  0E00               	movlw	0
   560  007E04  6E01               	movwf	wait00@k,c
   561  007E06  EC30  F03F         	call	_wait00	;wreg free
   562                           
   563                           ;sample.c: 47: PORTC=0x02;
   564  007E0A  0E02               	movlw	2
   565  007E0C  6E82               	movwf	3970,c	;volatile
   566                           
   567                           ;sample.c: 48: wait00(2);
   568  007E0E  0E00               	movlw	0
   569  007E10  6E02               	movwf	wait00@k+1,c
   570  007E12  0E02               	movlw	2
   571  007E14  6E01               	movwf	wait00@k,c
   572  007E16  EC30  F03F         	call	_wait00	;wreg free
   573                           
   574                           ;sample.c: 49: PORTC=0x00;
   575  007E1A  0E00               	movlw	0
   576  007E1C  6E82               	movwf	3970,c	;volatile
   577                           
   578                           ;sample.c: 50: wait00(20);
   579  007E1E  0E00               	movlw	0
   580  007E20  6E02               	movwf	wait00@k+1,c
   581  007E22  0E14               	movlw	20
   582  007E24  6E01               	movwf	wait00@k,c
   583  007E26  EC30  F03F         	call	_wait00	;wreg free
   584  007E2A  0012               	return		;funcret
   585  007E2C                     __end_of_small_right_down:
   586                           	opt stack 0
   587                           tblptru	equ	0xFF8
   588                           status	equ	0xFD8
   589                           
   590 ;; *************** function _small_left_down *****************
   591 ;; Defined at:
   592 ;;		line 26 in file "sample.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  2   31[None  ] int 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   606 ;;      Params:         0       0       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    1
   613 ;; This function calls:
   614 ;;		_wait00
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text3
   621  007DC8                     __ptext3:
   622                           	opt stack 0
   623  007DC8                     _small_left_down:
   624                           	opt stack 29
   625                           
   626                           ;sample.c: 27: PORTC=0x03;
   627                           
   628                           ;incstack = 0
   629  007DC8  0E03               	movlw	3
   630  007DCA  6E82               	movwf	3970,c	;volatile
   631                           
   632                           ;sample.c: 28: wait00(0.3);
   633  007DCC  0E00               	movlw	0
   634  007DCE  6E02               	movwf	wait00@k+1,c
   635  007DD0  0E00               	movlw	0
   636  007DD2  6E01               	movwf	wait00@k,c
   637  007DD4  EC30  F03F         	call	_wait00	;wreg free
   638                           
   639                           ;sample.c: 29: PORTC=0x01;
   640  007DD8  0E01               	movlw	1
   641  007DDA  6E82               	movwf	3970,c	;volatile
   642                           
   643                           ;sample.c: 30: wait00(2);
   644  007DDC  0E00               	movlw	0
   645  007DDE  6E02               	movwf	wait00@k+1,c
   646  007DE0  0E02               	movlw	2
   647  007DE2  6E01               	movwf	wait00@k,c
   648  007DE4  EC30  F03F         	call	_wait00	;wreg free
   649                           
   650                           ;sample.c: 31: PORTC=0x00;
   651  007DE8  0E00               	movlw	0
   652  007DEA  6E82               	movwf	3970,c	;volatile
   653                           
   654                           ;sample.c: 32: wait00(20);
   655  007DEC  0E00               	movlw	0
   656  007DEE  6E02               	movwf	wait00@k+1,c
   657  007DF0  0E14               	movlw	20
   658  007DF2  6E01               	movwf	wait00@k,c
   659  007DF4  EC30  F03F         	call	_wait00	;wreg free
   660  007DF8  0012               	return		;funcret
   661  007DFA                     __end_of_small_left_down:
   662                           	opt stack 0
   663                           tblptru	equ	0xFF8
   664                           status	equ	0xFD8
   665                           
   666 ;; *************** function _right_down *****************
   667 ;; Defined at:
   668 ;;		line 35 in file "sample.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  2   34[None  ] int 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   682 ;;      Params:         0       0       0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    1
   689 ;; This function calls:
   690 ;;		_wait00
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text4
   697  007D96                     __ptext4:
   698                           	opt stack 0
   699  007D96                     _right_down:
   700                           	opt stack 29
   701                           
   702                           ;sample.c: 36: PORTC=0x03;
   703                           
   704                           ;incstack = 0
   705  007D96  0E03               	movlw	3
   706  007D98  6E82               	movwf	3970,c	;volatile
   707                           
   708                           ;sample.c: 37: wait00(0.3);
   709  007D9A  0E00               	movlw	0
   710  007D9C  6E02               	movwf	wait00@k+1,c
   711  007D9E  0E00               	movlw	0
   712  007DA0  6E01               	movwf	wait00@k,c
   713  007DA2  EC30  F03F         	call	_wait00	;wreg free
   714                           
   715                           ;sample.c: 38: PORTC=0x02;
   716  007DA6  0E02               	movlw	2
   717  007DA8  6E82               	movwf	3970,c	;volatile
   718                           
   719                           ;sample.c: 39: wait00(5);
   720  007DAA  0E00               	movlw	0
   721  007DAC  6E02               	movwf	wait00@k+1,c
   722  007DAE  0E05               	movlw	5
   723  007DB0  6E01               	movwf	wait00@k,c
   724  007DB2  EC30  F03F         	call	_wait00	;wreg free
   725                           
   726                           ;sample.c: 40: PORTC=0x00;
   727  007DB6  0E00               	movlw	0
   728  007DB8  6E82               	movwf	3970,c	;volatile
   729                           
   730                           ;sample.c: 41: wait00(20);
   731  007DBA  0E00               	movlw	0
   732  007DBC  6E02               	movwf	wait00@k+1,c
   733  007DBE  0E14               	movlw	20
   734  007DC0  6E01               	movwf	wait00@k,c
   735  007DC2  EC30  F03F         	call	_wait00	;wreg free
   736  007DC6  0012               	return		;funcret
   737  007DC8                     __end_of_right_down:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           status	equ	0xFD8
   741                           
   742 ;; *************** function _left_down *****************
   743 ;; Defined at:
   744 ;;		line 17 in file "sample.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  2   28[None  ] int 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         0       0       0       0       0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		_wait00
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text5
   773  007D64                     __ptext5:
   774                           	opt stack 0
   775  007D64                     _left_down:
   776                           	opt stack 29
   777                           
   778                           ;sample.c: 18: PORTC=0x03;
   779                           
   780                           ;incstack = 0
   781  007D64  0E03               	movlw	3
   782  007D66  6E82               	movwf	3970,c	;volatile
   783                           
   784                           ;sample.c: 19: wait00(0.3);
   785  007D68  0E00               	movlw	0
   786  007D6A  6E02               	movwf	wait00@k+1,c
   787  007D6C  0E00               	movlw	0
   788  007D6E  6E01               	movwf	wait00@k,c
   789  007D70  EC30  F03F         	call	_wait00	;wreg free
   790                           
   791                           ;sample.c: 20: PORTC=0x01;
   792  007D74  0E01               	movlw	1
   793  007D76  6E82               	movwf	3970,c	;volatile
   794                           
   795                           ;sample.c: 21: wait00(5);
   796  007D78  0E00               	movlw	0
   797  007D7A  6E02               	movwf	wait00@k+1,c
   798  007D7C  0E05               	movlw	5
   799  007D7E  6E01               	movwf	wait00@k,c
   800  007D80  EC30  F03F         	call	_wait00	;wreg free
   801                           
   802                           ;sample.c: 22: PORTC=0x00;
   803  007D84  0E00               	movlw	0
   804  007D86  6E82               	movwf	3970,c	;volatile
   805                           
   806                           ;sample.c: 23: wait00(20);
   807  007D88  0E00               	movlw	0
   808  007D8A  6E02               	movwf	wait00@k+1,c
   809  007D8C  0E14               	movlw	20
   810  007D8E  6E01               	movwf	wait00@k,c
   811  007D90  EC30  F03F         	call	_wait00	;wreg free
   812  007D94  0012               	return		;funcret
   813  007D96                     __end_of_left_down:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           status	equ	0xFD8
   817                           
   818 ;; *************** function _wait00 *****************
   819 ;; Defined at:
   820 ;;		line 6 in file "sample.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  k               2    0[COMRAM] short 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  i               2    5[COMRAM] short 
   825 ;;  j               2    3[COMRAM] short 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2    0[COMRAM] int 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         2       0       0       0       0       0       0       0       0
   836 ;;      Locals:         4       0       0       0       0       0       0       0       0
   837 ;;      Temps:          1       0       0       0       0       0       0       0       0
   838 ;;      Totals:         7       0       0       0       0       0       0       0       0
   839 ;;Total ram usage:        7 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_left_down
   845 ;;		_small_left_down
   846 ;;		_right_down
   847 ;;		_small_right_down
   848 ;;		_straight
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text6
   853  007E60                     __ptext6:
   854                           	opt stack 0
   855  007E60                     _wait00:
   856                           	opt stack 29
   857                           
   858                           ;sample.c: 9: short i;
   859                           ;sample.c: 10: short j;
   860                           ;sample.c: 11: for(j=0;j<k;j++){
   861                           
   862                           ;incstack = 0
   863  007E60  0E00               	movlw	0
   864  007E62  6E05               	movwf	wait00@j+1,c
   865  007E64  0E00               	movlw	0
   866  007E66  6E04               	movwf	wait00@j,c
   867  007E68  D011               	goto	l21
   868  007E6A                     
   869                           ;sample.c: 12: for(i=0;i<3000;i++){
   870  007E6A  0E00               	movlw	0
   871  007E6C  6E07               	movwf	wait00@i+1,c
   872  007E6E  0E00               	movlw	0
   873  007E70  6E06               	movwf	wait00@i,c
   874  007E72                     l830:
   875  007E72  BE07               	btfsc	wait00@i+1,7,c
   876  007E74  D006               	goto	l23
   877  007E76  0EB8               	movlw	184
   878  007E78  5C06               	subwf	wait00@i,w,c
   879  007E7A  0E0B               	movlw	11
   880  007E7C  5807               	subwfb	wait00@i+1,w,c
   881  007E7E  B0D8               	btfsc	status,0,c
   882  007E80  D003               	goto	u110
   883  007E82                     l23:
   884  007E82  4A06               	infsnz	wait00@i,f,c
   885  007E84  2A07               	incf	wait00@i+1,f,c
   886  007E86  D7F5               	goto	l830
   887  007E88                     u110:
   888  007E88  4A04               	infsnz	wait00@j,f,c
   889  007E8A  2A05               	incf	wait00@j+1,f,c
   890  007E8C                     l21:
   891  007E8C  5001               	movf	wait00@k,w,c
   892  007E8E  5C04               	subwf	wait00@j,w,c
   893  007E90  5005               	movf	wait00@j+1,w,c
   894  007E92  0A80               	xorlw	128
   895  007E94  6E03               	movwf	??_wait00& (0+255),c
   896  007E96  5002               	movf	wait00@k+1,w,c
   897  007E98  0A80               	xorlw	128
   898  007E9A  5803               	subwfb	??_wait00& (0+255),w,c
   899  007E9C  B0D8               	btfsc	status,0,c
   900  007E9E  0012               	return	
   901  007EA0  D7E4               	goto	l22
   902  007EA2                     __end_of_wait00:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           status	equ	0xFD8
   906                           
   907 ;; *************** function _led_sens *****************
   908 ;; Defined at:
   909 ;;		line 60 in file "sample.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2   43[None  ] int 
   916 ;; Registers used:
   917 ;;		None
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text7
   937  007E2C                     __ptext7:
   938                           	opt stack 0
   939  007E2C                     _led_sens:
   940                           	opt stack 30
   941                           
   942                           ;sample.c: 62: PORTAbits.RA0 = PORTBbits.RB0;
   943                           
   944                           ;incstack = 0
   945  007E2C  A081               	btfss	3969,0,c	;volatile
   946  007E2E  D002               	bra	u45
   947  007E30  8080               	bsf	3968,0,c	;volatile
   948  007E32  D001               	bra	u47
   949  007E34                     u45:
   950  007E34  9080               	bcf	3968,0,c	;volatile
   951  007E36                     u47:
   952                           
   953                           ;sample.c: 63: PORTAbits.RA1 = PORTBbits.RB1;
   954  007E36  A281               	btfss	3969,1,c	;volatile
   955  007E38  D002               	bra	u55
   956  007E3A  8280               	bsf	3968,1,c	;volatile
   957  007E3C  D001               	bra	u57
   958  007E3E                     u55:
   959  007E3E  9280               	bcf	3968,1,c	;volatile
   960  007E40                     u57:
   961                           
   962                           ;sample.c: 64: PORTAbits.RA2 = PORTBbits.RB2;
   963  007E40  A481               	btfss	3969,2,c	;volatile
   964  007E42  D002               	bra	u65
   965  007E44  8480               	bsf	3968,2,c	;volatile
   966  007E46  D001               	bra	u67
   967  007E48                     u65:
   968  007E48  9480               	bcf	3968,2,c	;volatile
   969  007E4A                     u67:
   970                           
   971                           ;sample.c: 65: PORTAbits.RA3 = PORTBbits.RB3;
   972  007E4A  A681               	btfss	3969,3,c	;volatile
   973  007E4C  D002               	bra	u75
   974  007E4E  8680               	bsf	3968,3,c	;volatile
   975  007E50  D001               	bra	u77
   976  007E52                     u75:
   977  007E52  9680               	bcf	3968,3,c	;volatile
   978  007E54                     u77:
   979                           
   980                           ;sample.c: 66: PORTAbits.RA4 = PORTBbits.RB4;
   981  007E54  A881               	btfss	3969,4,c	;volatile
   982  007E56  D002               	bra	u85
   983  007E58  8880               	bsf	3968,4,c	;volatile
   984  007E5A  D001               	bra	u87
   985  007E5C                     u85:
   986  007E5C  9880               	bcf	3968,4,c	;volatile
   987  007E5E                     u87:
   988  007E5E  0012               	return		;funcret
   989  007E60                     __end_of_led_sens:
   990                           	opt stack 0
   991  0000                     tblptru	equ	0xFF8
   992                           status	equ	0xFD8
   993                           tblptru	equ	0xFF8
   994                           status	equ	0xFD8
   995                           
   996                           	psect	rparam
   997  0000                     tblptru	equ	0xFF8
   998                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5780
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1156
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1156
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1156
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1156
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1156
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               7     5      2    1156
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
   _right_down
     _wait00
   _small_left_down
     _wait00
   _small_right_down
     _wait00
   _straight
     _wait00

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 23 21:40:12 2018

                       l21 7E8C                         l22 7E6A                         l23 7E82  
                       l50 7EBE                         l53 7F3C                         l61 7EEA  
                       l70 7F08                         l62 7EF0                         l54 7ECC  
                       l71 7F0E                         l63 7EF6                         l72 7F14  
                       l56 7ED2                         l57 7ED8                         l49 7EC2  
                       l82 7F20                         l58 7EDE                         l83 7F26  
                       l67 7EFC                         l59 7EE4                         l85 7F2C  
                       l69 7F02                         l86 7F30                         l87 7F36  
                       l79 7F1A                         u45 7E34                         u55 7E3E  
                       u47 7E36                         u65 7E48                         u57 7E40  
                       u75 7E52                         u67 7E4A                         u85 7E5C  
                       u77 7E54                         u87 7E5E                        l830 7E72  
                      u110 7E88                        u130 7EC6                       _main 7EA2  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 0032            _small_left_down 7DC8                      status 000FD8  
          __initialization 7D38               __end_of_main 8000                     ??_main 0008  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of_led_sens 7E60  
                   _wait00 7E60                     tblptru 000FF8    __end_of_small_left_down 7DFA  
         __end_of_straight 7D64                 __accesstop 0060    __end_of__initialization 7D38  
            ___rparam_used 000001             __pcstackCOMRAM 0001           _small_right_down 7DFA  
       __size_of_left_down 0032                    ?_wait00 0001           ?_small_left_down 0001  
                ?_led_sens 0001                    __Hparam 0000                    __Lparam 0000  
                ?_straight 0001                    __pcinit 7D38                    __ramtop 0800  
          __size_of_wait00 0042          __end_of_left_down 7D96                    __ptext0 7EA2  
                  __ptext1 7D42                    __ptext2 7DFA                    __ptext3 7DC8  
                  __ptext4 7D96                    __ptext5 7D64                    __ptext6 7E60  
                  __ptext7 7E2C       end_of_initialization 7D38                 ??_led_sens 0001  
            __Lmediumconst 0000                    wait00@i 0006                    wait00@j 0004  
                  wait00@k 0001                 _right_down 7D96                 ??_straight 0008  
                _PORTAbits 000F80                  _PORTBbits 000F81   __end_of_small_right_down 7E2C  
           __end_of_wait00 7EA2        start_initialization 7D38                ?_right_down 0001  
                 ??_wait00 0003          __size_of_led_sens 0034          __size_of_straight 0022  
                _left_down 7D64        __size_of_right_down 0032   __size_of_small_left_down 0032  
               ?_left_down 0001                   __Hrparam 0000                   __Lrparam 0000  
        ?_small_right_down 0001         ??_small_right_down 0008                   _led_sens 7E2C  
            __size_of_main 015E               ??_right_down 0008          ??_small_left_down 0008  
                 _straight 7D42                ??_left_down 0008         __end_of_right_down 7DC8  
