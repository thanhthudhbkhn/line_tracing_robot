

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Feb 24 22:00:01 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F2553 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _PORTC	set	3970
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  007A26                     __pcinit:
    68                           	opt stack 0
    69  007A26                     start_initialization:
    70                           	opt stack 0
    71  007A26                     __initialization:
    72                           	opt stack 0
    73  007A26                     end_of_initialization:
    74                           	opt stack 0
    75  007A26                     __end_of__initialization:
    76                           	opt stack 0
    77  007A26  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  007A28  6EF8               	movwf	tblptru,c
    79  007A2A  0100               	movlb	0
    80  007A2C  EF4E  F03F         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000001                     ?___xxtofl:
    87                           	opt stack 0
    88  000001                     ___xxtofl@val:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x0
    92  000001                     	ds	4
    93  000005                     ??___xxtofl:
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___xxtofl@sign:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x8
   101  000009                     	ds	1
   102  00000A                     ___xxtofl@exp:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x9
   106  00000A                     	ds	1
   107  00000B                     ___xxtofl@arg:
   108                           	opt stack 0
   109                           
   110                           ; 4 bytes @ 0xA
   111  00000B                     	ds	4
   112  00000F                     ___flge@ff1:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xE
   116  00000F                     	ds	4
   117  000013                     ___flge@ff2:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x12
   121  000013                     	ds	4
   122  000017                     ??___flge:
   123                           
   124                           ; 1 bytes @ 0x16
   125  000017                     	ds	4
   126  00001B                     wait00@k:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x1A
   130  00001B                     	ds	4
   131  00001F                     wait00@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1E
   135  00001F                     	ds	2
   136  000021                     wait00@i:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x20
   140  000021                     	ds	2
   141  000023                     tblptru	equ	0xFF8
   142                           
   143                           ; 1 bytes @ 0x22
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 69 in file "sample.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  2   48[None  ] int 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called:    3
   169 ;; This function calls:
   170 ;;		_led_sens
   171 ;;		_left_down
   172 ;;		_right_down
   173 ;;		_small_left_down
   174 ;;		_small_right_down
   175 ;;		_straight
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  007E9C                     __ptext0:
   183                           	opt stack 0
   184  007E9C                     _main:
   185                           	opt stack 28
   186                           
   187                           ;sample.c: 72: ADCON1 = 0x0F;
   188                           
   189                           ;incstack = 0
   190  007E9C  0E0F               	movlw	15
   191  007E9E  6EC1               	movwf	4033,c	;volatile
   192                           
   193                           ;sample.c: 75: TRISA = 0x20;
   194  007EA0  0E20               	movlw	32
   195  007EA2  6E92               	movwf	3986,c	;volatile
   196                           
   197                           ;sample.c: 76: TRISB = 0xFF;
   198  007EA4  6893               	setf	3987,c	;volatile
   199                           
   200                           ;sample.c: 77: TRISC = 0x00;
   201  007EA6  0E00               	movlw	0
   202  007EA8  6E94               	movwf	3988,c	;volatile
   203                           
   204                           ;sample.c: 80: PORTA = 0x00;
   205  007EAA  0E00               	movlw	0
   206  007EAC  6E80               	movwf	3968,c	;volatile
   207                           
   208                           ;sample.c: 81: PORTB = 0x00;
   209  007EAE  0E00               	movlw	0
   210  007EB0  6E81               	movwf	3969,c	;volatile
   211                           
   212                           ;sample.c: 82: PORTC = 0x00;
   213  007EB2  0E00               	movlw	0
   214  007EB4  6E82               	movwf	3970,c	;volatile
   215                           
   216                           ;sample.c: 85: while(PORTAbits.RA5==1){
   217  007EB6  D002               	goto	l49
   218  007EB8                     
   219                           ;sample.c: 86: led_sens();
   220  007EB8  EC31  F03D         	call	_led_sens	;wreg free
   221  007EBC                     l49:
   222  007EBC  BA80               	btfsc	3968,5,c	;volatile
   223  007EBE  D7FC               	goto	l50
   224  007EC0                     u430:
   225                           
   226                           ;sample.c: 92: led_sens();
   227                           
   228                           ;sample.c: 87: }
   229                           ;sample.c: 91: while(1){
   230  007EC0  EC31  F03D         	call	_led_sens	;wreg free
   231                           
   232                           ;sample.c: 93: switch (PORTB) {
   233  007EC4  D03B               	goto	l53
   234  007EC6                     
   235                           ;sample.c: 95: straight();
   236  007EC6  EC18  F03D         	call	_straight	;wreg free
   237                           
   238                           ;sample.c: 96: break;
   239  007ECA  D7FA               	goto	u430
   240  007ECC                     
   241                           ;sample.c: 98: right_down();
   242  007ECC  EC70  F03D         	call	_right_down	;wreg free
   243                           
   244                           ;sample.c: 99: break;
   245  007ED0  D7F7               	goto	u430
   246  007ED2                     
   247                           ;sample.c: 101: small_right_down();
   248  007ED2  ECBA  F03D         	call	_small_right_down	;wreg free
   249                           
   250                           ;sample.c: 102: break;
   251  007ED6  D7F4               	goto	u430
   252  007ED8                     
   253                           ;sample.c: 104: small_right_down();
   254  007ED8  ECBA  F03D         	call	_small_right_down	;wreg free
   255                           
   256                           ;sample.c: 105: break;
   257  007EDC  D7F1               	goto	u430
   258  007EDE                     
   259                           ;sample.c: 107: straight();
   260  007EDE  EC18  F03D         	call	_straight	;wreg free
   261                           
   262                           ;sample.c: 109: case 0b00101: break;
   263                           
   264                           ;sample.c: 108: break;
   265  007EE2  D7EE               	goto	u430
   266  007EE4                     
   267                           ;sample.c: 111: small_right_down();
   268  007EE4  ECBA  F03D         	call	_small_right_down	;wreg free
   269                           
   270                           ;sample.c: 112: break;
   271  007EE8  D7EB               	goto	u430
   272  007EEA                     
   273                           ;sample.c: 114: small_left_down();
   274  007EEA  EC95  F03D         	call	_small_left_down	;wreg free
   275                           
   276                           ;sample.c: 115: break;
   277  007EEE  D7E8               	goto	u430
   278  007EF0                     
   279                           ;sample.c: 117: small_left_down();
   280  007EF0  EC95  F03D         	call	_small_left_down	;wreg free
   281                           
   282                           ;sample.c: 123: case 0b01101: break;
   283                           
   284                           ;sample.c: 122: case 0b01100: break;
   285                           
   286                           ;sample.c: 121: case 0b01011: break;
   287                           
   288                           ;sample.c: 120: case 0b01010: break;
   289                           
   290                           ;sample.c: 119: case 0b01001: break;
   291                           
   292                           ;sample.c: 118: break;
   293  007EF4  D7E5               	goto	u430
   294  007EF6                     
   295                           ;sample.c: 125: straight();
   296  007EF6  EC18  F03D         	call	_straight	;wreg free
   297                           
   298                           ;sample.c: 126: break;
   299  007EFA  D7E2               	goto	u430
   300  007EFC                     
   301                           ;sample.c: 128: left_down();
   302  007EFC  EC4B  F03D         	call	_left_down	;wreg free
   303                           
   304                           ;sample.c: 129: break;
   305  007F00  D7DF               	goto	u430
   306  007F02                     
   307                           ;sample.c: 131: left_down();
   308  007F02  EC4B  F03D         	call	_left_down	;wreg free
   309                           
   310                           ;sample.c: 132: break;
   311  007F06  D7DC               	goto	u430
   312  007F08                     
   313                           ;sample.c: 134: straight();
   314  007F08  EC18  F03D         	call	_straight	;wreg free
   315                           
   316                           ;sample.c: 140: case 0b10110: break;
   317                           
   318                           ;sample.c: 139: case 0b10101: break;
   319                           
   320                           ;sample.c: 138: case 0b10100: break;
   321                           
   322                           ;sample.c: 137: case 0b10011: break;
   323                           
   324                           ;sample.c: 136: case 0b10010: break;
   325                           
   326                           ;sample.c: 135: break;
   327  007F0C  D7D9               	goto	u430
   328  007F0E                     
   329                           ;sample.c: 142: left_down();
   330  007F0E  EC4B  F03D         	call	_left_down	;wreg free
   331                           
   332                           ;sample.c: 143: break;
   333  007F12  D7D6               	goto	u430
   334  007F14                     
   335                           ;sample.c: 145: small_left_down();
   336  007F14  EC95  F03D         	call	_small_left_down	;wreg free
   337                           
   338                           ;sample.c: 148: case 0b11010: break;
   339                           
   340                           ;sample.c: 147: case 0b11001: break;
   341                           
   342                           ;sample.c: 146: break;
   343  007F18  D7D3               	goto	u430
   344  007F1A                     
   345                           ;sample.c: 150: straight();
   346  007F1A  EC18  F03D         	call	_straight	;wreg free
   347                           
   348                           ;sample.c: 151: break;
   349  007F1E  D7D0               	goto	u430
   350  007F20                     
   351                           ;sample.c: 153: small_right_down();
   352  007F20  ECBA  F03D         	call	_small_right_down	;wreg free
   353                           
   354                           ;sample.c: 154: break;
   355  007F24  D7CD               	goto	u430
   356  007F26                     
   357                           ;sample.c: 156: small_right_down();
   358  007F26  ECBA  F03D         	call	_small_right_down	;wreg free
   359                           
   360                           ;sample.c: 157: break;
   361  007F2A  D7CA               	goto	u430
   362  007F2C                     
   363                           ;sample.c: 159: right_down();
   364  007F2C  EC70  F03D         	call	_right_down	;wreg free
   365  007F30                     l86:
   366                           
   367                           ;sample.c: 161: straight();
   368  007F30  EC18  F03D         	call	_straight	;wreg free
   369                           
   370                           ;sample.c: 162: break;
   371  007F34  D7C5               	goto	u430
   372  007F36                     
   373                           ;sample.c: 164: straight();
   374  007F36  EC18  F03D         	call	_straight	;wreg free
   375                           
   376                           ;sample.c: 166: }
   377                           
   378                           ;sample.c: 165: break;
   379  007F3A  D7C2               	goto	u430
   380  007F3C                     l53:
   381  007F3C  5081               	movf	3969,w,c	;volatile
   382                           
   383                           ; Switch size 1, requested type "space"
   384                           ; Number of cases is 32, Range of values is 0 to 31
   385                           ; switch strategies available:
   386                           ; Name         Instructions Cycles
   387                           ; simple_byte           97    49 (average)
   388                           ;	Chosen strategy is simple_byte
   389  007F3E  0A00               	xorlw	0	; case 0
   390  007F40  B4D8               	btfsc	status,2,c
   391  007F42  D7C1               	goto	l54
   392  007F44  0A01               	xorlw	1	; case 1
   393  007F46  B4D8               	btfsc	status,2,c
   394  007F48  D7C1               	goto	l56
   395  007F4A  0A03               	xorlw	3	; case 2
   396  007F4C  B4D8               	btfsc	status,2,c
   397  007F4E  D7C1               	goto	l57
   398  007F50  0A01               	xorlw	1	; case 3
   399  007F52  B4D8               	btfsc	status,2,c
   400  007F54  D7C1               	goto	l58
   401  007F56  0A07               	xorlw	7	; case 4
   402  007F58  B4D8               	btfsc	status,2,c
   403  007F5A  D7C1               	goto	l59
   404  007F5C  0A01               	xorlw	1	; case 5
   405  007F5E  B4D8               	btfsc	status,2,c
   406  007F60  D7AF               	goto	u430
   407  007F62  0A03               	xorlw	3	; case 6
   408  007F64  B4D8               	btfsc	status,2,c
   409  007F66  D7BE               	goto	l61
   410  007F68  0A01               	xorlw	1	; case 7
   411  007F6A  B4D8               	btfsc	status,2,c
   412  007F6C  D7BE               	goto	l62
   413  007F6E  0A0F               	xorlw	15	; case 8
   414  007F70  B4D8               	btfsc	status,2,c
   415  007F72  D7BE               	goto	l63
   416  007F74  0A01               	xorlw	1	; case 9
   417  007F76  B4D8               	btfsc	status,2,c
   418  007F78  D7A3               	goto	u430
   419  007F7A  0A03               	xorlw	3	; case 10
   420  007F7C  B4D8               	btfsc	status,2,c
   421  007F7E  D7A0               	goto	u430
   422  007F80  0A01               	xorlw	1	; case 11
   423  007F82  B4D8               	btfsc	status,2,c
   424  007F84  D79D               	goto	u430
   425  007F86  0A07               	xorlw	7	; case 12
   426  007F88  B4D8               	btfsc	status,2,c
   427  007F8A  D79A               	goto	u430
   428  007F8C  0A01               	xorlw	1	; case 13
   429  007F8E  B4D8               	btfsc	status,2,c
   430  007F90  D797               	goto	u430
   431  007F92  0A03               	xorlw	3	; case 14
   432  007F94  B4D8               	btfsc	status,2,c
   433  007F96  D7AF               	goto	l69
   434  007F98  0A01               	xorlw	1	; case 15
   435  007F9A  B4D8               	btfsc	status,2,c
   436  007F9C  D7AF               	goto	l70
   437  007F9E  0A1F               	xorlw	31	; case 16
   438  007FA0  B4D8               	btfsc	status,2,c
   439  007FA2  D7AF               	goto	l71
   440  007FA4  0A01               	xorlw	1	; case 17
   441  007FA6  B4D8               	btfsc	status,2,c
   442  007FA8  D7AF               	goto	l72
   443  007FAA  0A03               	xorlw	3	; case 18
   444  007FAC  B4D8               	btfsc	status,2,c
   445  007FAE  D788               	goto	u430
   446  007FB0  0A01               	xorlw	1	; case 19
   447  007FB2  B4D8               	btfsc	status,2,c
   448  007FB4  D785               	goto	u430
   449  007FB6  0A07               	xorlw	7	; case 20
   450  007FB8  B4D8               	btfsc	status,2,c
   451  007FBA  D782               	goto	u430
   452  007FBC  0A01               	xorlw	1	; case 21
   453  007FBE  B4D8               	btfsc	status,2,c
   454  007FC0  D77F               	goto	u430
   455  007FC2  0A03               	xorlw	3	; case 22
   456  007FC4  B4D8               	btfsc	status,2,c
   457  007FC6  D77C               	goto	u430
   458  007FC8  0A01               	xorlw	1	; case 23
   459  007FCA  B4D8               	btfsc	status,2,c
   460  007FCC  D7A0               	goto	l78
   461  007FCE  0A0F               	xorlw	15	; case 24
   462  007FD0  B4D8               	btfsc	status,2,c
   463  007FD2  D7A0               	goto	l79
   464  007FD4  0A01               	xorlw	1	; case 25
   465  007FD6  B4D8               	btfsc	status,2,c
   466  007FD8  D773               	goto	u430
   467  007FDA  0A03               	xorlw	3	; case 26
   468  007FDC  B4D8               	btfsc	status,2,c
   469  007FDE  D770               	goto	u430
   470  007FE0  0A01               	xorlw	1	; case 27
   471  007FE2  B4D8               	btfsc	status,2,c
   472  007FE4  D79A               	goto	l82
   473  007FE6  0A07               	xorlw	7	; case 28
   474  007FE8  B4D8               	btfsc	status,2,c
   475  007FEA  D79A               	goto	l83
   476  007FEC  0A01               	xorlw	1	; case 29
   477  007FEE  B4D8               	btfsc	status,2,c
   478  007FF0  D79A               	goto	l84
   479  007FF2  0A03               	xorlw	3	; case 30
   480  007FF4  B4D8               	btfsc	status,2,c
   481  007FF6  D79A               	goto	l85
   482  007FF8  0A01               	xorlw	1	; case 31
   483  007FFA  B4D8               	btfsc	status,2,c
   484  007FFC  D799               	goto	l86
   485  007FFE  D79B               	goto	l87
   486  008000                     __end_of_main:
   487                           	opt stack 0
   488                           tblptru	equ	0xFF8
   489                           status	equ	0xFD8
   490                           
   491 ;; *************** function _straight *****************
   492 ;; Defined at:
   493 ;;		line 53 in file "sample.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  2   40[None  ] int 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   507 ;;      Params:         0       0       0       0       0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; Hardware stack levels required when called:    2
   514 ;; This function calls:
   515 ;;		_wait00
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  007A30                     __ptext1:
   523                           	opt stack 0
   524  007A30                     _straight:
   525                           	opt stack 28
   526                           
   527                           ;sample.c: 54: PORTC=0x03;
   528                           
   529                           ;incstack = 0
   530  007A30  0E03               	movlw	3
   531  007A32  6E82               	movwf	3970,c	;volatile
   532                           
   533                           ;sample.c: 55: wait00(8);
   534  007A34  0E00               	movlw	0
   535  007A36  6E1B               	movwf	wait00@k,c
   536  007A38  0E00               	movlw	0
   537  007A3A  6E1C               	movwf	wait00@k+1,c
   538  007A3C  0E00               	movlw	0
   539  007A3E  6E1D               	movwf	wait00@k+2,c
   540  007A40  0E41               	movlw	65
   541  007A42  6E1E               	movwf	wait00@k+3,c
   542  007A44  ECDF  F03D         	call	_wait00	;wreg free
   543                           
   544                           ;sample.c: 56: PORTC=0x00;
   545  007A48  0E00               	movlw	0
   546  007A4A  6E82               	movwf	3970,c	;volatile
   547                           
   548                           ;sample.c: 57: wait00(50);
   549  007A4C  0E00               	movlw	0
   550  007A4E  6E1B               	movwf	wait00@k,c
   551  007A50  0E00               	movlw	0
   552  007A52  6E1C               	movwf	wait00@k+1,c
   553  007A54  0E48               	movlw	72
   554  007A56  6E1D               	movwf	wait00@k+2,c
   555  007A58  0E42               	movlw	66
   556  007A5A  6E1E               	movwf	wait00@k+3,c
   557  007A5C  ECDF  F03D         	call	_wait00	;wreg free
   558  007A60  0012               	return		;funcret
   559  007A62                     __end_of_straight:
   560                           	opt stack 0
   561                           tblptru	equ	0xFF8
   562                           status	equ	0xFD8
   563                           
   564 ;; *************** function _small_right_down *****************
   565 ;; Defined at:
   566 ;;		line 26 in file "sample.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  2   31[None  ] int 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         0       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    2
   587 ;; This function calls:
   588 ;;		_wait00
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text2
   595  007B74                     __ptext2:
   596                           	opt stack 0
   597  007B74                     _small_right_down:
   598                           	opt stack 28
   599                           
   600                           ;sample.c: 27: PORTC=0x03;
   601                           
   602                           ;incstack = 0
   603  007B74  0E03               	movlw	3
   604  007B76  6E82               	movwf	3970,c	;volatile
   605                           
   606                           ;sample.c: 28: wait00(0.3);
   607  007B78  0E9A               	movlw	154
   608  007B7A  6E1B               	movwf	wait00@k,c
   609  007B7C  0E99               	movlw	153
   610  007B7E  6E1C               	movwf	wait00@k+1,c
   611  007B80  0E99               	movlw	153
   612  007B82  6E1D               	movwf	wait00@k+2,c
   613  007B84  0E3E               	movlw	62
   614  007B86  6E1E               	movwf	wait00@k+3,c
   615  007B88  ECDF  F03D         	call	_wait00	;wreg free
   616                           
   617                           ;sample.c: 29: PORTC=0x01;
   618  007B8C  0E01               	movlw	1
   619  007B8E  6E82               	movwf	3970,c	;volatile
   620                           
   621                           ;sample.c: 30: wait00(2);
   622  007B90  0E00               	movlw	0
   623  007B92  6E1B               	movwf	wait00@k,c
   624  007B94  0E00               	movlw	0
   625  007B96  6E1C               	movwf	wait00@k+1,c
   626  007B98  0E00               	movlw	0
   627  007B9A  6E1D               	movwf	wait00@k+2,c
   628  007B9C  0E40               	movlw	64
   629  007B9E  6E1E               	movwf	wait00@k+3,c
   630  007BA0  ECDF  F03D         	call	_wait00	;wreg free
   631                           
   632                           ;sample.c: 31: PORTC=0x00;
   633  007BA4  0E00               	movlw	0
   634  007BA6  6E82               	movwf	3970,c	;volatile
   635                           
   636                           ;sample.c: 32: wait00(50);
   637  007BA8  0E00               	movlw	0
   638  007BAA  6E1B               	movwf	wait00@k,c
   639  007BAC  0E00               	movlw	0
   640  007BAE  6E1C               	movwf	wait00@k+1,c
   641  007BB0  0E48               	movlw	72
   642  007BB2  6E1D               	movwf	wait00@k+2,c
   643  007BB4  0E42               	movlw	66
   644  007BB6  6E1E               	movwf	wait00@k+3,c
   645  007BB8  ECDF  F03D         	call	_wait00	;wreg free
   646  007BBC  0012               	return		;funcret
   647  007BBE                     __end_of_small_right_down:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           status	equ	0xFD8
   651                           
   652 ;; *************** function _small_left_down *****************
   653 ;; Defined at:
   654 ;;		line 44 in file "sample.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  2   37[None  ] int 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   668 ;;      Params:         0       0       0       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_wait00
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text3
   683  007B2A                     __ptext3:
   684                           	opt stack 0
   685  007B2A                     _small_left_down:
   686                           	opt stack 28
   687                           
   688                           ;sample.c: 45: PORTC=0x03;
   689                           
   690                           ;incstack = 0
   691  007B2A  0E03               	movlw	3
   692  007B2C  6E82               	movwf	3970,c	;volatile
   693                           
   694                           ;sample.c: 46: wait00(0.3);
   695  007B2E  0E9A               	movlw	154
   696  007B30  6E1B               	movwf	wait00@k,c
   697  007B32  0E99               	movlw	153
   698  007B34  6E1C               	movwf	wait00@k+1,c
   699  007B36  0E99               	movlw	153
   700  007B38  6E1D               	movwf	wait00@k+2,c
   701  007B3A  0E3E               	movlw	62
   702  007B3C  6E1E               	movwf	wait00@k+3,c
   703  007B3E  ECDF  F03D         	call	_wait00	;wreg free
   704                           
   705                           ;sample.c: 47: PORTC=0x02;
   706  007B42  0E02               	movlw	2
   707  007B44  6E82               	movwf	3970,c	;volatile
   708                           
   709                           ;sample.c: 48: wait00(2);
   710  007B46  0E00               	movlw	0
   711  007B48  6E1B               	movwf	wait00@k,c
   712  007B4A  0E00               	movlw	0
   713  007B4C  6E1C               	movwf	wait00@k+1,c
   714  007B4E  0E00               	movlw	0
   715  007B50  6E1D               	movwf	wait00@k+2,c
   716  007B52  0E40               	movlw	64
   717  007B54  6E1E               	movwf	wait00@k+3,c
   718  007B56  ECDF  F03D         	call	_wait00	;wreg free
   719                           
   720                           ;sample.c: 49: PORTC=0x00;
   721  007B5A  0E00               	movlw	0
   722  007B5C  6E82               	movwf	3970,c	;volatile
   723                           
   724                           ;sample.c: 50: wait00(50);
   725  007B5E  0E00               	movlw	0
   726  007B60  6E1B               	movwf	wait00@k,c
   727  007B62  0E00               	movlw	0
   728  007B64  6E1C               	movwf	wait00@k+1,c
   729  007B66  0E48               	movlw	72
   730  007B68  6E1D               	movwf	wait00@k+2,c
   731  007B6A  0E42               	movlw	66
   732  007B6C  6E1E               	movwf	wait00@k+3,c
   733  007B6E  ECDF  F03D         	call	_wait00	;wreg free
   734  007B72  0012               	return		;funcret
   735  007B74                     __end_of_small_left_down:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _right_down *****************
   741 ;; Defined at:
   742 ;;		line 17 in file "sample.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2   28[None  ] int 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   756 ;;      Params:         0       0       0       0       0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    2
   763 ;; This function calls:
   764 ;;		_wait00
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text4
   771  007AE0                     __ptext4:
   772                           	opt stack 0
   773  007AE0                     _right_down:
   774                           	opt stack 28
   775                           
   776                           ;sample.c: 18: PORTC=0x03;
   777                           
   778                           ;incstack = 0
   779  007AE0  0E03               	movlw	3
   780  007AE2  6E82               	movwf	3970,c	;volatile
   781                           
   782                           ;sample.c: 19: wait00(0.3);
   783  007AE4  0E9A               	movlw	154
   784  007AE6  6E1B               	movwf	wait00@k,c
   785  007AE8  0E99               	movlw	153
   786  007AEA  6E1C               	movwf	wait00@k+1,c
   787  007AEC  0E99               	movlw	153
   788  007AEE  6E1D               	movwf	wait00@k+2,c
   789  007AF0  0E3E               	movlw	62
   790  007AF2  6E1E               	movwf	wait00@k+3,c
   791  007AF4  ECDF  F03D         	call	_wait00	;wreg free
   792                           
   793                           ;sample.c: 20: PORTC=0x01;
   794  007AF8  0E01               	movlw	1
   795  007AFA  6E82               	movwf	3970,c	;volatile
   796                           
   797                           ;sample.c: 21: wait00(10);
   798  007AFC  0E00               	movlw	0
   799  007AFE  6E1B               	movwf	wait00@k,c
   800  007B00  0E00               	movlw	0
   801  007B02  6E1C               	movwf	wait00@k+1,c
   802  007B04  0E20               	movlw	32
   803  007B06  6E1D               	movwf	wait00@k+2,c
   804  007B08  0E41               	movlw	65
   805  007B0A  6E1E               	movwf	wait00@k+3,c
   806  007B0C  ECDF  F03D         	call	_wait00	;wreg free
   807                           
   808                           ;sample.c: 22: PORTC=0x00;
   809  007B10  0E00               	movlw	0
   810  007B12  6E82               	movwf	3970,c	;volatile
   811                           
   812                           ;sample.c: 23: wait00(50);
   813  007B14  0E00               	movlw	0
   814  007B16  6E1B               	movwf	wait00@k,c
   815  007B18  0E00               	movlw	0
   816  007B1A  6E1C               	movwf	wait00@k+1,c
   817  007B1C  0E48               	movlw	72
   818  007B1E  6E1D               	movwf	wait00@k+2,c
   819  007B20  0E42               	movlw	66
   820  007B22  6E1E               	movwf	wait00@k+3,c
   821  007B24  ECDF  F03D         	call	_wait00	;wreg free
   822  007B28  0012               	return		;funcret
   823  007B2A                     __end_of_right_down:
   824                           	opt stack 0
   825                           tblptru	equ	0xFF8
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _left_down *****************
   829 ;; Defined at:
   830 ;;		line 35 in file "sample.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  2   34[None  ] int 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   844 ;;      Params:         0       0       0       0       0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    2
   851 ;; This function calls:
   852 ;;		_wait00
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text5
   859  007A96                     __ptext5:
   860                           	opt stack 0
   861  007A96                     _left_down:
   862                           	opt stack 28
   863                           
   864                           ;sample.c: 36: PORTC=0x03;
   865                           
   866                           ;incstack = 0
   867  007A96  0E03               	movlw	3
   868  007A98  6E82               	movwf	3970,c	;volatile
   869                           
   870                           ;sample.c: 37: wait00(0.3);
   871  007A9A  0E9A               	movlw	154
   872  007A9C  6E1B               	movwf	wait00@k,c
   873  007A9E  0E99               	movlw	153
   874  007AA0  6E1C               	movwf	wait00@k+1,c
   875  007AA2  0E99               	movlw	153
   876  007AA4  6E1D               	movwf	wait00@k+2,c
   877  007AA6  0E3E               	movlw	62
   878  007AA8  6E1E               	movwf	wait00@k+3,c
   879  007AAA  ECDF  F03D         	call	_wait00	;wreg free
   880                           
   881                           ;sample.c: 38: PORTC=0x02;
   882  007AAE  0E02               	movlw	2
   883  007AB0  6E82               	movwf	3970,c	;volatile
   884                           
   885                           ;sample.c: 39: wait00(10);
   886  007AB2  0E00               	movlw	0
   887  007AB4  6E1B               	movwf	wait00@k,c
   888  007AB6  0E00               	movlw	0
   889  007AB8  6E1C               	movwf	wait00@k+1,c
   890  007ABA  0E20               	movlw	32
   891  007ABC  6E1D               	movwf	wait00@k+2,c
   892  007ABE  0E41               	movlw	65
   893  007AC0  6E1E               	movwf	wait00@k+3,c
   894  007AC2  ECDF  F03D         	call	_wait00	;wreg free
   895                           
   896                           ;sample.c: 40: PORTC=0x00;
   897  007AC6  0E00               	movlw	0
   898  007AC8  6E82               	movwf	3970,c	;volatile
   899                           
   900                           ;sample.c: 41: wait00(50);
   901  007ACA  0E00               	movlw	0
   902  007ACC  6E1B               	movwf	wait00@k,c
   903  007ACE  0E00               	movlw	0
   904  007AD0  6E1C               	movwf	wait00@k+1,c
   905  007AD2  0E48               	movlw	72
   906  007AD4  6E1D               	movwf	wait00@k+2,c
   907  007AD6  0E42               	movlw	66
   908  007AD8  6E1E               	movwf	wait00@k+3,c
   909  007ADA  ECDF  F03D         	call	_wait00	;wreg free
   910  007ADE  0012               	return		;funcret
   911  007AE0                     __end_of_left_down:
   912                           	opt stack 0
   913                           tblptru	equ	0xFF8
   914                           status	equ	0xFD8
   915                           
   916 ;; *************** function _wait00 *****************
   917 ;; Defined at:
   918 ;;		line 6 in file "sample.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  k               4   26[COMRAM] float 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  i               2   32[COMRAM] short 
   923 ;;  j               2   30[COMRAM] short 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   26[COMRAM] int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         4       0       0       0       0       0       0       0       0
   934 ;;      Locals:         4       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         8       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        8 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		___flge
   942 ;;		___xxtofl
   943 ;; This function is called by:
   944 ;;		_right_down
   945 ;;		_small_right_down
   946 ;;		_left_down
   947 ;;		_small_left_down
   948 ;;		_straight
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text6
   953  007BBE                     __ptext6:
   954                           	opt stack 0
   955  007BBE                     _wait00:
   956                           	opt stack 28
   957                           
   958                           ;sample.c: 9: short i;
   959                           ;sample.c: 10: short j;
   960                           ;sample.c: 11: for(j=0;j<k;j++){
   961                           
   962                           ;incstack = 0
   963  007BBE  0E00               	movlw	0
   964  007BC0  6E20               	movwf	wait00@j+1,c
   965  007BC2  0E00               	movlw	0
   966  007BC4  6E1F               	movwf	wait00@j,c
   967  007BC6  D011               	goto	l21
   968  007BC8                     
   969                           ;sample.c: 12: for(i=0;i<3000;i++){
   970  007BC8  0E00               	movlw	0
   971  007BCA  6E22               	movwf	wait00@i+1,c
   972  007BCC  0E00               	movlw	0
   973  007BCE  6E21               	movwf	wait00@i,c
   974  007BD0                     l976:
   975  007BD0  BE22               	btfsc	wait00@i+1,7,c
   976  007BD2  D006               	goto	l23
   977  007BD4  0EB8               	movlw	184
   978  007BD6  5C21               	subwf	wait00@i,w,c
   979  007BD8  0E0B               	movlw	11
   980  007BDA  5822               	subwfb	wait00@i+1,w,c
   981  007BDC  B0D8               	btfsc	status,0,c
   982  007BDE  D003               	goto	u410
   983  007BE0                     l23:
   984  007BE0  4A21               	infsnz	wait00@i,f,c
   985  007BE2  2A22               	incf	wait00@i+1,f,c
   986  007BE4  D7F5               	goto	l976
   987  007BE6                     u410:
   988  007BE6  4A1F               	infsnz	wait00@j,f,c
   989  007BE8  2A20               	incf	wait00@j+1,f,c
   990  007BEA                     l21:
   991  007BEA  C01F  F001         	movff	wait00@j,___xxtofl@val
   992  007BEE  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
   993  007BF2  0E00               	movlw	0
   994  007BF4  BE02               	btfsc	___xxtofl@val+1,7,c
   995  007BF6  0EFF               	movlw	-1
   996  007BF8  6E03               	movwf	___xxtofl@val+2,c
   997  007BFA  6E04               	movwf	___xxtofl@val+3,c
   998  007BFC  0E01               	movlw	1
   999  007BFE  ECA6  F03E         	call	___xxtofl
  1000  007C02  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1001  007C06  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1002  007C0A  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1003  007C0E  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1004  007C12  C01B  F013         	movff	wait00@k,___flge@ff2
  1005  007C16  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1006  007C1A  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1007  007C1E  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1008  007C22  EC16  F03E         	call	___flge	;wreg free
  1009  007C26  B0D8               	btfsc	status,0,c
  1010  007C28  0012               	return	
  1011  007C2A  D7CE               	goto	l22
  1012  007C2C                     __end_of_wait00:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function ___xxtofl *****************
  1018 ;; Defined at:
  1019 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  sign            1    wreg     unsigned char 
  1022 ;;  val             4    0[COMRAM] long 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  sign            1    8[COMRAM] unsigned char 
  1025 ;;  arg             4   10[COMRAM] unsigned long 
  1026 ;;  exp             1    9[COMRAM] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  4    0[COMRAM] unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         4       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1039 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:       14 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_wait00
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text7
  1050  007D4C                     __ptext7:
  1051                           	opt stack 0
  1052  007D4C                     ___xxtofl:
  1053                           	opt stack 28
  1054                           
  1055                           ;incstack = 0
  1056                           ;___xxtofl@sign stored from wreg
  1057  007D4C  6E09               	movwf	___xxtofl@sign,c
  1058  007D4E  5009               	movf	___xxtofl@sign,w,c
  1059  007D50  A4D8               	btfss	status,2,c
  1060  007D52  AE04               	btfss	___xxtofl@val+3,7,c
  1061  007D54  D01A               	goto	l638
  1062  007D56  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1063  007D5A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1064  007D5E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1065  007D62  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1066  007D66  1E05               	comf	??___xxtofl,f,c
  1067  007D68  1E06               	comf	??___xxtofl+1,f,c
  1068  007D6A  1E07               	comf	??___xxtofl+2,f,c
  1069  007D6C  1E08               	comf	??___xxtofl+3,f,c
  1070  007D6E  2A05               	incf	??___xxtofl,f,c
  1071  007D70  0E00               	movlw	0
  1072  007D72  2206               	addwfc	??___xxtofl+1,f,c
  1073  007D74  2207               	addwfc	??___xxtofl+2,f,c
  1074  007D76  2208               	addwfc	??___xxtofl+3,f,c
  1075  007D78  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1076  007D7C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1077  007D80  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1078  007D84  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1079  007D88  D008               	goto	l639
  1080  007D8A                     l638:
  1081  007D8A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1082  007D8E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1083  007D92  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1084  007D96  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1085  007D9A                     l639:
  1086  007D9A  5001               	movf	___xxtofl@val,w,c
  1087  007D9C  1002               	iorwf	___xxtofl@val+1,w,c
  1088  007D9E  1003               	iorwf	___xxtofl@val+2,w,c
  1089  007DA0  1004               	iorwf	___xxtofl@val+3,w,c
  1090  007DA2  A4D8               	btfss	status,2,c
  1091  007DA4  D009               	goto	l640
  1092  007DA6  0E00               	movlw	0
  1093  007DA8  6E01               	movwf	?___xxtofl,c
  1094  007DAA  0E00               	movlw	0
  1095  007DAC  6E02               	movwf	?___xxtofl+1,c
  1096  007DAE  0E00               	movlw	0
  1097  007DB0  6E03               	movwf	?___xxtofl+2,c
  1098  007DB2  0E00               	movlw	0
  1099  007DB4  6E04               	movwf	?___xxtofl+3,c
  1100  007DB6  0012               	return	
  1101  007DB8                     l640:
  1102  007DB8  0E96               	movlw	150
  1103  007DBA  6E0A               	movwf	___xxtofl@exp,c
  1104  007DBC  D006               	goto	l642
  1105  007DBE  2A0A               	incf	___xxtofl@exp,f,c
  1106  007DC0  90D8               	bcf	status,0,c
  1107  007DC2  320E               	rrcf	___xxtofl@arg+3,f,c
  1108  007DC4  320D               	rrcf	___xxtofl@arg+2,f,c
  1109  007DC6  320C               	rrcf	___xxtofl@arg+1,f,c
  1110  007DC8  320B               	rrcf	___xxtofl@arg,f,c
  1111  007DCA                     l642:
  1112  007DCA  0E00               	movlw	0
  1113  007DCC  140B               	andwf	___xxtofl@arg,w,c
  1114  007DCE  6E05               	movwf	??___xxtofl& (0+255),c
  1115  007DD0  0E00               	movlw	0
  1116  007DD2  140C               	andwf	___xxtofl@arg+1,w,c
  1117  007DD4  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1118  007DD6  0E00               	movlw	0
  1119  007DD8  140D               	andwf	___xxtofl@arg+2,w,c
  1120  007DDA  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1121  007DDC  0EFE               	movlw	254
  1122  007DDE  140E               	andwf	___xxtofl@arg+3,w,c
  1123  007DE0  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1124  007DE2  5005               	movf	??___xxtofl,w,c
  1125  007DE4  1006               	iorwf	??___xxtofl+1,w,c
  1126  007DE6  1007               	iorwf	??___xxtofl+2,w,c
  1127  007DE8  1008               	iorwf	??___xxtofl+3,w,c
  1128  007DEA  B4D8               	btfsc	status,2,c
  1129  007DEC  D00D               	goto	l645
  1130  007DEE  D7E7               	goto	l643
  1131  007DF0  2A0A               	incf	___xxtofl@exp,f,c
  1132  007DF2  0E01               	movlw	1
  1133  007DF4  260B               	addwf	___xxtofl@arg,f,c
  1134  007DF6  0E00               	movlw	0
  1135  007DF8  220C               	addwfc	___xxtofl@arg+1,f,c
  1136  007DFA  220D               	addwfc	___xxtofl@arg+2,f,c
  1137  007DFC  220E               	addwfc	___xxtofl@arg+3,f,c
  1138  007DFE  90D8               	bcf	status,0,c
  1139  007E00  320E               	rrcf	___xxtofl@arg+3,f,c
  1140  007E02  320D               	rrcf	___xxtofl@arg+2,f,c
  1141  007E04  320C               	rrcf	___xxtofl@arg+1,f,c
  1142  007E06  320B               	rrcf	___xxtofl@arg,f,c
  1143  007E08                     l645:
  1144  007E08  0E00               	movlw	0
  1145  007E0A  140B               	andwf	___xxtofl@arg,w,c
  1146  007E0C  6E05               	movwf	??___xxtofl& (0+255),c
  1147  007E0E  0E00               	movlw	0
  1148  007E10  140C               	andwf	___xxtofl@arg+1,w,c
  1149  007E12  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1150  007E14  0E00               	movlw	0
  1151  007E16  140D               	andwf	___xxtofl@arg+2,w,c
  1152  007E18  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1153  007E1A  0EFF               	movlw	255
  1154  007E1C  140E               	andwf	___xxtofl@arg+3,w,c
  1155  007E1E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1156  007E20  5005               	movf	??___xxtofl,w,c
  1157  007E22  1006               	iorwf	??___xxtofl+1,w,c
  1158  007E24  1007               	iorwf	??___xxtofl+2,w,c
  1159  007E26  1008               	iorwf	??___xxtofl+3,w,c
  1160  007E28  B4D8               	btfsc	status,2,c
  1161  007E2A  D007               	goto	l648
  1162  007E2C  D7E1               	goto	l646
  1163  007E2E  060A               	decf	___xxtofl@exp,f,c
  1164  007E30  90D8               	bcf	status,0,c
  1165  007E32  360B               	rlcf	___xxtofl@arg,f,c
  1166  007E34  360C               	rlcf	___xxtofl@arg+1,f,c
  1167  007E36  360D               	rlcf	___xxtofl@arg+2,f,c
  1168  007E38  360E               	rlcf	___xxtofl@arg+3,f,c
  1169  007E3A                     l648:
  1170  007E3A  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1171  007E3C  D003               	goto	u360
  1172  007E3E  0E02               	movlw	2
  1173  007E40  600A               	cpfslt	___xxtofl@exp,c
  1174  007E42  D7F5               	goto	l649
  1175  007E44                     u360:
  1176  007E44  B00A               	btfsc	___xxtofl@exp,0,c
  1177  007E46  D008               	goto	l653
  1178  007E48  0EFF               	movlw	255
  1179  007E4A  160B               	andwf	___xxtofl@arg,f,c
  1180  007E4C  0EFF               	movlw	255
  1181  007E4E  160C               	andwf	___xxtofl@arg+1,f,c
  1182  007E50  0E7F               	movlw	127
  1183  007E52  160D               	andwf	___xxtofl@arg+2,f,c
  1184  007E54  0EFF               	movlw	255
  1185  007E56  160E               	andwf	___xxtofl@arg+3,f,c
  1186  007E58                     l653:
  1187  007E58  90D8               	bcf	status,0,c
  1188  007E5A  320A               	rrcf	___xxtofl@exp,f,c
  1189  007E5C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1190  007E60  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1191  007E62  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1192  007E64  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1193  007E66  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1194  007E6A  6A07               	clrf	??___xxtofl+2,c
  1195  007E6C  6A06               	clrf	??___xxtofl+1,c
  1196  007E6E  6A05               	clrf	??___xxtofl,c
  1197  007E70  5005               	movf	??___xxtofl,w,c
  1198  007E72  120B               	iorwf	___xxtofl@arg,f,c
  1199  007E74  5006               	movf	??___xxtofl+1,w,c
  1200  007E76  120C               	iorwf	___xxtofl@arg+1,f,c
  1201  007E78  5007               	movf	??___xxtofl+2,w,c
  1202  007E7A  120D               	iorwf	___xxtofl@arg+2,f,c
  1203  007E7C  5008               	movf	??___xxtofl+3,w,c
  1204  007E7E  120E               	iorwf	___xxtofl@arg+3,f,c
  1205  007E80  5009               	movf	___xxtofl@sign,w,c
  1206  007E82  A4D8               	btfss	status,2,c
  1207  007E84  AE04               	btfss	___xxtofl@val+3,7,c
  1208  007E86  D001               	goto	l654
  1209  007E88  8E0E               	bsf	___xxtofl@arg+3,7,c
  1210  007E8A                     l654:
  1211  007E8A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1212  007E8E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1213  007E92  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1214  007E96  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1215  007E9A  0012               	return	
  1216  007E9C                     __end_of___xxtofl:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           status	equ	0xFD8
  1220                           
  1221 ;; *************** function ___flge *****************
  1222 ;; Defined at:
  1223 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  ff1             4   14[COMRAM] unsigned char 
  1226 ;;  ff2             4   18[COMRAM] unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;		None               void
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1238 ;;      Params:         8       0       0       0       0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1240 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1241 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1242 ;;Total ram usage:       12 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_wait00
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text8
  1252  007C2C                     __ptext8:
  1253                           	opt stack 0
  1254  007C2C                     ___flge:
  1255                           	opt stack 28
  1256                           
  1257                           ;incstack = 0
  1258  007C2C  0E00               	movlw	0
  1259  007C2E  140F               	andwf	___flge@ff1,w,c
  1260  007C30  6E17               	movwf	??___flge& (0+255),c
  1261  007C32  0E00               	movlw	0
  1262  007C34  1410               	andwf	___flge@ff1+1,w,c
  1263  007C36  6E18               	movwf	(??___flge+1)& (0+255),c
  1264  007C38  0E80               	movlw	128
  1265  007C3A  1411               	andwf	___flge@ff1+2,w,c
  1266  007C3C  6E19               	movwf	(??___flge+2)& (0+255),c
  1267  007C3E  0E7F               	movlw	127
  1268  007C40  1412               	andwf	___flge@ff1+3,w,c
  1269  007C42  6E1A               	movwf	(??___flge+3)& (0+255),c
  1270  007C44  5017               	movf	??___flge,w,c
  1271  007C46  1018               	iorwf	??___flge+1,w,c
  1272  007C48  1019               	iorwf	??___flge+2,w,c
  1273  007C4A  101A               	iorwf	??___flge+3,w,c
  1274  007C4C  A4D8               	btfss	status,2,c
  1275  007C4E  D008               	goto	l290
  1276  007C50  0E00               	movlw	0
  1277  007C52  6E0F               	movwf	___flge@ff1,c
  1278  007C54  0E00               	movlw	0
  1279  007C56  6E10               	movwf	___flge@ff1+1,c
  1280  007C58  0E00               	movlw	0
  1281  007C5A  6E11               	movwf	___flge@ff1+2,c
  1282  007C5C  0E00               	movlw	0
  1283  007C5E  6E12               	movwf	___flge@ff1+3,c
  1284  007C60                     l290:
  1285  007C60  0E00               	movlw	0
  1286  007C62  1413               	andwf	___flge@ff2,w,c
  1287  007C64  6E17               	movwf	??___flge& (0+255),c
  1288  007C66  0E00               	movlw	0
  1289  007C68  1414               	andwf	___flge@ff2+1,w,c
  1290  007C6A  6E18               	movwf	(??___flge+1)& (0+255),c
  1291  007C6C  0E80               	movlw	128
  1292  007C6E  1415               	andwf	___flge@ff2+2,w,c
  1293  007C70  6E19               	movwf	(??___flge+2)& (0+255),c
  1294  007C72  0E7F               	movlw	127
  1295  007C74  1416               	andwf	___flge@ff2+3,w,c
  1296  007C76  6E1A               	movwf	(??___flge+3)& (0+255),c
  1297  007C78  5017               	movf	??___flge,w,c
  1298  007C7A  1018               	iorwf	??___flge+1,w,c
  1299  007C7C  1019               	iorwf	??___flge+2,w,c
  1300  007C7E  101A               	iorwf	??___flge+3,w,c
  1301  007C80  A4D8               	btfss	status,2,c
  1302  007C82  D008               	goto	l291
  1303  007C84  0E00               	movlw	0
  1304  007C86  6E13               	movwf	___flge@ff2,c
  1305  007C88  0E00               	movlw	0
  1306  007C8A  6E14               	movwf	___flge@ff2+1,c
  1307  007C8C  0E00               	movlw	0
  1308  007C8E  6E15               	movwf	___flge@ff2+2,c
  1309  007C90  0E00               	movlw	0
  1310  007C92  6E16               	movwf	___flge@ff2+3,c
  1311  007C94                     l291:
  1312  007C94  AE12               	btfss	___flge@ff1+3,7,c
  1313  007C96  D01D               	goto	l292
  1314  007C98  C00F  F017         	movff	___flge@ff1,??___flge
  1315  007C9C  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1316  007CA0  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1317  007CA4  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1318  007CA8  1E17               	comf	??___flge,f,c
  1319  007CAA  1E18               	comf	??___flge+1,f,c
  1320  007CAC  1E19               	comf	??___flge+2,f,c
  1321  007CAE  1E1A               	comf	??___flge+3,f,c
  1322  007CB0  2A17               	incf	??___flge,f,c
  1323  007CB2  0E00               	movlw	0
  1324  007CB4  2218               	addwfc	??___flge+1,f,c
  1325  007CB6  2219               	addwfc	??___flge+2,f,c
  1326  007CB8  221A               	addwfc	??___flge+3,f,c
  1327  007CBA  0E00               	movlw	0
  1328  007CBC  2417               	addwf	??___flge,w,c
  1329  007CBE  6E0F               	movwf	___flge@ff1,c
  1330  007CC0  0E00               	movlw	0
  1331  007CC2  2018               	addwfc	??___flge+1,w,c
  1332  007CC4  6E10               	movwf	___flge@ff1+1,c
  1333  007CC6  0E00               	movlw	0
  1334  007CC8  2019               	addwfc	??___flge+2,w,c
  1335  007CCA  6E11               	movwf	___flge@ff1+2,c
  1336  007CCC  0E80               	movlw	128
  1337  007CCE  201A               	addwfc	??___flge+3,w,c
  1338  007CD0  6E12               	movwf	___flge@ff1+3,c
  1339  007CD2                     l292:
  1340  007CD2  AE16               	btfss	___flge@ff2+3,7,c
  1341  007CD4  D01D               	goto	l293
  1342  007CD6  C013  F017         	movff	___flge@ff2,??___flge
  1343  007CDA  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1344  007CDE  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1345  007CE2  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1346  007CE6  1E17               	comf	??___flge,f,c
  1347  007CE8  1E18               	comf	??___flge+1,f,c
  1348  007CEA  1E19               	comf	??___flge+2,f,c
  1349  007CEC  1E1A               	comf	??___flge+3,f,c
  1350  007CEE  2A17               	incf	??___flge,f,c
  1351  007CF0  0E00               	movlw	0
  1352  007CF2  2218               	addwfc	??___flge+1,f,c
  1353  007CF4  2219               	addwfc	??___flge+2,f,c
  1354  007CF6  221A               	addwfc	??___flge+3,f,c
  1355  007CF8  0E00               	movlw	0
  1356  007CFA  2417               	addwf	??___flge,w,c
  1357  007CFC  6E13               	movwf	___flge@ff2,c
  1358  007CFE  0E00               	movlw	0
  1359  007D00  2018               	addwfc	??___flge+1,w,c
  1360  007D02  6E14               	movwf	___flge@ff2+1,c
  1361  007D04  0E00               	movlw	0
  1362  007D06  2019               	addwfc	??___flge+2,w,c
  1363  007D08  6E15               	movwf	___flge@ff2+2,c
  1364  007D0A  0E80               	movlw	128
  1365  007D0C  201A               	addwfc	??___flge+3,w,c
  1366  007D0E  6E16               	movwf	___flge@ff2+3,c
  1367  007D10                     l293:
  1368  007D10  0E00               	movlw	0
  1369  007D12  1A0F               	xorwf	___flge@ff1,f,c
  1370  007D14  0E00               	movlw	0
  1371  007D16  1A10               	xorwf	___flge@ff1+1,f,c
  1372  007D18  0E00               	movlw	0
  1373  007D1A  1A11               	xorwf	___flge@ff1+2,f,c
  1374  007D1C  0E80               	movlw	128
  1375  007D1E  1A12               	xorwf	___flge@ff1+3,f,c
  1376  007D20  0E00               	movlw	0
  1377  007D22  1A13               	xorwf	___flge@ff2,f,c
  1378  007D24  0E00               	movlw	0
  1379  007D26  1A14               	xorwf	___flge@ff2+1,f,c
  1380  007D28  0E00               	movlw	0
  1381  007D2A  1A15               	xorwf	___flge@ff2+2,f,c
  1382  007D2C  0E80               	movlw	128
  1383  007D2E  1A16               	xorwf	___flge@ff2+3,f,c
  1384  007D30  5013               	movf	___flge@ff2,w,c
  1385  007D32  5C0F               	subwf	___flge@ff1,w,c
  1386  007D34  5014               	movf	___flge@ff2+1,w,c
  1387  007D36  5810               	subwfb	___flge@ff1+1,w,c
  1388  007D38  5015               	movf	___flge@ff2+2,w,c
  1389  007D3A  5811               	subwfb	___flge@ff1+2,w,c
  1390  007D3C  5016               	movf	___flge@ff2+3,w,c
  1391  007D3E  5812               	subwfb	___flge@ff1+3,w,c
  1392  007D40  B0D8               	btfsc	status,0,c
  1393  007D42  D002               	goto	l904
  1394  007D44  90D8               	bcf	status,0,c
  1395  007D46  0012               	return	
  1396  007D48                     l904:
  1397  007D48  80D8               	bsf	status,0,c
  1398  007D4A  0012               	return	
  1399  007D4C                     __end_of___flge:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _led_sens *****************
  1405 ;; Defined at:
  1406 ;;		line 60 in file "sample.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2   43[None  ] int 
  1413 ;; Registers used:
  1414 ;;		None
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text9
  1434  007A62                     __ptext9:
  1435                           	opt stack 0
  1436  007A62                     _led_sens:
  1437                           	opt stack 30
  1438                           
  1439                           ;sample.c: 62: PORTAbits.RA0 = PORTBbits.RB0;
  1440                           
  1441                           ;incstack = 0
  1442  007A62  A081               	btfss	3969,0,c	;volatile
  1443  007A64  D002               	bra	u195
  1444  007A66  8080               	bsf	3968,0,c	;volatile
  1445  007A68  D001               	bra	u197
  1446  007A6A                     u195:
  1447  007A6A  9080               	bcf	3968,0,c	;volatile
  1448  007A6C                     u197:
  1449                           
  1450                           ;sample.c: 63: PORTAbits.RA1 = PORTBbits.RB1;
  1451  007A6C  A281               	btfss	3969,1,c	;volatile
  1452  007A6E  D002               	bra	u205
  1453  007A70  8280               	bsf	3968,1,c	;volatile
  1454  007A72  D001               	bra	u207
  1455  007A74                     u205:
  1456  007A74  9280               	bcf	3968,1,c	;volatile
  1457  007A76                     u207:
  1458                           
  1459                           ;sample.c: 64: PORTAbits.RA2 = PORTBbits.RB2;
  1460  007A76  A481               	btfss	3969,2,c	;volatile
  1461  007A78  D002               	bra	u215
  1462  007A7A  8480               	bsf	3968,2,c	;volatile
  1463  007A7C  D001               	bra	u217
  1464  007A7E                     u215:
  1465  007A7E  9480               	bcf	3968,2,c	;volatile
  1466  007A80                     u217:
  1467                           
  1468                           ;sample.c: 65: PORTAbits.RA3 = PORTBbits.RB3;
  1469  007A80  A681               	btfss	3969,3,c	;volatile
  1470  007A82  D002               	bra	u225
  1471  007A84  8680               	bsf	3968,3,c	;volatile
  1472  007A86  D001               	bra	u227
  1473  007A88                     u225:
  1474  007A88  9680               	bcf	3968,3,c	;volatile
  1475  007A8A                     u227:
  1476                           
  1477                           ;sample.c: 66: PORTAbits.RA4 = PORTBbits.RB4;
  1478  007A8A  A881               	btfss	3969,4,c	;volatile
  1479  007A8C  D002               	bra	u235
  1480  007A8E  8880               	bsf	3968,4,c	;volatile
  1481  007A90  D001               	bra	u237
  1482  007A92                     u235:
  1483  007A92  9880               	bcf	3968,4,c	;volatile
  1484  007A94                     u237:
  1485  007A94  0012               	return		;funcret
  1486  007A96                     __end_of_led_sens:
  1487                           	opt stack 0
  1488  0000                     tblptru	equ	0xFF8
  1489                           status	equ	0xFD8
  1490                           tblptru	equ	0xFF8
  1491                           status	equ	0xFD8
  1492                           
  1493                           	psect	rparam
  1494  0000                     tblptru	equ	0xFF8
  1495                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9440
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1888
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     22      22       1       35.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Feb 24 22:00:01 2018

                       l21 7BEA                         l22 7BC8                         l23 7BE0  
                       l50 7EB8                         l53 7F3C                         l61 7EE4  
                       l70 7EFC                         l62 7EEA                         l54 7EC6  
                       l71 7F02                         l63 7EF0                         l72 7F08  
                       l56 7ECC                         l57 7ED2                         l49 7EBC  
                       l82 7F1A                         l58 7ED8                         l83 7F20  
                       l59 7EDE                         l84 7F26                         l85 7F2C  
                       l69 7EF6                         l86 7F30                         l78 7F0E  
                       l87 7F36                         l79 7F14                        l290 7C60  
                      l291 7C94                        l292 7CD2                        l293 7D10  
                      l640 7DB8                        l642 7DCA                        l643 7DBE  
                      l653 7E58                        l645 7E08                        l654 7E8A  
                      l646 7DF0                        l638 7D8A                        l639 7D9A  
                      l904 7D48                        l648 7E3A                        l649 7E2E  
                      l976 7BD0                        u205 7A74                        u215 7A7E  
                      u207 7A76                        u225 7A88                        u217 7A80  
                      u410 7BE6                        u235 7A92                        u227 7A8A  
                      u237 7A94                        u430 7EC0                        u360 7E44  
                      u195 7A6A                        u197 7A6C                       _main 7E9C  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 004A            _small_left_down 7B2A                      status 000FD8  
          __initialization 7A26               __end_of_main 8000                     ??_main 0023  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of___xxtofl 7E9C  
                   ___flge 7C2C           __end_of_led_sens 7A96                     _wait00 7BBE  
                   tblptru 000FF8    __end_of_small_left_down 7B74           __end_of_straight 7A62  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 7A26              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _small_right_down 7B74         __size_of_left_down 004A                    ?___flge 000F  
                  ?_wait00 001B                  ?___xxtofl 0001           ?_small_left_down 0001  
                ?_led_sens 0001                    __Hparam 0000                    __Lparam 0000  
          __size_of___flge 0120                  ?_straight 0001                    __pcinit 7A26  
                  __ramtop 0800            __size_of_wait00 006E          __end_of_left_down 7AE0  
                  __ptext0 7E9C                    __ptext1 7A30                    __ptext2 7B74  
                  __ptext3 7B2A                    __ptext4 7AE0                    __ptext5 7A96  
                  __ptext6 7BBE                    __ptext7 7D4C                    __ptext8 7C2C  
                  __ptext9 7A62                 ??___xxtofl 0005       end_of_initialization 7A26  
               ??_led_sens 0001              __Lmediumconst 0000                    wait00@i 0021  
                  wait00@j 001F                    wait00@k 001B                 _right_down 7AE0  
               ??_straight 0023                  _PORTAbits 000F80                  _PORTBbits 000F81  
            ___xxtofl@sign 0009   __end_of_small_right_down 7BBE             __end_of___flge 7D4C  
           __end_of_wait00 7C2C        start_initialization 7A26                ?_right_down 0001  
                 ??___flge 0017                   ??_wait00 001F          __size_of___xxtofl 0150  
        __size_of_led_sens 0034          __size_of_straight 0032                  _left_down 7A96  
      __size_of_right_down 004A   __size_of_small_left_down 004A                 ?_left_down 0001  
                 __Hrparam 0000                   __Lrparam 0000          ?_small_right_down 0001  
       ??_small_right_down 0023                   ___xxtofl 7D4C                   _led_sens 7A62  
            __size_of_main 0164               ??_right_down 0023          ??_small_left_down 0023  
                 _straight 7A30                ??_left_down 0023         __end_of_right_down 7B2A  
