

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 28 14:43:19 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F2553 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTB	set	3969
    49  0000                     _PORTA	set	3968
    50  0000                     _TRISC	set	3988
    51  0000                     _TRISB	set	3987
    52  0000                     _TRISA	set	3986
    53  0000                     _ADCON1	set	4033
    54  0000                     _PORTBbits	set	3969
    55  0000                     _PORTAbits	set	3968
    56  0000                     _PORTC	set	3970
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007F24                     __pcinit:
    62                           	opt stack 0
    63  007F24                     start_initialization:
    64                           	opt stack 0
    65  007F24                     __initialization:
    66                           	opt stack 0
    67  007F24                     end_of_initialization:
    68                           	opt stack 0
    69  007F24                     __end_of__initialization:
    70                           	opt stack 0
    71  007F24  0100               	movlb	0
    72  007F26  EF95  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	opt stack 0
    77  000001                     wait00@k:
    78                           	opt stack 0
    79                           
    80                           ; 2 bytes @ 0x0
    81  000001                     	ds	2
    82  000003                     ??_wait00:
    83                           
    84                           ; 1 bytes @ 0x2
    85  000003                     	ds	1
    86  000004                     wait00@j:
    87                           	opt stack 0
    88                           
    89                           ; 2 bytes @ 0x3
    90  000004                     	ds	2
    91  000006                     wait00@i:
    92                           	opt stack 0
    93                           
    94                           ; 2 bytes @ 0x5
    95  000006                     	ds	2
    96  000008                     
    97                           ; 1 bytes @ 0x7
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 76 in file "sample.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  2   51[None  ] int 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    2
   123 ;; This function calls:
   124 ;;		_led_sens
   125 ;;		_small_right_down
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007F2A                     __ptext0:
   133                           	opt stack 0
   134  007F2A                     _main:
   135                           	opt stack 29
   136                           
   137                           ;sample.c: 79: ADCON1 = 0x0F;
   138                           
   139                           ;incstack = 0
   140  007F2A  0E0F               	movlw	15
   141  007F2C  6EC1               	movwf	4033,c	;volatile
   142                           
   143                           ;sample.c: 82: TRISA = 0x20;
   144  007F2E  0E20               	movlw	32
   145  007F30  6E92               	movwf	3986,c	;volatile
   146                           
   147                           ;sample.c: 83: TRISB = 0xFF;
   148  007F32  6893               	setf	3987,c	;volatile
   149                           
   150                           ;sample.c: 84: TRISC = 0x00;
   151  007F34  0E00               	movlw	0
   152  007F36  6E94               	movwf	3988,c	;volatile
   153                           
   154                           ;sample.c: 87: PORTA = 0x00;
   155  007F38  0E00               	movlw	0
   156  007F3A  6E80               	movwf	3968,c	;volatile
   157                           
   158                           ;sample.c: 88: PORTB = 0x00;
   159  007F3C  0E00               	movlw	0
   160  007F3E  6E81               	movwf	3969,c	;volatile
   161                           
   162                           ;sample.c: 89: PORTC = 0x00;
   163  007F40  0E00               	movlw	0
   164  007F42  6E82               	movwf	3970,c	;volatile
   165                           
   166                           ;sample.c: 92: while(PORTAbits.RA5==1){
   167  007F44  D002               	goto	l52
   168  007F46                     
   169                           ;sample.c: 93: led_sens();
   170  007F46  ECC5  F03F         	call	_led_sens	;wreg free
   171  007F4A                     l52:
   172  007F4A  BA80               	btfsc	3968,5,c	;volatile
   173  007F4C  D7FC               	goto	l53
   174                           
   175                           ;sample.c: 99: led_sens();
   176                           
   177                           ;sample.c: 94: }
   178                           ;sample.c: 98: while(1){
   179  007F4E  ECC5  F03F         	call	_led_sens	;wreg free
   180  007F52  ECAC  F03F         	call	_small_right_down	;wreg free
   181  007F56  D7FD               	goto	l56
   182  007F58                     __end_of_main:
   183                           	opt stack 0
   184                           
   185 ;; *************** function _small_right_down *****************
   186 ;; Defined at:
   187 ;;		line 44 in file "sample.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  2   37[None  ] int 
   194 ;; Registers used:
   195 ;;		wreg, status,2, status,0, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   201 ;;      Params:         0       0       0       0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0
   203 ;;      Temps:          0       0       0       0       0       0       0       0       0
   204 ;;      Totals:         0       0       0       0       0       0       0       0       0
   205 ;;Total ram usage:        0 bytes
   206 ;; Hardware stack levels used:    1
   207 ;; Hardware stack levels required when called:    1
   208 ;; This function calls:
   209 ;;		_wait00
   210 ;; This function is called by:
   211 ;;		_main
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text1
   216  007F58                     __ptext1:
   217                           	opt stack 0
   218  007F58                     _small_right_down:
   219                           	opt stack 29
   220                           
   221                           ;sample.c: 45: PORTC=0x03;
   222                           
   223                           ;incstack = 0
   224  007F58  0E03               	movlw	3
   225  007F5A  6E82               	movwf	3970,c	;volatile
   226                           
   227                           ;sample.c: 46: wait00(0.8);
   228  007F5C  0E00               	movlw	0
   229  007F5E  6E02               	movwf	wait00@k+1,c
   230  007F60  0E00               	movlw	0
   231  007F62  6E01               	movwf	wait00@k,c
   232  007F64  ECDF  F03F         	call	_wait00	;wreg free
   233                           
   234                           ;sample.c: 47: PORTC=0x01;
   235  007F68  0E01               	movlw	1
   236  007F6A  6E82               	movwf	3970,c	;volatile
   237                           
   238                           ;sample.c: 48: wait00(2);
   239  007F6C  0E00               	movlw	0
   240  007F6E  6E02               	movwf	wait00@k+1,c
   241  007F70  0E02               	movlw	2
   242  007F72  6E01               	movwf	wait00@k,c
   243  007F74  ECDF  F03F         	call	_wait00	;wreg free
   244                           
   245                           ;sample.c: 49: PORTC=0x00;
   246  007F78  0E00               	movlw	0
   247  007F7A  6E82               	movwf	3970,c	;volatile
   248                           
   249                           ;sample.c: 50: wait00(20);
   250  007F7C  0E00               	movlw	0
   251  007F7E  6E02               	movwf	wait00@k+1,c
   252  007F80  0E14               	movlw	20
   253  007F82  6E01               	movwf	wait00@k,c
   254  007F84  ECDF  F03F         	call	_wait00	;wreg free
   255  007F88  0012               	return		;funcret
   256  007F8A                     __end_of_small_right_down:
   257                           	opt stack 0
   258                           
   259 ;; *************** function _wait00 *****************
   260 ;; Defined at:
   261 ;;		line 6 in file "sample.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;  k               2    0[COMRAM] short 
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  i               2    5[COMRAM] short 
   266 ;;  j               2    3[COMRAM] short 
   267 ;; Return value:  Size  Location     Type
   268 ;;                  2    0[COMRAM] int 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         2       0       0       0       0       0       0       0       0
   277 ;;      Locals:         4       0       0       0       0       0       0       0       0
   278 ;;      Temps:          1       0       0       0       0       0       0       0       0
   279 ;;      Totals:         7       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        7 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_small_right_down
   286 ;;		_left_down
   287 ;;		_small_left_down
   288 ;;		_right_down
   289 ;;		_straight
   290 ;;		_do_sth
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text2
   295  007FBE                     __ptext2:
   296                           	opt stack 0
   297  007FBE                     _wait00:
   298                           	opt stack 29
   299                           
   300                           ;sample.c: 9: short i;
   301                           ;sample.c: 10: short j;
   302                           ;sample.c: 11: for(j=0;j<k;j++){
   303                           
   304                           ;incstack = 0
   305  007FBE  0E00               	movlw	0
   306  007FC0  6E05               	movwf	wait00@j+1,c
   307  007FC2  0E00               	movlw	0
   308  007FC4  6E04               	movwf	wait00@j,c
   309  007FC6  D011               	goto	l21
   310  007FC8                     
   311                           ;sample.c: 12: for(i=0;i<3000;i++){
   312  007FC8  0E00               	movlw	0
   313  007FCA  6E07               	movwf	wait00@i+1,c
   314  007FCC  0E00               	movlw	0
   315  007FCE  6E06               	movwf	wait00@i,c
   316  007FD0                     l769:
   317  007FD0  BE07               	btfsc	wait00@i+1,7,c
   318  007FD2  D006               	goto	l23
   319  007FD4  0EB8               	movlw	184
   320  007FD6  5C06               	subwf	wait00@i,w,c
   321  007FD8  0E0B               	movlw	11
   322  007FDA  5807               	subwfb	wait00@i+1,w,c
   323  007FDC  B0D8               	btfsc	status,0,c
   324  007FDE  D003               	goto	u110
   325  007FE0                     l23:
   326  007FE0  4A06               	infsnz	wait00@i,f,c
   327  007FE2  2A07               	incf	wait00@i+1,f,c
   328  007FE4  D7F5               	goto	l769
   329  007FE6                     u110:
   330  007FE6  4A04               	infsnz	wait00@j,f,c
   331  007FE8  2A05               	incf	wait00@j+1,f,c
   332  007FEA                     l21:
   333  007FEA  5001               	movf	wait00@k,w,c
   334  007FEC  5C04               	subwf	wait00@j,w,c
   335  007FEE  5005               	movf	wait00@j+1,w,c
   336  007FF0  0A80               	xorlw	128
   337  007FF2  6E03               	movwf	??_wait00& (0+255),c
   338  007FF4  5002               	movf	wait00@k+1,w,c
   339  007FF6  0A80               	xorlw	128
   340  007FF8  5803               	subwfb	??_wait00& (0+255),w,c
   341  007FFA  B0D8               	btfsc	status,0,c
   342  007FFC  0012               	return	
   343  007FFE  D7E4               	goto	l22
   344  008000                     __end_of_wait00:
   345                           	opt stack 0
   346                           status	equ	0xFD8
   347                           
   348 ;; *************** function _led_sens *****************
   349 ;; Defined at:
   350 ;;		line 67 in file "sample.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  2   46[None  ] int 
   357 ;; Registers used:
   358 ;;		None
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   364 ;;      Params:         0       0       0       0       0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used:    1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text3
   378  007F8A                     __ptext3:
   379                           	opt stack 0
   380  007F8A                     _led_sens:
   381                           	opt stack 30
   382                           
   383                           ;sample.c: 69: PORTAbits.RA0 = PORTBbits.RB0;
   384                           
   385                           ;incstack = 0
   386  007F8A  A081               	btfss	3969,0,c	;volatile
   387  007F8C  D002               	bra	u45
   388  007F8E  8080               	bsf	3968,0,c	;volatile
   389  007F90  D001               	bra	u47
   390  007F92                     u45:
   391  007F92  9080               	bcf	3968,0,c	;volatile
   392  007F94                     u47:
   393                           
   394                           ;sample.c: 70: PORTAbits.RA1 = PORTBbits.RB1;
   395  007F94  A281               	btfss	3969,1,c	;volatile
   396  007F96  D002               	bra	u55
   397  007F98  8280               	bsf	3968,1,c	;volatile
   398  007F9A  D001               	bra	u57
   399  007F9C                     u55:
   400  007F9C  9280               	bcf	3968,1,c	;volatile
   401  007F9E                     u57:
   402                           
   403                           ;sample.c: 71: PORTAbits.RA2 = PORTBbits.RB2;
   404  007F9E  A481               	btfss	3969,2,c	;volatile
   405  007FA0  D002               	bra	u65
   406  007FA2  8480               	bsf	3968,2,c	;volatile
   407  007FA4  D001               	bra	u67
   408  007FA6                     u65:
   409  007FA6  9480               	bcf	3968,2,c	;volatile
   410  007FA8                     u67:
   411                           
   412                           ;sample.c: 72: PORTAbits.RA3 = PORTBbits.RB3;
   413  007FA8  A681               	btfss	3969,3,c	;volatile
   414  007FAA  D002               	bra	u75
   415  007FAC  8680               	bsf	3968,3,c	;volatile
   416  007FAE  D001               	bra	u77
   417  007FB0                     u75:
   418  007FB0  9680               	bcf	3968,3,c	;volatile
   419  007FB2                     u77:
   420                           
   421                           ;sample.c: 73: PORTAbits.RA4 = PORTBbits.RB4;
   422  007FB2  A881               	btfss	3969,4,c	;volatile
   423  007FB4  D002               	bra	u85
   424  007FB6  8880               	bsf	3968,4,c	;volatile
   425  007FB8  D001               	bra	u87
   426  007FBA                     u85:
   427  007FBA  9880               	bcf	3968,4,c	;volatile
   428  007FBC                     u87:
   429  007FBC  0012               	return		;funcret
   430  007FBE                     __end_of_led_sens:
   431                           	opt stack 0
   432  0000                     status	equ	0xFD8
   433                           status	equ	0xFD8
   434                           
   435                           	psect	rparam
   436  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _small_right_down->_wait00

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1308
                           _led_sens
                   _small_right_down
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1308
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               7     5      2    1308
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _small_right_down
     _wait00

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 28 14:43:19 2018

                       l21 7FEA                         l22 7FC8                         l23 7FE0  
                       l52 7F4A                         l53 7F46                         l56 7F52  
                       u45 7F92                         u55 7F9C                         u47 7F94  
                       u65 7FA6                         u57 7F9E                         u75 7FB0  
                       u67 7FA8                         u85 7FBA                         u77 7FB2  
                       u87 7FBC                        l769 7FD0                        u110 7FE6  
                     _main 7F2A                       start 2000               ___param_bank 000000  
                    ?_main 0001                      _PORTA 000F80                      _PORTB 000F81  
                    _PORTC 000F82                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94  __size_of_small_right_down 0032                      status 000FD8  
          __initialization 7F24               __end_of_main 7F58                     ??_main 0008  
            __activetblptr 000000                     _ADCON1 000FC1           __end_of_led_sens 7FBE  
                   _wait00 7FBE                 __accesstop 0060    __end_of__initialization 7F24  
            ___rparam_used 000001             __pcstackCOMRAM 0001           _small_right_down 7F58  
                  ?_wait00 0001                  ?_led_sens 0001                    __Hparam 0000  
                  __Lparam 0000                    __pcinit 7F24                    __ramtop 0800  
          __size_of_wait00 0042                    __ptext0 7F2A                    __ptext1 7F58  
                  __ptext2 7FBE                    __ptext3 7F8A       end_of_initialization 7F24  
               ??_led_sens 0001                    wait00@i 0006                    wait00@j 0004  
                  wait00@k 0001                  _PORTAbits 000F80                  _PORTBbits 000F81  
 __end_of_small_right_down 7F8A             __end_of_wait00 8000        start_initialization 7F24  
                 ??_wait00 0003          __size_of_led_sens 0034                   __Hrparam 0000  
                 __Lrparam 0000          ?_small_right_down 0001         ??_small_right_down 0008  
                 _led_sens 7F8A              __size_of_main 002E  
