

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 27 17:34:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F2553 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _PORTC	set	3970
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  0079E6                     __pcinit:
    68                           	opt stack 0
    69  0079E6                     start_initialization:
    70                           	opt stack 0
    71  0079E6                     __initialization:
    72                           	opt stack 0
    73  0079E6                     end_of_initialization:
    74                           	opt stack 0
    75  0079E6                     __end_of__initialization:
    76                           	opt stack 0
    77  0079E6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  0079E8  6EF8               	movwf	tblptru,c
    79  0079EA  0100               	movlb	0
    80  0079EC  EF2E  F03F         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000001                     ?___xxtofl:
    87                           	opt stack 0
    88  000001                     ___xxtofl@val:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x0
    92  000001                     	ds	4
    93  000005                     ??___xxtofl:
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___xxtofl@sign:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x8
   101  000009                     	ds	1
   102  00000A                     ___xxtofl@exp:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x9
   106  00000A                     	ds	1
   107  00000B                     ___xxtofl@arg:
   108                           	opt stack 0
   109                           
   110                           ; 4 bytes @ 0xA
   111  00000B                     	ds	4
   112  00000F                     ___flge@ff1:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xE
   116  00000F                     	ds	4
   117  000013                     ___flge@ff2:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x12
   121  000013                     	ds	4
   122  000017                     ??___flge:
   123                           
   124                           ; 1 bytes @ 0x16
   125  000017                     	ds	4
   126  00001B                     wait00@k:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x1A
   130  00001B                     	ds	4
   131  00001F                     wait00@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1E
   135  00001F                     	ds	2
   136  000021                     wait00@i:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x20
   140  000021                     	ds	2
   141  000023                     main@led_result:
   142                           	opt stack 0
   143                           
   144                           ; 5 bytes @ 0x22
   145  000023                     	ds	5
   146                           tblptru	equ	0xFF8
   147                           
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 70 in file "sample.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;  led_result      5   34[COMRAM] unsigned char [5]
   158 ;; Return value:  Size  Location     Type
   159 ;;                  2   48[None  ] int 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         5       0       0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0       0       0
   170 ;;      Totals:         5       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        5 bytes
   172 ;; Hardware stack levels required when called:    3
   173 ;; This function calls:
   174 ;;		_led_sens
   175 ;;		_left_down
   176 ;;		_right_down
   177 ;;		_small_left_down
   178 ;;		_small_right_down
   179 ;;		_straight
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text0
   186  007E5C                     __ptext0:
   187                           	opt stack 0
   188  007E5C                     _main:
   189                           	opt stack 28
   190                           
   191                           ;sample.c: 73: ADCON1 = 0x0F;
   192                           
   193                           ;incstack = 0
   194  007E5C  0E0F               	movlw	15
   195  007E5E  6EC1               	movwf	4033,c	;volatile
   196                           
   197                           ;sample.c: 76: TRISA = 0x20;
   198  007E60  0E20               	movlw	32
   199  007E62  6E92               	movwf	3986,c	;volatile
   200                           
   201                           ;sample.c: 77: TRISB = 0xFF;
   202  007E64  6893               	setf	3987,c	;volatile
   203                           
   204                           ;sample.c: 78: TRISC = 0x00;
   205  007E66  0E00               	movlw	0
   206  007E68  6E94               	movwf	3988,c	;volatile
   207                           
   208                           ;sample.c: 81: PORTA = 0x00;
   209  007E6A  0E00               	movlw	0
   210  007E6C  6E80               	movwf	3968,c	;volatile
   211                           
   212                           ;sample.c: 82: PORTB = 0x00;
   213  007E6E  0E00               	movlw	0
   214  007E70  6E81               	movwf	3969,c	;volatile
   215                           
   216                           ;sample.c: 83: PORTC = 0x00;
   217  007E72  0E00               	movlw	0
   218  007E74  6E82               	movwf	3970,c	;volatile
   219                           
   220                           ;sample.c: 86: while(PORTAbits.RA5==1){
   221  007E76  D002               	goto	l49
   222  007E78                     
   223                           ;sample.c: 87: led_sens();
   224  007E78  EC11  F03D         	call	_led_sens	;wreg free
   225  007E7C                     l49:
   226  007E7C  BA80               	btfsc	3968,5,c	;volatile
   227  007E7E  D7FC               	goto	l50
   228  007E80                     u480:
   229                           
   230                           ;sample.c: 93: led_sens();
   231                           
   232                           ;sample.c: 88: }
   233                           ;sample.c: 92: while(1){
   234  007E80  EC11  F03D         	call	_led_sens	;wreg free
   235                           
   236                           ;sample.c: 94: char led_result[5];
   237                           ;sample.c: 95: led_result[0]='0'+PORTBbits.RB0;
   238  007E84  A081               	btfss	3969,0,c	;volatile
   239  007E86  D002               	goto	u490
   240  007E88  0E01               	movlw	1
   241  007E8A  D001               	goto	u496
   242  007E8C                     u490:
   243  007E8C  0E00               	movlw	0
   244  007E8E                     u496:
   245  007E8E  0F30               	addlw	48
   246  007E90  6E23               	movwf	main@led_result,c
   247                           
   248                           ;sample.c: 96: led_result[1]='0'+PORTBbits.RB1;
   249  007E92  A281               	btfss	3969,1,c	;volatile
   250  007E94  D002               	goto	u500
   251  007E96  0E01               	movlw	1
   252  007E98  D001               	goto	u506
   253  007E9A                     u500:
   254  007E9A  0E00               	movlw	0
   255  007E9C                     u506:
   256  007E9C  0F30               	addlw	48
   257  007E9E  6E24               	movwf	main@led_result+1,c
   258                           
   259                           ;sample.c: 97: led_result[2]='0'+PORTBbits.RB2;
   260  007EA0  A481               	btfss	3969,2,c	;volatile
   261  007EA2  D002               	goto	u510
   262  007EA4  0E01               	movlw	1
   263  007EA6  D001               	goto	u516
   264  007EA8                     u510:
   265  007EA8  0E00               	movlw	0
   266  007EAA                     u516:
   267  007EAA  0F30               	addlw	48
   268  007EAC  6E25               	movwf	main@led_result+2,c
   269                           
   270                           ;sample.c: 98: led_result[3]='0'+PORTBbits.RB3;
   271  007EAE  A681               	btfss	3969,3,c	;volatile
   272  007EB0  D002               	goto	u520
   273  007EB2  0E01               	movlw	1
   274  007EB4  D001               	goto	u526
   275  007EB6                     u520:
   276  007EB6  0E00               	movlw	0
   277  007EB8                     u526:
   278  007EB8  0F30               	addlw	48
   279  007EBA  6E26               	movwf	main@led_result+3,c
   280                           
   281                           ;sample.c: 99: led_result[4]='0'+PORTBbits.RB4;
   282  007EBC  A881               	btfss	3969,4,c	;volatile
   283  007EBE  D002               	goto	u530
   284  007EC0  0E01               	movlw	1
   285  007EC2  D001               	goto	u536
   286  007EC4                     u530:
   287  007EC4  0E00               	movlw	0
   288  007EC6                     u536:
   289  007EC6  0F30               	addlw	48
   290  007EC8  6E27               	movwf	main@led_result+4,c
   291                           
   292                           ;sample.c: 109: switch (PORTB) {
   293  007ECA  D038               	goto	l53
   294  007ECC                     
   295                           ;sample.c: 111: straight();
   296  007ECC  ECF8  F03C         	call	_straight	;wreg free
   297                           
   298                           ;sample.c: 112: break;
   299  007ED0  D7D7               	goto	u480
   300  007ED2                     
   301                           ;sample.c: 114: right_down();
   302  007ED2  EC50  F03D         	call	_right_down	;wreg free
   303                           
   304                           ;sample.c: 115: break;
   305  007ED6  D7D4               	goto	u480
   306  007ED8                     
   307                           ;sample.c: 117: small_right_down();
   308  007ED8  EC9A  F03D         	call	_small_right_down	;wreg free
   309                           
   310                           ;sample.c: 118: break;
   311  007EDC  D7D1               	goto	u480
   312  007EDE                     
   313                           ;sample.c: 120: small_right_down();
   314  007EDE  EC9A  F03D         	call	_small_right_down	;wreg free
   315                           
   316                           ;sample.c: 121: break;
   317  007EE2  D7CE               	goto	u480
   318  007EE4                     
   319                           ;sample.c: 123: straight();
   320  007EE4  ECF8  F03C         	call	_straight	;wreg free
   321                           
   322                           ;sample.c: 125: case 0b00101: break;
   323                           
   324                           ;sample.c: 124: break;
   325  007EE8  D7CB               	goto	u480
   326  007EEA                     
   327                           ;sample.c: 127: small_right_down();
   328  007EEA  EC9A  F03D         	call	_small_right_down	;wreg free
   329                           
   330                           ;sample.c: 128: break;
   331  007EEE  D7C8               	goto	u480
   332  007EF0                     
   333                           ;sample.c: 130: small_left_down();
   334  007EF0  EC75  F03D         	call	_small_left_down	;wreg free
   335                           
   336                           ;sample.c: 131: break;
   337  007EF4  D7C5               	goto	u480
   338  007EF6                     
   339                           ;sample.c: 133: small_left_down();
   340  007EF6  EC75  F03D         	call	_small_left_down	;wreg free
   341                           
   342                           ;sample.c: 139: case 0b01101: break;
   343                           
   344                           ;sample.c: 138: case 0b01100: break;
   345                           
   346                           ;sample.c: 137: case 0b01011: break;
   347                           
   348                           ;sample.c: 136: case 0b01010: break;
   349                           
   350                           ;sample.c: 135: case 0b01001: break;
   351                           
   352                           ;sample.c: 134: break;
   353  007EFA  D7C2               	goto	u480
   354  007EFC                     
   355                           ;sample.c: 141: straight();
   356  007EFC  ECF8  F03C         	call	_straight	;wreg free
   357                           
   358                           ;sample.c: 142: break;
   359  007F00  D7BF               	goto	u480
   360  007F02                     
   361                           ;sample.c: 144: left_down();
   362  007F02  EC2B  F03D         	call	_left_down	;wreg free
   363                           
   364                           ;sample.c: 145: break;
   365  007F06  D7BC               	goto	u480
   366  007F08                     
   367                           ;sample.c: 147: left_down();
   368  007F08  EC2B  F03D         	call	_left_down	;wreg free
   369                           
   370                           ;sample.c: 148: break;
   371  007F0C  D7B9               	goto	u480
   372  007F0E                     
   373                           ;sample.c: 150: straight();
   374  007F0E  ECF8  F03C         	call	_straight	;wreg free
   375                           
   376                           ;sample.c: 156: case 0b10110: break;
   377                           
   378                           ;sample.c: 155: case 0b10101: break;
   379                           
   380                           ;sample.c: 154: case 0b10100: break;
   381                           
   382                           ;sample.c: 153: case 0b10011: break;
   383                           
   384                           ;sample.c: 152: case 0b10010: break;
   385                           
   386                           ;sample.c: 151: break;
   387  007F12  D7B6               	goto	u480
   388  007F14                     
   389                           ;sample.c: 158: left_down();
   390  007F14  EC2B  F03D         	call	_left_down	;wreg free
   391                           
   392                           ;sample.c: 159: break;
   393  007F18  D7B3               	goto	u480
   394  007F1A                     
   395                           ;sample.c: 161: small_left_down();
   396  007F1A  EC75  F03D         	call	_small_left_down	;wreg free
   397                           
   398                           ;sample.c: 164: case 0b11010: break;
   399                           
   400                           ;sample.c: 163: case 0b11001: break;
   401                           
   402                           ;sample.c: 162: break;
   403  007F1E  D7B0               	goto	u480
   404  007F20                     
   405                           ;sample.c: 166: straight();
   406  007F20  ECF8  F03C         	call	_straight	;wreg free
   407                           
   408                           ;sample.c: 167: break;
   409  007F24  D7AD               	goto	u480
   410  007F26                     
   411                           ;sample.c: 169: small_right_down();
   412  007F26  EC9A  F03D         	call	_small_right_down	;wreg free
   413                           
   414                           ;sample.c: 170: break;
   415  007F2A  D7AA               	goto	u480
   416  007F2C                     
   417                           ;sample.c: 172: small_right_down();
   418  007F2C  EC9A  F03D         	call	_small_right_down	;wreg free
   419                           
   420                           ;sample.c: 173: break;
   421  007F30  D7A7               	goto	u480
   422  007F32                     
   423                           ;sample.c: 175: right_down();
   424  007F32  EC50  F03D         	call	_right_down	;wreg free
   425  007F36                     l86:
   426                           
   427                           ;sample.c: 177: straight();
   428  007F36  ECF8  F03C         	call	_straight	;wreg free
   429                           
   430                           ;sample.c: 181: }
   431                           
   432                           ;sample.c: 180: break;
   433                           
   434                           ;sample.c: 179: default:
   435                           
   436                           ;sample.c: 178: break;
   437  007F3A  D7A2               	goto	u480
   438  007F3C                     l53:
   439  007F3C  5081               	movf	3969,w,c	;volatile
   440                           
   441                           ; Switch size 1, requested type "space"
   442                           ; Number of cases is 32, Range of values is 0 to 31
   443                           ; switch strategies available:
   444                           ; Name         Instructions Cycles
   445                           ; simple_byte           97    49 (average)
   446                           ;	Chosen strategy is simple_byte
   447  007F3E  0A00               	xorlw	0	; case 0
   448  007F40  B4D8               	btfsc	status,2,c
   449  007F42  D7C4               	goto	l54
   450  007F44  0A01               	xorlw	1	; case 1
   451  007F46  B4D8               	btfsc	status,2,c
   452  007F48  D7C4               	goto	l56
   453  007F4A  0A03               	xorlw	3	; case 2
   454  007F4C  B4D8               	btfsc	status,2,c
   455  007F4E  D7C4               	goto	l57
   456  007F50  0A01               	xorlw	1	; case 3
   457  007F52  B4D8               	btfsc	status,2,c
   458  007F54  D7C4               	goto	l58
   459  007F56  0A07               	xorlw	7	; case 4
   460  007F58  B4D8               	btfsc	status,2,c
   461  007F5A  D7C4               	goto	l59
   462  007F5C  0A01               	xorlw	1	; case 5
   463  007F5E  B4D8               	btfsc	status,2,c
   464  007F60  D78F               	goto	u480
   465  007F62  0A03               	xorlw	3	; case 6
   466  007F64  B4D8               	btfsc	status,2,c
   467  007F66  D7C1               	goto	l61
   468  007F68  0A01               	xorlw	1	; case 7
   469  007F6A  B4D8               	btfsc	status,2,c
   470  007F6C  D7C1               	goto	l62
   471  007F6E  0A0F               	xorlw	15	; case 8
   472  007F70  B4D8               	btfsc	status,2,c
   473  007F72  D7C1               	goto	l63
   474  007F74  0A01               	xorlw	1	; case 9
   475  007F76  B4D8               	btfsc	status,2,c
   476  007F78  D783               	goto	u480
   477  007F7A  0A03               	xorlw	3	; case 10
   478  007F7C  B4D8               	btfsc	status,2,c
   479  007F7E  D780               	goto	u480
   480  007F80  0A01               	xorlw	1	; case 11
   481  007F82  B4D8               	btfsc	status,2,c
   482  007F84  D77D               	goto	u480
   483  007F86  0A07               	xorlw	7	; case 12
   484  007F88  B4D8               	btfsc	status,2,c
   485  007F8A  D77A               	goto	u480
   486  007F8C  0A01               	xorlw	1	; case 13
   487  007F8E  B4D8               	btfsc	status,2,c
   488  007F90  D777               	goto	u480
   489  007F92  0A03               	xorlw	3	; case 14
   490  007F94  B4D8               	btfsc	status,2,c
   491  007F96  D7B2               	goto	l69
   492  007F98  0A01               	xorlw	1	; case 15
   493  007F9A  B4D8               	btfsc	status,2,c
   494  007F9C  D7B2               	goto	l70
   495  007F9E  0A1F               	xorlw	31	; case 16
   496  007FA0  B4D8               	btfsc	status,2,c
   497  007FA2  D7B2               	goto	l71
   498  007FA4  0A01               	xorlw	1	; case 17
   499  007FA6  B4D8               	btfsc	status,2,c
   500  007FA8  D7B2               	goto	l72
   501  007FAA  0A03               	xorlw	3	; case 18
   502  007FAC  B4D8               	btfsc	status,2,c
   503  007FAE  D768               	goto	u480
   504  007FB0  0A01               	xorlw	1	; case 19
   505  007FB2  B4D8               	btfsc	status,2,c
   506  007FB4  D765               	goto	u480
   507  007FB6  0A07               	xorlw	7	; case 20
   508  007FB8  B4D8               	btfsc	status,2,c
   509  007FBA  D762               	goto	u480
   510  007FBC  0A01               	xorlw	1	; case 21
   511  007FBE  B4D8               	btfsc	status,2,c
   512  007FC0  D75F               	goto	u480
   513  007FC2  0A03               	xorlw	3	; case 22
   514  007FC4  B4D8               	btfsc	status,2,c
   515  007FC6  D75C               	goto	u480
   516  007FC8  0A01               	xorlw	1	; case 23
   517  007FCA  B4D8               	btfsc	status,2,c
   518  007FCC  D7A3               	goto	l78
   519  007FCE  0A0F               	xorlw	15	; case 24
   520  007FD0  B4D8               	btfsc	status,2,c
   521  007FD2  D7A3               	goto	l79
   522  007FD4  0A01               	xorlw	1	; case 25
   523  007FD6  B4D8               	btfsc	status,2,c
   524  007FD8  D753               	goto	u480
   525  007FDA  0A03               	xorlw	3	; case 26
   526  007FDC  B4D8               	btfsc	status,2,c
   527  007FDE  D750               	goto	u480
   528  007FE0  0A01               	xorlw	1	; case 27
   529  007FE2  B4D8               	btfsc	status,2,c
   530  007FE4  D79D               	goto	l82
   531  007FE6  0A07               	xorlw	7	; case 28
   532  007FE8  B4D8               	btfsc	status,2,c
   533  007FEA  D79D               	goto	l83
   534  007FEC  0A01               	xorlw	1	; case 29
   535  007FEE  B4D8               	btfsc	status,2,c
   536  007FF0  D79D               	goto	l84
   537  007FF2  0A03               	xorlw	3	; case 30
   538  007FF4  B4D8               	btfsc	status,2,c
   539  007FF6  D79D               	goto	l85
   540  007FF8  0A01               	xorlw	1	; case 31
   541  007FFA  B4D8               	btfsc	status,2,c
   542  007FFC  D79C               	goto	l86
   543  007FFE  D740               	goto	u480
   544  008000                     __end_of_main:
   545                           	opt stack 0
   546                           tblptru	equ	0xFF8
   547                           status	equ	0xFD8
   548                           
   549 ;; *************** function _straight *****************
   550 ;; Defined at:
   551 ;;		line 54 in file "sample.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  2   40[None  ] int 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    2
   572 ;; This function calls:
   573 ;;		_wait00
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text1
   580  0079F0                     __ptext1:
   581                           	opt stack 0
   582  0079F0                     _straight:
   583                           	opt stack 28
   584                           
   585                           ;sample.c: 55: PORTC=0x03;
   586                           
   587                           ;incstack = 0
   588  0079F0  0E03               	movlw	3
   589  0079F2  6E82               	movwf	3970,c	;volatile
   590                           
   591                           ;sample.c: 56: wait00(8);
   592  0079F4  0E00               	movlw	0
   593  0079F6  6E1B               	movwf	wait00@k,c
   594  0079F8  0E00               	movlw	0
   595  0079FA  6E1C               	movwf	wait00@k+1,c
   596  0079FC  0E00               	movlw	0
   597  0079FE  6E1D               	movwf	wait00@k+2,c
   598  007A00  0E41               	movlw	65
   599  007A02  6E1E               	movwf	wait00@k+3,c
   600  007A04  ECBF  F03D         	call	_wait00	;wreg free
   601                           
   602                           ;sample.c: 57: PORTC=0x00;
   603  007A08  0E00               	movlw	0
   604  007A0A  6E82               	movwf	3970,c	;volatile
   605                           
   606                           ;sample.c: 58: wait00(20);
   607  007A0C  0E00               	movlw	0
   608  007A0E  6E1B               	movwf	wait00@k,c
   609  007A10  0E00               	movlw	0
   610  007A12  6E1C               	movwf	wait00@k+1,c
   611  007A14  0EA0               	movlw	160
   612  007A16  6E1D               	movwf	wait00@k+2,c
   613  007A18  0E41               	movlw	65
   614  007A1A  6E1E               	movwf	wait00@k+3,c
   615  007A1C  ECBF  F03D         	call	_wait00	;wreg free
   616  007A20  0012               	return		;funcret
   617  007A22                     __end_of_straight:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           status	equ	0xFD8
   621                           
   622 ;; *************** function _small_right_down *****************
   623 ;; Defined at:
   624 ;;		line 27 in file "sample.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  2   31[None  ] int 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   638 ;;      Params:         0       0       0       0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; Hardware stack levels required when called:    2
   645 ;; This function calls:
   646 ;;		_wait00
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text2
   653  007B34                     __ptext2:
   654                           	opt stack 0
   655  007B34                     _small_right_down:
   656                           	opt stack 28
   657                           
   658                           ;sample.c: 28: PORTC=0x03;
   659                           
   660                           ;incstack = 0
   661  007B34  0E03               	movlw	3
   662  007B36  6E82               	movwf	3970,c	;volatile
   663                           
   664                           ;sample.c: 29: wait00(0.3);
   665  007B38  0E9A               	movlw	154
   666  007B3A  6E1B               	movwf	wait00@k,c
   667  007B3C  0E99               	movlw	153
   668  007B3E  6E1C               	movwf	wait00@k+1,c
   669  007B40  0E99               	movlw	153
   670  007B42  6E1D               	movwf	wait00@k+2,c
   671  007B44  0E3E               	movlw	62
   672  007B46  6E1E               	movwf	wait00@k+3,c
   673  007B48  ECBF  F03D         	call	_wait00	;wreg free
   674                           
   675                           ;sample.c: 30: PORTC=0x01;
   676  007B4C  0E01               	movlw	1
   677  007B4E  6E82               	movwf	3970,c	;volatile
   678                           
   679                           ;sample.c: 31: wait00(2);
   680  007B50  0E00               	movlw	0
   681  007B52  6E1B               	movwf	wait00@k,c
   682  007B54  0E00               	movlw	0
   683  007B56  6E1C               	movwf	wait00@k+1,c
   684  007B58  0E00               	movlw	0
   685  007B5A  6E1D               	movwf	wait00@k+2,c
   686  007B5C  0E40               	movlw	64
   687  007B5E  6E1E               	movwf	wait00@k+3,c
   688  007B60  ECBF  F03D         	call	_wait00	;wreg free
   689                           
   690                           ;sample.c: 32: PORTC=0x00;
   691  007B64  0E00               	movlw	0
   692  007B66  6E82               	movwf	3970,c	;volatile
   693                           
   694                           ;sample.c: 33: wait00(20);
   695  007B68  0E00               	movlw	0
   696  007B6A  6E1B               	movwf	wait00@k,c
   697  007B6C  0E00               	movlw	0
   698  007B6E  6E1C               	movwf	wait00@k+1,c
   699  007B70  0EA0               	movlw	160
   700  007B72  6E1D               	movwf	wait00@k+2,c
   701  007B74  0E41               	movlw	65
   702  007B76  6E1E               	movwf	wait00@k+3,c
   703  007B78  ECBF  F03D         	call	_wait00	;wreg free
   704  007B7C  0012               	return		;funcret
   705  007B7E                     __end_of_small_right_down:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           status	equ	0xFD8
   709                           
   710 ;; *************** function _small_left_down *****************
   711 ;; Defined at:
   712 ;;		line 45 in file "sample.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  2   37[None  ] int 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         0       0       0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    2
   733 ;; This function calls:
   734 ;;		_wait00
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text3
   741  007AEA                     __ptext3:
   742                           	opt stack 0
   743  007AEA                     _small_left_down:
   744                           	opt stack 28
   745                           
   746                           ;sample.c: 46: PORTC=0x03;
   747                           
   748                           ;incstack = 0
   749  007AEA  0E03               	movlw	3
   750  007AEC  6E82               	movwf	3970,c	;volatile
   751                           
   752                           ;sample.c: 47: wait00(0.3);
   753  007AEE  0E9A               	movlw	154
   754  007AF0  6E1B               	movwf	wait00@k,c
   755  007AF2  0E99               	movlw	153
   756  007AF4  6E1C               	movwf	wait00@k+1,c
   757  007AF6  0E99               	movlw	153
   758  007AF8  6E1D               	movwf	wait00@k+2,c
   759  007AFA  0E3E               	movlw	62
   760  007AFC  6E1E               	movwf	wait00@k+3,c
   761  007AFE  ECBF  F03D         	call	_wait00	;wreg free
   762                           
   763                           ;sample.c: 48: PORTC=0x02;
   764  007B02  0E02               	movlw	2
   765  007B04  6E82               	movwf	3970,c	;volatile
   766                           
   767                           ;sample.c: 49: wait00(2);
   768  007B06  0E00               	movlw	0
   769  007B08  6E1B               	movwf	wait00@k,c
   770  007B0A  0E00               	movlw	0
   771  007B0C  6E1C               	movwf	wait00@k+1,c
   772  007B0E  0E00               	movlw	0
   773  007B10  6E1D               	movwf	wait00@k+2,c
   774  007B12  0E40               	movlw	64
   775  007B14  6E1E               	movwf	wait00@k+3,c
   776  007B16  ECBF  F03D         	call	_wait00	;wreg free
   777                           
   778                           ;sample.c: 50: PORTC=0x00;
   779  007B1A  0E00               	movlw	0
   780  007B1C  6E82               	movwf	3970,c	;volatile
   781                           
   782                           ;sample.c: 51: wait00(20);
   783  007B1E  0E00               	movlw	0
   784  007B20  6E1B               	movwf	wait00@k,c
   785  007B22  0E00               	movlw	0
   786  007B24  6E1C               	movwf	wait00@k+1,c
   787  007B26  0EA0               	movlw	160
   788  007B28  6E1D               	movwf	wait00@k+2,c
   789  007B2A  0E41               	movlw	65
   790  007B2C  6E1E               	movwf	wait00@k+3,c
   791  007B2E  ECBF  F03D         	call	_wait00	;wreg free
   792  007B32  0012               	return		;funcret
   793  007B34                     __end_of_small_left_down:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           status	equ	0xFD8
   797                           
   798 ;; *************** function _right_down *****************
   799 ;; Defined at:
   800 ;;		line 18 in file "sample.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;		None
   805 ;; Return value:  Size  Location     Type
   806 ;;                  2   28[None  ] int 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   814 ;;      Params:         0       0       0       0       0       0       0       0       0
   815 ;;      Locals:         0       0       0       0       0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0
   817 ;;      Totals:         0       0       0       0       0       0       0       0       0
   818 ;;Total ram usage:        0 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    2
   821 ;; This function calls:
   822 ;;		_wait00
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text4
   829  007AA0                     __ptext4:
   830                           	opt stack 0
   831  007AA0                     _right_down:
   832                           	opt stack 28
   833                           
   834                           ;sample.c: 19: PORTC=0x03;
   835                           
   836                           ;incstack = 0
   837  007AA0  0E03               	movlw	3
   838  007AA2  6E82               	movwf	3970,c	;volatile
   839                           
   840                           ;sample.c: 20: wait00(0.3);
   841  007AA4  0E9A               	movlw	154
   842  007AA6  6E1B               	movwf	wait00@k,c
   843  007AA8  0E99               	movlw	153
   844  007AAA  6E1C               	movwf	wait00@k+1,c
   845  007AAC  0E99               	movlw	153
   846  007AAE  6E1D               	movwf	wait00@k+2,c
   847  007AB0  0E3E               	movlw	62
   848  007AB2  6E1E               	movwf	wait00@k+3,c
   849  007AB4  ECBF  F03D         	call	_wait00	;wreg free
   850                           
   851                           ;sample.c: 21: PORTC=0x01;
   852  007AB8  0E01               	movlw	1
   853  007ABA  6E82               	movwf	3970,c	;volatile
   854                           
   855                           ;sample.c: 22: wait00(5);
   856  007ABC  0E00               	movlw	0
   857  007ABE  6E1B               	movwf	wait00@k,c
   858  007AC0  0E00               	movlw	0
   859  007AC2  6E1C               	movwf	wait00@k+1,c
   860  007AC4  0EA0               	movlw	160
   861  007AC6  6E1D               	movwf	wait00@k+2,c
   862  007AC8  0E40               	movlw	64
   863  007ACA  6E1E               	movwf	wait00@k+3,c
   864  007ACC  ECBF  F03D         	call	_wait00	;wreg free
   865                           
   866                           ;sample.c: 23: PORTC=0x00;
   867  007AD0  0E00               	movlw	0
   868  007AD2  6E82               	movwf	3970,c	;volatile
   869                           
   870                           ;sample.c: 24: wait00(20);
   871  007AD4  0E00               	movlw	0
   872  007AD6  6E1B               	movwf	wait00@k,c
   873  007AD8  0E00               	movlw	0
   874  007ADA  6E1C               	movwf	wait00@k+1,c
   875  007ADC  0EA0               	movlw	160
   876  007ADE  6E1D               	movwf	wait00@k+2,c
   877  007AE0  0E41               	movlw	65
   878  007AE2  6E1E               	movwf	wait00@k+3,c
   879  007AE4  ECBF  F03D         	call	_wait00	;wreg free
   880  007AE8  0012               	return		;funcret
   881  007AEA                     __end_of_right_down:
   882                           	opt stack 0
   883                           tblptru	equ	0xFF8
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _left_down *****************
   887 ;; Defined at:
   888 ;;		line 36 in file "sample.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   34[None  ] int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       0       0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    2
   909 ;; This function calls:
   910 ;;		_wait00
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text5
   917  007A56                     __ptext5:
   918                           	opt stack 0
   919  007A56                     _left_down:
   920                           	opt stack 28
   921                           
   922                           ;sample.c: 37: PORTC=0x03;
   923                           
   924                           ;incstack = 0
   925  007A56  0E03               	movlw	3
   926  007A58  6E82               	movwf	3970,c	;volatile
   927                           
   928                           ;sample.c: 38: wait00(0.3);
   929  007A5A  0E9A               	movlw	154
   930  007A5C  6E1B               	movwf	wait00@k,c
   931  007A5E  0E99               	movlw	153
   932  007A60  6E1C               	movwf	wait00@k+1,c
   933  007A62  0E99               	movlw	153
   934  007A64  6E1D               	movwf	wait00@k+2,c
   935  007A66  0E3E               	movlw	62
   936  007A68  6E1E               	movwf	wait00@k+3,c
   937  007A6A  ECBF  F03D         	call	_wait00	;wreg free
   938                           
   939                           ;sample.c: 39: PORTC=0x02;
   940  007A6E  0E02               	movlw	2
   941  007A70  6E82               	movwf	3970,c	;volatile
   942                           
   943                           ;sample.c: 40: wait00(5);
   944  007A72  0E00               	movlw	0
   945  007A74  6E1B               	movwf	wait00@k,c
   946  007A76  0E00               	movlw	0
   947  007A78  6E1C               	movwf	wait00@k+1,c
   948  007A7A  0EA0               	movlw	160
   949  007A7C  6E1D               	movwf	wait00@k+2,c
   950  007A7E  0E40               	movlw	64
   951  007A80  6E1E               	movwf	wait00@k+3,c
   952  007A82  ECBF  F03D         	call	_wait00	;wreg free
   953                           
   954                           ;sample.c: 41: PORTC=0x00;
   955  007A86  0E00               	movlw	0
   956  007A88  6E82               	movwf	3970,c	;volatile
   957                           
   958                           ;sample.c: 42: wait00(20);
   959  007A8A  0E00               	movlw	0
   960  007A8C  6E1B               	movwf	wait00@k,c
   961  007A8E  0E00               	movlw	0
   962  007A90  6E1C               	movwf	wait00@k+1,c
   963  007A92  0EA0               	movlw	160
   964  007A94  6E1D               	movwf	wait00@k+2,c
   965  007A96  0E41               	movlw	65
   966  007A98  6E1E               	movwf	wait00@k+3,c
   967  007A9A  ECBF  F03D         	call	_wait00	;wreg free
   968  007A9E  0012               	return		;funcret
   969  007AA0                     __end_of_left_down:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           status	equ	0xFD8
   973                           
   974 ;; *************** function _wait00 *****************
   975 ;; Defined at:
   976 ;;		line 7 in file "sample.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  k               4   26[COMRAM] float 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  i               2   32[COMRAM] short 
   981 ;;  j               2   30[COMRAM] short 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2   26[COMRAM] int 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         4       0       0       0       0       0       0       0       0
   992 ;;      Locals:         4       0       0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0
   994 ;;      Totals:         8       0       0       0       0       0       0       0       0
   995 ;;Total ram usage:        8 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    1
   998 ;; This function calls:
   999 ;;		___flge
  1000 ;;		___xxtofl
  1001 ;; This function is called by:
  1002 ;;		_right_down
  1003 ;;		_small_right_down
  1004 ;;		_left_down
  1005 ;;		_small_left_down
  1006 ;;		_straight
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011  007B7E                     __ptext6:
  1012                           	opt stack 0
  1013  007B7E                     _wait00:
  1014                           	opt stack 28
  1015                           
  1016                           ;sample.c: 10: short i;
  1017                           ;sample.c: 11: short j;
  1018                           ;sample.c: 12: for(j=0;j<k;j++){
  1019                           
  1020                           ;incstack = 0
  1021  007B7E  0E00               	movlw	0
  1022  007B80  6E20               	movwf	wait00@j+1,c
  1023  007B82  0E00               	movlw	0
  1024  007B84  6E1F               	movwf	wait00@j,c
  1025  007B86  D011               	goto	l21
  1026  007B88                     
  1027                           ;sample.c: 13: for(i=0;i<3000;i++){
  1028  007B88  0E00               	movlw	0
  1029  007B8A  6E22               	movwf	wait00@i+1,c
  1030  007B8C  0E00               	movlw	0
  1031  007B8E  6E21               	movwf	wait00@i,c
  1032  007B90                     l984:
  1033  007B90  BE22               	btfsc	wait00@i+1,7,c
  1034  007B92  D006               	goto	l23
  1035  007B94  0EB8               	movlw	184
  1036  007B96  5C21               	subwf	wait00@i,w,c
  1037  007B98  0E0B               	movlw	11
  1038  007B9A  5822               	subwfb	wait00@i+1,w,c
  1039  007B9C  B0D8               	btfsc	status,0,c
  1040  007B9E  D003               	goto	u460
  1041  007BA0                     l23:
  1042  007BA0  4A21               	infsnz	wait00@i,f,c
  1043  007BA2  2A22               	incf	wait00@i+1,f,c
  1044  007BA4  D7F5               	goto	l984
  1045  007BA6                     u460:
  1046  007BA6  4A1F               	infsnz	wait00@j,f,c
  1047  007BA8  2A20               	incf	wait00@j+1,f,c
  1048  007BAA                     l21:
  1049  007BAA  C01F  F001         	movff	wait00@j,___xxtofl@val
  1050  007BAE  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1051  007BB2  0E00               	movlw	0
  1052  007BB4  BE02               	btfsc	___xxtofl@val+1,7,c
  1053  007BB6  0EFF               	movlw	-1
  1054  007BB8  6E03               	movwf	___xxtofl@val+2,c
  1055  007BBA  6E04               	movwf	___xxtofl@val+3,c
  1056  007BBC  0E01               	movlw	1
  1057  007BBE  EC86  F03E         	call	___xxtofl
  1058  007BC2  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1059  007BC6  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1060  007BCA  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1061  007BCE  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1062  007BD2  C01B  F013         	movff	wait00@k,___flge@ff2
  1063  007BD6  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1064  007BDA  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1065  007BDE  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1066  007BE2  ECF6  F03D         	call	___flge	;wreg free
  1067  007BE6  B0D8               	btfsc	status,0,c
  1068  007BE8  0012               	return	
  1069  007BEA  D7CE               	goto	l22
  1070  007BEC                     __end_of_wait00:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function ___xxtofl *****************
  1076 ;; Defined at:
  1077 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  sign            1    wreg     unsigned char 
  1080 ;;  val             4    0[COMRAM] long 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  sign            1    8[COMRAM] unsigned char 
  1083 ;;  arg             4   10[COMRAM] unsigned long 
  1084 ;;  exp             1    9[COMRAM] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  4    0[COMRAM] unsigned char 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         4       0       0       0       0       0       0       0       0
  1095 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1096 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1097 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1098 ;;Total ram usage:       14 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_wait00
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text7
  1108  007D0C                     __ptext7:
  1109                           	opt stack 0
  1110  007D0C                     ___xxtofl:
  1111                           	opt stack 28
  1112                           
  1113                           ;incstack = 0
  1114                           ;___xxtofl@sign stored from wreg
  1115  007D0C  6E09               	movwf	___xxtofl@sign,c
  1116  007D0E  5009               	movf	___xxtofl@sign,w,c
  1117  007D10  A4D8               	btfss	status,2,c
  1118  007D12  AE04               	btfss	___xxtofl@val+3,7,c
  1119  007D14  D01A               	goto	l638
  1120  007D16  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1121  007D1A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1122  007D1E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1123  007D22  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1124  007D26  1E05               	comf	??___xxtofl,f,c
  1125  007D28  1E06               	comf	??___xxtofl+1,f,c
  1126  007D2A  1E07               	comf	??___xxtofl+2,f,c
  1127  007D2C  1E08               	comf	??___xxtofl+3,f,c
  1128  007D2E  2A05               	incf	??___xxtofl,f,c
  1129  007D30  0E00               	movlw	0
  1130  007D32  2206               	addwfc	??___xxtofl+1,f,c
  1131  007D34  2207               	addwfc	??___xxtofl+2,f,c
  1132  007D36  2208               	addwfc	??___xxtofl+3,f,c
  1133  007D38  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1134  007D3C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1135  007D40  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1136  007D44  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1137  007D48  D008               	goto	l639
  1138  007D4A                     l638:
  1139  007D4A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1140  007D4E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1141  007D52  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1142  007D56  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1143  007D5A                     l639:
  1144  007D5A  5001               	movf	___xxtofl@val,w,c
  1145  007D5C  1002               	iorwf	___xxtofl@val+1,w,c
  1146  007D5E  1003               	iorwf	___xxtofl@val+2,w,c
  1147  007D60  1004               	iorwf	___xxtofl@val+3,w,c
  1148  007D62  A4D8               	btfss	status,2,c
  1149  007D64  D009               	goto	l640
  1150  007D66  0E00               	movlw	0
  1151  007D68  6E01               	movwf	?___xxtofl,c
  1152  007D6A  0E00               	movlw	0
  1153  007D6C  6E02               	movwf	?___xxtofl+1,c
  1154  007D6E  0E00               	movlw	0
  1155  007D70  6E03               	movwf	?___xxtofl+2,c
  1156  007D72  0E00               	movlw	0
  1157  007D74  6E04               	movwf	?___xxtofl+3,c
  1158  007D76  0012               	return	
  1159  007D78                     l640:
  1160  007D78  0E96               	movlw	150
  1161  007D7A  6E0A               	movwf	___xxtofl@exp,c
  1162  007D7C  D006               	goto	l642
  1163  007D7E  2A0A               	incf	___xxtofl@exp,f,c
  1164  007D80  90D8               	bcf	status,0,c
  1165  007D82  320E               	rrcf	___xxtofl@arg+3,f,c
  1166  007D84  320D               	rrcf	___xxtofl@arg+2,f,c
  1167  007D86  320C               	rrcf	___xxtofl@arg+1,f,c
  1168  007D88  320B               	rrcf	___xxtofl@arg,f,c
  1169  007D8A                     l642:
  1170  007D8A  0E00               	movlw	0
  1171  007D8C  140B               	andwf	___xxtofl@arg,w,c
  1172  007D8E  6E05               	movwf	??___xxtofl& (0+255),c
  1173  007D90  0E00               	movlw	0
  1174  007D92  140C               	andwf	___xxtofl@arg+1,w,c
  1175  007D94  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1176  007D96  0E00               	movlw	0
  1177  007D98  140D               	andwf	___xxtofl@arg+2,w,c
  1178  007D9A  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1179  007D9C  0EFE               	movlw	254
  1180  007D9E  140E               	andwf	___xxtofl@arg+3,w,c
  1181  007DA0  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1182  007DA2  5005               	movf	??___xxtofl,w,c
  1183  007DA4  1006               	iorwf	??___xxtofl+1,w,c
  1184  007DA6  1007               	iorwf	??___xxtofl+2,w,c
  1185  007DA8  1008               	iorwf	??___xxtofl+3,w,c
  1186  007DAA  B4D8               	btfsc	status,2,c
  1187  007DAC  D00D               	goto	l645
  1188  007DAE  D7E7               	goto	l643
  1189  007DB0  2A0A               	incf	___xxtofl@exp,f,c
  1190  007DB2  0E01               	movlw	1
  1191  007DB4  260B               	addwf	___xxtofl@arg,f,c
  1192  007DB6  0E00               	movlw	0
  1193  007DB8  220C               	addwfc	___xxtofl@arg+1,f,c
  1194  007DBA  220D               	addwfc	___xxtofl@arg+2,f,c
  1195  007DBC  220E               	addwfc	___xxtofl@arg+3,f,c
  1196  007DBE  90D8               	bcf	status,0,c
  1197  007DC0  320E               	rrcf	___xxtofl@arg+3,f,c
  1198  007DC2  320D               	rrcf	___xxtofl@arg+2,f,c
  1199  007DC4  320C               	rrcf	___xxtofl@arg+1,f,c
  1200  007DC6  320B               	rrcf	___xxtofl@arg,f,c
  1201  007DC8                     l645:
  1202  007DC8  0E00               	movlw	0
  1203  007DCA  140B               	andwf	___xxtofl@arg,w,c
  1204  007DCC  6E05               	movwf	??___xxtofl& (0+255),c
  1205  007DCE  0E00               	movlw	0
  1206  007DD0  140C               	andwf	___xxtofl@arg+1,w,c
  1207  007DD2  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1208  007DD4  0E00               	movlw	0
  1209  007DD6  140D               	andwf	___xxtofl@arg+2,w,c
  1210  007DD8  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1211  007DDA  0EFF               	movlw	255
  1212  007DDC  140E               	andwf	___xxtofl@arg+3,w,c
  1213  007DDE  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1214  007DE0  5005               	movf	??___xxtofl,w,c
  1215  007DE2  1006               	iorwf	??___xxtofl+1,w,c
  1216  007DE4  1007               	iorwf	??___xxtofl+2,w,c
  1217  007DE6  1008               	iorwf	??___xxtofl+3,w,c
  1218  007DE8  B4D8               	btfsc	status,2,c
  1219  007DEA  D007               	goto	l648
  1220  007DEC  D7E1               	goto	l646
  1221  007DEE  060A               	decf	___xxtofl@exp,f,c
  1222  007DF0  90D8               	bcf	status,0,c
  1223  007DF2  360B               	rlcf	___xxtofl@arg,f,c
  1224  007DF4  360C               	rlcf	___xxtofl@arg+1,f,c
  1225  007DF6  360D               	rlcf	___xxtofl@arg+2,f,c
  1226  007DF8  360E               	rlcf	___xxtofl@arg+3,f,c
  1227  007DFA                     l648:
  1228  007DFA  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1229  007DFC  D003               	goto	u410
  1230  007DFE  0E02               	movlw	2
  1231  007E00  600A               	cpfslt	___xxtofl@exp,c
  1232  007E02  D7F5               	goto	l649
  1233  007E04                     u410:
  1234  007E04  B00A               	btfsc	___xxtofl@exp,0,c
  1235  007E06  D008               	goto	l653
  1236  007E08  0EFF               	movlw	255
  1237  007E0A  160B               	andwf	___xxtofl@arg,f,c
  1238  007E0C  0EFF               	movlw	255
  1239  007E0E  160C               	andwf	___xxtofl@arg+1,f,c
  1240  007E10  0E7F               	movlw	127
  1241  007E12  160D               	andwf	___xxtofl@arg+2,f,c
  1242  007E14  0EFF               	movlw	255
  1243  007E16  160E               	andwf	___xxtofl@arg+3,f,c
  1244  007E18                     l653:
  1245  007E18  90D8               	bcf	status,0,c
  1246  007E1A  320A               	rrcf	___xxtofl@exp,f,c
  1247  007E1C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1248  007E20  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1249  007E22  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1250  007E24  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1251  007E26  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1252  007E2A  6A07               	clrf	??___xxtofl+2,c
  1253  007E2C  6A06               	clrf	??___xxtofl+1,c
  1254  007E2E  6A05               	clrf	??___xxtofl,c
  1255  007E30  5005               	movf	??___xxtofl,w,c
  1256  007E32  120B               	iorwf	___xxtofl@arg,f,c
  1257  007E34  5006               	movf	??___xxtofl+1,w,c
  1258  007E36  120C               	iorwf	___xxtofl@arg+1,f,c
  1259  007E38  5007               	movf	??___xxtofl+2,w,c
  1260  007E3A  120D               	iorwf	___xxtofl@arg+2,f,c
  1261  007E3C  5008               	movf	??___xxtofl+3,w,c
  1262  007E3E  120E               	iorwf	___xxtofl@arg+3,f,c
  1263  007E40  5009               	movf	___xxtofl@sign,w,c
  1264  007E42  A4D8               	btfss	status,2,c
  1265  007E44  AE04               	btfss	___xxtofl@val+3,7,c
  1266  007E46  D001               	goto	l654
  1267  007E48  8E0E               	bsf	___xxtofl@arg+3,7,c
  1268  007E4A                     l654:
  1269  007E4A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1270  007E4E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1271  007E52  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1272  007E56  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1273  007E5A  0012               	return	
  1274  007E5C                     __end_of___xxtofl:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function ___flge *****************
  1280 ;; Defined at:
  1281 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  ff1             4   14[COMRAM] unsigned char 
  1284 ;;  ff2             4   18[COMRAM] unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         8       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1299 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:       12 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_wait00
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text8
  1310  007BEC                     __ptext8:
  1311                           	opt stack 0
  1312  007BEC                     ___flge:
  1313                           	opt stack 28
  1314                           
  1315                           ;incstack = 0
  1316  007BEC  0E00               	movlw	0
  1317  007BEE  140F               	andwf	___flge@ff1,w,c
  1318  007BF0  6E17               	movwf	??___flge& (0+255),c
  1319  007BF2  0E00               	movlw	0
  1320  007BF4  1410               	andwf	___flge@ff1+1,w,c
  1321  007BF6  6E18               	movwf	(??___flge+1)& (0+255),c
  1322  007BF8  0E80               	movlw	128
  1323  007BFA  1411               	andwf	___flge@ff1+2,w,c
  1324  007BFC  6E19               	movwf	(??___flge+2)& (0+255),c
  1325  007BFE  0E7F               	movlw	127
  1326  007C00  1412               	andwf	___flge@ff1+3,w,c
  1327  007C02  6E1A               	movwf	(??___flge+3)& (0+255),c
  1328  007C04  5017               	movf	??___flge,w,c
  1329  007C06  1018               	iorwf	??___flge+1,w,c
  1330  007C08  1019               	iorwf	??___flge+2,w,c
  1331  007C0A  101A               	iorwf	??___flge+3,w,c
  1332  007C0C  A4D8               	btfss	status,2,c
  1333  007C0E  D008               	goto	l290
  1334  007C10  0E00               	movlw	0
  1335  007C12  6E0F               	movwf	___flge@ff1,c
  1336  007C14  0E00               	movlw	0
  1337  007C16  6E10               	movwf	___flge@ff1+1,c
  1338  007C18  0E00               	movlw	0
  1339  007C1A  6E11               	movwf	___flge@ff1+2,c
  1340  007C1C  0E00               	movlw	0
  1341  007C1E  6E12               	movwf	___flge@ff1+3,c
  1342  007C20                     l290:
  1343  007C20  0E00               	movlw	0
  1344  007C22  1413               	andwf	___flge@ff2,w,c
  1345  007C24  6E17               	movwf	??___flge& (0+255),c
  1346  007C26  0E00               	movlw	0
  1347  007C28  1414               	andwf	___flge@ff2+1,w,c
  1348  007C2A  6E18               	movwf	(??___flge+1)& (0+255),c
  1349  007C2C  0E80               	movlw	128
  1350  007C2E  1415               	andwf	___flge@ff2+2,w,c
  1351  007C30  6E19               	movwf	(??___flge+2)& (0+255),c
  1352  007C32  0E7F               	movlw	127
  1353  007C34  1416               	andwf	___flge@ff2+3,w,c
  1354  007C36  6E1A               	movwf	(??___flge+3)& (0+255),c
  1355  007C38  5017               	movf	??___flge,w,c
  1356  007C3A  1018               	iorwf	??___flge+1,w,c
  1357  007C3C  1019               	iorwf	??___flge+2,w,c
  1358  007C3E  101A               	iorwf	??___flge+3,w,c
  1359  007C40  A4D8               	btfss	status,2,c
  1360  007C42  D008               	goto	l291
  1361  007C44  0E00               	movlw	0
  1362  007C46  6E13               	movwf	___flge@ff2,c
  1363  007C48  0E00               	movlw	0
  1364  007C4A  6E14               	movwf	___flge@ff2+1,c
  1365  007C4C  0E00               	movlw	0
  1366  007C4E  6E15               	movwf	___flge@ff2+2,c
  1367  007C50  0E00               	movlw	0
  1368  007C52  6E16               	movwf	___flge@ff2+3,c
  1369  007C54                     l291:
  1370  007C54  AE12               	btfss	___flge@ff1+3,7,c
  1371  007C56  D01D               	goto	l292
  1372  007C58  C00F  F017         	movff	___flge@ff1,??___flge
  1373  007C5C  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1374  007C60  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1375  007C64  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1376  007C68  1E17               	comf	??___flge,f,c
  1377  007C6A  1E18               	comf	??___flge+1,f,c
  1378  007C6C  1E19               	comf	??___flge+2,f,c
  1379  007C6E  1E1A               	comf	??___flge+3,f,c
  1380  007C70  2A17               	incf	??___flge,f,c
  1381  007C72  0E00               	movlw	0
  1382  007C74  2218               	addwfc	??___flge+1,f,c
  1383  007C76  2219               	addwfc	??___flge+2,f,c
  1384  007C78  221A               	addwfc	??___flge+3,f,c
  1385  007C7A  0E00               	movlw	0
  1386  007C7C  2417               	addwf	??___flge,w,c
  1387  007C7E  6E0F               	movwf	___flge@ff1,c
  1388  007C80  0E00               	movlw	0
  1389  007C82  2018               	addwfc	??___flge+1,w,c
  1390  007C84  6E10               	movwf	___flge@ff1+1,c
  1391  007C86  0E00               	movlw	0
  1392  007C88  2019               	addwfc	??___flge+2,w,c
  1393  007C8A  6E11               	movwf	___flge@ff1+2,c
  1394  007C8C  0E80               	movlw	128
  1395  007C8E  201A               	addwfc	??___flge+3,w,c
  1396  007C90  6E12               	movwf	___flge@ff1+3,c
  1397  007C92                     l292:
  1398  007C92  AE16               	btfss	___flge@ff2+3,7,c
  1399  007C94  D01D               	goto	l293
  1400  007C96  C013  F017         	movff	___flge@ff2,??___flge
  1401  007C9A  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1402  007C9E  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1403  007CA2  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1404  007CA6  1E17               	comf	??___flge,f,c
  1405  007CA8  1E18               	comf	??___flge+1,f,c
  1406  007CAA  1E19               	comf	??___flge+2,f,c
  1407  007CAC  1E1A               	comf	??___flge+3,f,c
  1408  007CAE  2A17               	incf	??___flge,f,c
  1409  007CB0  0E00               	movlw	0
  1410  007CB2  2218               	addwfc	??___flge+1,f,c
  1411  007CB4  2219               	addwfc	??___flge+2,f,c
  1412  007CB6  221A               	addwfc	??___flge+3,f,c
  1413  007CB8  0E00               	movlw	0
  1414  007CBA  2417               	addwf	??___flge,w,c
  1415  007CBC  6E13               	movwf	___flge@ff2,c
  1416  007CBE  0E00               	movlw	0
  1417  007CC0  2018               	addwfc	??___flge+1,w,c
  1418  007CC2  6E14               	movwf	___flge@ff2+1,c
  1419  007CC4  0E00               	movlw	0
  1420  007CC6  2019               	addwfc	??___flge+2,w,c
  1421  007CC8  6E15               	movwf	___flge@ff2+2,c
  1422  007CCA  0E80               	movlw	128
  1423  007CCC  201A               	addwfc	??___flge+3,w,c
  1424  007CCE  6E16               	movwf	___flge@ff2+3,c
  1425  007CD0                     l293:
  1426  007CD0  0E00               	movlw	0
  1427  007CD2  1A0F               	xorwf	___flge@ff1,f,c
  1428  007CD4  0E00               	movlw	0
  1429  007CD6  1A10               	xorwf	___flge@ff1+1,f,c
  1430  007CD8  0E00               	movlw	0
  1431  007CDA  1A11               	xorwf	___flge@ff1+2,f,c
  1432  007CDC  0E80               	movlw	128
  1433  007CDE  1A12               	xorwf	___flge@ff1+3,f,c
  1434  007CE0  0E00               	movlw	0
  1435  007CE2  1A13               	xorwf	___flge@ff2,f,c
  1436  007CE4  0E00               	movlw	0
  1437  007CE6  1A14               	xorwf	___flge@ff2+1,f,c
  1438  007CE8  0E00               	movlw	0
  1439  007CEA  1A15               	xorwf	___flge@ff2+2,f,c
  1440  007CEC  0E80               	movlw	128
  1441  007CEE  1A16               	xorwf	___flge@ff2+3,f,c
  1442  007CF0  5013               	movf	___flge@ff2,w,c
  1443  007CF2  5C0F               	subwf	___flge@ff1,w,c
  1444  007CF4  5014               	movf	___flge@ff2+1,w,c
  1445  007CF6  5810               	subwfb	___flge@ff1+1,w,c
  1446  007CF8  5015               	movf	___flge@ff2+2,w,c
  1447  007CFA  5811               	subwfb	___flge@ff1+2,w,c
  1448  007CFC  5016               	movf	___flge@ff2+3,w,c
  1449  007CFE  5812               	subwfb	___flge@ff1+3,w,c
  1450  007D00  B0D8               	btfsc	status,0,c
  1451  007D02  D002               	goto	l912
  1452  007D04  90D8               	bcf	status,0,c
  1453  007D06  0012               	return	
  1454  007D08                     l912:
  1455  007D08  80D8               	bsf	status,0,c
  1456  007D0A  0012               	return	
  1457  007D0C                     __end_of___flge:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _led_sens *****************
  1463 ;; Defined at:
  1464 ;;		line 61 in file "sample.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2   43[None  ] int 
  1471 ;; Registers used:
  1472 ;;		None
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1481 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1482 ;;Total ram usage:        0 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text9
  1492  007A22                     __ptext9:
  1493                           	opt stack 0
  1494  007A22                     _led_sens:
  1495                           	opt stack 30
  1496                           
  1497                           ;sample.c: 63: PORTAbits.RA0 = PORTBbits.RB0;
  1498                           
  1499                           ;incstack = 0
  1500  007A22  A081               	btfss	3969,0,c	;volatile
  1501  007A24  D002               	bra	u195
  1502  007A26  8080               	bsf	3968,0,c	;volatile
  1503  007A28  D001               	bra	u197
  1504  007A2A                     u195:
  1505  007A2A  9080               	bcf	3968,0,c	;volatile
  1506  007A2C                     u197:
  1507                           
  1508                           ;sample.c: 64: PORTAbits.RA1 = PORTBbits.RB1;
  1509  007A2C  A281               	btfss	3969,1,c	;volatile
  1510  007A2E  D002               	bra	u205
  1511  007A30  8280               	bsf	3968,1,c	;volatile
  1512  007A32  D001               	bra	u207
  1513  007A34                     u205:
  1514  007A34  9280               	bcf	3968,1,c	;volatile
  1515  007A36                     u207:
  1516                           
  1517                           ;sample.c: 65: PORTAbits.RA2 = PORTBbits.RB2;
  1518  007A36  A481               	btfss	3969,2,c	;volatile
  1519  007A38  D002               	bra	u215
  1520  007A3A  8480               	bsf	3968,2,c	;volatile
  1521  007A3C  D001               	bra	u217
  1522  007A3E                     u215:
  1523  007A3E  9480               	bcf	3968,2,c	;volatile
  1524  007A40                     u217:
  1525                           
  1526                           ;sample.c: 66: PORTAbits.RA3 = PORTBbits.RB3;
  1527  007A40  A681               	btfss	3969,3,c	;volatile
  1528  007A42  D002               	bra	u225
  1529  007A44  8680               	bsf	3968,3,c	;volatile
  1530  007A46  D001               	bra	u227
  1531  007A48                     u225:
  1532  007A48  9680               	bcf	3968,3,c	;volatile
  1533  007A4A                     u227:
  1534                           
  1535                           ;sample.c: 67: PORTAbits.RA4 = PORTBbits.RB4;
  1536  007A4A  A881               	btfss	3969,4,c	;volatile
  1537  007A4C  D002               	bra	u235
  1538  007A4E  8880               	bsf	3968,4,c	;volatile
  1539  007A50  D001               	bra	u237
  1540  007A52                     u235:
  1541  007A52  9880               	bcf	3968,4,c	;volatile
  1542  007A54                     u237:
  1543  007A54  0012               	return		;funcret
  1544  007A56                     __end_of_led_sens:
  1545                           	opt stack 0
  1546  0000                     tblptru	equ	0xFF8
  1547                           status	equ	0xFD8
  1548                           tblptru	equ	0xFF8
  1549                           status	equ	0xFD8
  1550                           
  1551                           	psect	rparam
  1552  0000                     tblptru	equ	0xFF8
  1553                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    9537
                                             34 COMRAM     5     5      0
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1888
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     27      27       1       41.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 27 17:34:43 2018

                       l21 7BAA                         l22 7B88                         l23 7BA0  
                       l50 7E78                         l53 7F3C                         l61 7EEA  
                       l70 7F02                         l62 7EF0                         l54 7ECC  
                       l71 7F08                         l63 7EF6                         l72 7F0E  
                       l56 7ED2                         l57 7ED8                         l49 7E7C  
                       l82 7F20                         l58 7EDE                         l83 7F26  
                       l59 7EE4                         l84 7F2C                         l85 7F32  
                       l69 7EFC                         l86 7F36                         l78 7F14  
                       l79 7F1A                        l290 7C20                        l291 7C54  
                      l292 7C92                        l293 7CD0                        l640 7D78  
                      l642 7D8A                        l643 7D7E                        l653 7E18  
                      l645 7DC8                        l654 7E4A                        l646 7DB0  
                      l638 7D4A                        l639 7D5A                        l912 7D08  
                      l648 7DFA                        l649 7DEE                        l984 7B90  
                      u205 7A34                        u215 7A3E                        u207 7A36  
                      u225 7A48                        u217 7A40                        u410 7E04  
                      u235 7A52                        u227 7A4A                        u500 7E9A  
                      u237 7A54                        u510 7EA8                        u520 7EB6  
                      u530 7EC4                        u506 7E9C                        u195 7A2A  
                      u460 7BA6                        u516 7EAA                        u197 7A2C  
                      u526 7EB8                        u536 7EC6                        u480 7E80  
                      u490 7E8C                        u496 7E8E                       _main 7E5C  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 004A            _small_left_down 7AEA                      status 000FD8  
          __initialization 79E6               __end_of_main 8000                     ??_main 0023  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of___xxtofl 7E5C  
                   ___flge 7BEC           __end_of_led_sens 7A56                     _wait00 7B7E  
                   tblptru 000FF8    __end_of_small_left_down 7B34           __end_of_straight 7A22  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 79E6              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _small_right_down 7B34         __size_of_left_down 004A                    ?___flge 000F  
           main@led_result 0023                    ?_wait00 001B                  ?___xxtofl 0001  
         ?_small_left_down 0001                  ?_led_sens 0001                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0120                  ?_straight 0001  
                  __pcinit 79E6                    __ramtop 0800            __size_of_wait00 006E  
        __end_of_left_down 7AA0                    __ptext0 7E5C                    __ptext1 79F0  
                  __ptext2 7B34                    __ptext3 7AEA                    __ptext4 7AA0  
                  __ptext5 7A56                    __ptext6 7B7E                    __ptext7 7D0C  
                  __ptext8 7BEC                    __ptext9 7A22                 ??___xxtofl 0005  
     end_of_initialization 79E6                 ??_led_sens 0001              __Lmediumconst 0000  
                  wait00@i 0021                    wait00@j 001F                    wait00@k 001B  
               _right_down 7AA0                 ??_straight 0023                  _PORTAbits 000F80  
                _PORTBbits 000F81              ___xxtofl@sign 0009   __end_of_small_right_down 7B7E  
           __end_of___flge 7D0C             __end_of_wait00 7BEC        start_initialization 79E6  
              ?_right_down 0001                   ??___flge 0017                   ??_wait00 001F  
        __size_of___xxtofl 0150          __size_of_led_sens 0034          __size_of_straight 0032  
                _left_down 7A56        __size_of_right_down 004A   __size_of_small_left_down 004A  
               ?_left_down 0001                   __Hrparam 0000                   __Lrparam 0000  
        ?_small_right_down 0001         ??_small_right_down 0023                   ___xxtofl 7D0C  
                 _led_sens 7A22              __size_of_main 01A4               ??_right_down 0023  
        ??_small_left_down 0023                   _straight 79F0                ??_left_down 0023  
       __end_of_right_down 7AEA  
