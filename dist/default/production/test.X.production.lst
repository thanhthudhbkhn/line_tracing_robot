

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 01 14:57:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 1.45
    21                           ; Generated 16/11/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F2553 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _PORTB	set	3969
    55  0000                     _PORTA	set	3968
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISA	set	3986
    59  0000                     _ADCON1	set	4033
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _PORTC	set	3970
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  0079FC                     __pcinit:
    68                           	opt stack 0
    69  0079FC                     start_initialization:
    70                           	opt stack 0
    71  0079FC                     __initialization:
    72                           	opt stack 0
    73  0079FC                     end_of_initialization:
    74                           	opt stack 0
    75  0079FC                     __end_of__initialization:
    76                           	opt stack 0
    77  0079FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  0079FE  6EF8               	movwf	tblptru,c
    79  007A00  0100               	movlb	0
    80  007A02  EF39  F03F         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	opt stack 0
    86  000001                     ?___xxtofl:
    87                           	opt stack 0
    88  000001                     ___xxtofl@val:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x0
    92  000001                     	ds	4
    93  000005                     ??___xxtofl:
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___xxtofl@sign:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x8
   101  000009                     	ds	1
   102  00000A                     ___xxtofl@exp:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x9
   106  00000A                     	ds	1
   107  00000B                     ___xxtofl@arg:
   108                           	opt stack 0
   109                           
   110                           ; 4 bytes @ 0xA
   111  00000B                     	ds	4
   112  00000F                     ___flge@ff1:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xE
   116  00000F                     	ds	4
   117  000013                     ___flge@ff2:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x12
   121  000013                     	ds	4
   122  000017                     ??___flge:
   123                           
   124                           ; 1 bytes @ 0x16
   125  000017                     	ds	4
   126  00001B                     wait00@k:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x1A
   130  00001B                     	ds	4
   131  00001F                     wait00@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1E
   135  00001F                     	ds	2
   136  000021                     wait00@i:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x20
   140  000021                     	ds	2
   141  000023                     main@background:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x22
   145  000023                     	ds	2
   146  000025                     main@status:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x24
   150  000025                     	ds	2
   151                           tblptru	equ	0xFF8
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 72 in file "sample.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  status          2   36[COMRAM] int 
   163 ;;  background      2   34[COMRAM] int 
   164 ;; Return value:  Size  Location     Type
   165 ;;                  2   48[None  ] int 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   173 ;;      Params:         0       0       0       0       0       0       0       0       0
   174 ;;      Locals:         4       0       0       0       0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0
   176 ;;      Totals:         4       0       0       0       0       0       0       0       0
   177 ;;Total ram usage:        4 bytes
   178 ;; Hardware stack levels required when called:    3
   179 ;; This function calls:
   180 ;;		_led_sens
   181 ;;		_left_down
   182 ;;		_right_down
   183 ;;		_small_left_down
   184 ;;		_small_right_down
   185 ;;		_straight
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  007E72                     __ptext0:
   193                           	opt stack 0
   194  007E72                     _main:
   195                           	opt stack 28
   196                           
   197                           ;sample.c: 74: int background = -1;
   198                           
   199                           ;incstack = 0
   200  007E72  6823               	setf	main@background,c
   201  007E74  6824               	setf	main@background+1,c
   202                           
   203                           ;sample.c: 75: int status = -1;
   204  007E76  6825               	setf	main@status,c
   205  007E78  6826               	setf	main@status+1,c
   206                           
   207                           ;sample.c: 77: ADCON1 = 0x0F;
   208  007E7A  0E0F               	movlw	15
   209  007E7C  6EC1               	movwf	4033,c	;volatile
   210                           
   211                           ;sample.c: 80: TRISA = 0x20;
   212  007E7E  0E20               	movlw	32
   213  007E80  6E92               	movwf	3986,c	;volatile
   214                           
   215                           ;sample.c: 81: TRISB = 0xFF;
   216  007E82  6893               	setf	3987,c	;volatile
   217                           
   218                           ;sample.c: 82: TRISC = 0x00;
   219  007E84  0E00               	movlw	0
   220  007E86  6E94               	movwf	3988,c	;volatile
   221                           
   222                           ;sample.c: 85: PORTA = 0x00;
   223  007E88  0E00               	movlw	0
   224  007E8A  6E80               	movwf	3968,c	;volatile
   225                           
   226                           ;sample.c: 86: PORTB = 0x00;
   227  007E8C  0E00               	movlw	0
   228  007E8E  6E81               	movwf	3969,c	;volatile
   229                           
   230                           ;sample.c: 87: PORTC = 0x00;
   231  007E90  0E00               	movlw	0
   232  007E92  6E82               	movwf	3970,c	;volatile
   233                           
   234                           ;sample.c: 90: while(PORTAbits.RA5==1){
   235  007E94  D002               	goto	l49
   236  007E96                     
   237                           ;sample.c: 91: led_sens();
   238  007E96  EC1C  F03D         	call	_led_sens	;wreg free
   239  007E9A                     l49:
   240  007E9A  BA80               	btfsc	3968,5,c	;volatile
   241  007E9C  D7FC               	goto	l50
   242  007E9E                     u430:
   243                           
   244                           ;sample.c: 97: led_sens();
   245                           
   246                           ;sample.c: 92: }
   247                           ;sample.c: 96: while(1){
   248  007E9E  EC1C  F03D         	call	_led_sens	;wreg free
   249                           
   250                           ;sample.c: 99: switch (PORTB) {
   251  007EA2  D04C               	goto	l53
   252  007EA4                     
   253                           ;sample.c: 101: straight();
   254  007EA4  EC03  F03D         	call	_straight	;wreg free
   255                           
   256                           ;sample.c: 102: break;
   257  007EA8  D7FA               	goto	u430
   258  007EAA                     
   259                           ;sample.c: 104: left_down();
   260  007EAA  EC36  F03D         	call	_left_down	;wreg free
   261                           
   262                           ;sample.c: 105: break;
   263  007EAE  D7F7               	goto	u430
   264  007EB0                     
   265                           ;sample.c: 107: small_left_down();
   266  007EB0  EC80  F03D         	call	_small_left_down	;wreg free
   267                           
   268                           ;sample.c: 108: break;
   269  007EB4  D7F4               	goto	u430
   270  007EB6                     
   271                           ;sample.c: 110: left_down();
   272  007EB6  EC36  F03D         	call	_left_down	;wreg free
   273                           
   274                           ;sample.c: 111: break;
   275  007EBA  D7F1               	goto	u430
   276  007EBC                     
   277                           ;sample.c: 113: straight();
   278  007EBC  EC03  F03D         	call	_straight	;wreg free
   279                           
   280                           ;sample.c: 115: case 0b00101: break;
   281                           
   282                           ;sample.c: 114: break;
   283  007EC0  D7EE               	goto	u430
   284  007EC2                     
   285                           ;sample.c: 117: straight();
   286  007EC2  EC03  F03D         	call	_straight	;wreg free
   287                           
   288                           ;sample.c: 118: break;
   289  007EC6  D7EB               	goto	u430
   290  007EC8                     
   291                           ;sample.c: 120: right_down();
   292  007EC8  EC5B  F03D         	call	_right_down	;wreg free
   293                           
   294                           ;sample.c: 121: break;
   295  007ECC  D7E8               	goto	u430
   296  007ECE                     
   297                           ;sample.c: 123: small_right_down();
   298  007ECE  ECA5  F03D         	call	_small_right_down	;wreg free
   299                           
   300                           ;sample.c: 127: case 0b01011: break;
   301                           
   302                           ;sample.c: 126: case 0b01010: break;
   303                           
   304                           ;sample.c: 125: case 0b01001: break;
   305                           
   306                           ;sample.c: 124: break;
   307  007ED2  D7E5               	goto	u430
   308  007ED4                     
   309                           ;sample.c: 129: straight();
   310  007ED4  EC03  F03D         	call	_straight	;wreg free
   311                           
   312                           ;sample.c: 131: case 0b01101: break;
   313                           
   314                           ;sample.c: 130: break;
   315  007ED8  D7E2               	goto	u430
   316  007EDA                     
   317                           ;sample.c: 133: straight();
   318  007EDA  EC03  F03D         	call	_straight	;wreg free
   319                           
   320                           ;sample.c: 134: break;
   321  007EDE  D7DF               	goto	u430
   322  007EE0                     
   323                           ;sample.c: 136: background = 1;
   324  007EE0  0E00               	movlw	0
   325  007EE2  6E24               	movwf	main@background+1,c
   326  007EE4  0E01               	movlw	1
   327  007EE6  6E23               	movwf	main@background,c
   328                           
   329                           ;sample.c: 137: right_down();
   330  007EE8  EC5B  F03D         	call	_right_down	;wreg free
   331                           
   332                           ;sample.c: 138: status = 2;
   333  007EEC  0E00               	movlw	0
   334  007EEE  6E26               	movwf	main@status+1,c
   335  007EF0  0E02               	movlw	2
   336  007EF2  6E25               	movwf	main@status,c
   337                           
   338                           ;sample.c: 139: break;
   339  007EF4  D7D4               	goto	u430
   340  007EF6                     
   341                           ;sample.c: 141: right_down();
   342  007EF6  EC5B  F03D         	call	_right_down	;wreg free
   343                           
   344                           ;sample.c: 142: break;
   345  007EFA  D7D1               	goto	u430
   346  007EFC                     
   347                           ;sample.c: 144: straight();
   348  007EFC  EC03  F03D         	call	_straight	;wreg free
   349                           
   350                           ;sample.c: 146: case 0b10010: break;
   351                           
   352                           ;sample.c: 145: break;
   353  007F00  D7CE               	goto	u430
   354  007F02                     
   355                           ;sample.c: 148: straight();
   356  007F02  EC03  F03D         	call	_straight	;wreg free
   357                           
   358                           ;sample.c: 152: case 0b10110: break;
   359                           
   360                           ;sample.c: 151: case 0b10101: break;
   361                           
   362                           ;sample.c: 150: case 0b10100: break;
   363                           
   364                           ;sample.c: 149: break;
   365  007F06  D7CB               	goto	u430
   366  007F08                     
   367                           ;sample.c: 154: small_right_down();
   368  007F08  ECA5  F03D         	call	_small_right_down	;wreg free
   369                           
   370                           ;sample.c: 155: break;
   371  007F0C  D7C8               	goto	u430
   372  007F0E                     
   373                           ;sample.c: 157: right_down();
   374  007F0E  EC5B  F03D         	call	_right_down	;wreg free
   375                           
   376                           ;sample.c: 158: break;
   377  007F12  D7C5               	goto	u430
   378  007F14                     
   379                           ;sample.c: 160: straight();
   380  007F14  EC03  F03D         	call	_straight	;wreg free
   381                           
   382                           ;sample.c: 162: case 0b11010: break;
   383                           
   384                           ;sample.c: 161: break;
   385  007F18  D7C2               	goto	u430
   386  007F1A                     
   387                           ;sample.c: 164: straight();
   388  007F1A  EC03  F03D         	call	_straight	;wreg free
   389                           
   390                           ;sample.c: 165: break;
   391  007F1E  D7BF               	goto	u430
   392  007F20                     
   393                           ;sample.c: 167: left_down();
   394  007F20  EC36  F03D         	call	_left_down	;wreg free
   395                           
   396                           ;sample.c: 168: break;
   397  007F24  D7BC               	goto	u430
   398  007F26                     
   399                           ;sample.c: 170: small_left_down();
   400  007F26  EC80  F03D         	call	_small_left_down	;wreg free
   401                           
   402                           ;sample.c: 171: break;
   403  007F2A  D7B9               	goto	u430
   404  007F2C                     
   405                           ;sample.c: 173: left_down();
   406  007F2C  EC36  F03D         	call	_left_down	;wreg free
   407  007F30                     l86:
   408                           
   409                           ;sample.c: 175: straight();
   410  007F30  EC03  F03D         	call	_straight	;wreg free
   411                           
   412                           ;sample.c: 176: break;
   413  007F34  D7B4               	goto	u430
   414  007F36                     
   415                           ;sample.c: 178: straight();
   416  007F36  EC03  F03D         	call	_straight	;wreg free
   417                           
   418                           ;sample.c: 180: }
   419                           
   420                           ;sample.c: 179: break;
   421  007F3A  D7B1               	goto	u430
   422  007F3C                     l53:
   423  007F3C  5081               	movf	3969,w,c	;volatile
   424                           
   425                           ; Switch size 1, requested type "space"
   426                           ; Number of cases is 32, Range of values is 0 to 31
   427                           ; switch strategies available:
   428                           ; Name         Instructions Cycles
   429                           ; simple_byte           97    49 (average)
   430                           ;	Chosen strategy is simple_byte
   431  007F3E  0A00               	xorlw	0	; case 0
   432  007F40  B4D8               	btfsc	status,2,c
   433  007F42  D7B0               	goto	l54
   434  007F44  0A01               	xorlw	1	; case 1
   435  007F46  B4D8               	btfsc	status,2,c
   436  007F48  D7B0               	goto	l56
   437  007F4A  0A03               	xorlw	3	; case 2
   438  007F4C  B4D8               	btfsc	status,2,c
   439  007F4E  D7B0               	goto	l57
   440  007F50  0A01               	xorlw	1	; case 3
   441  007F52  B4D8               	btfsc	status,2,c
   442  007F54  D7B0               	goto	l58
   443  007F56  0A07               	xorlw	7	; case 4
   444  007F58  B4D8               	btfsc	status,2,c
   445  007F5A  D7B0               	goto	l59
   446  007F5C  0A01               	xorlw	1	; case 5
   447  007F5E  B4D8               	btfsc	status,2,c
   448  007F60  D79E               	goto	u430
   449  007F62  0A03               	xorlw	3	; case 6
   450  007F64  B4D8               	btfsc	status,2,c
   451  007F66  D7AD               	goto	l61
   452  007F68  0A01               	xorlw	1	; case 7
   453  007F6A  B4D8               	btfsc	status,2,c
   454  007F6C  D7AD               	goto	l62
   455  007F6E  0A0F               	xorlw	15	; case 8
   456  007F70  B4D8               	btfsc	status,2,c
   457  007F72  D7AD               	goto	l63
   458  007F74  0A01               	xorlw	1	; case 9
   459  007F76  B4D8               	btfsc	status,2,c
   460  007F78  D792               	goto	u430
   461  007F7A  0A03               	xorlw	3	; case 10
   462  007F7C  B4D8               	btfsc	status,2,c
   463  007F7E  D78F               	goto	u430
   464  007F80  0A01               	xorlw	1	; case 11
   465  007F82  B4D8               	btfsc	status,2,c
   466  007F84  D78C               	goto	u430
   467  007F86  0A07               	xorlw	7	; case 12
   468  007F88  B4D8               	btfsc	status,2,c
   469  007F8A  D7A4               	goto	l67
   470  007F8C  0A01               	xorlw	1	; case 13
   471  007F8E  B4D8               	btfsc	status,2,c
   472  007F90  D786               	goto	u430
   473  007F92  0A03               	xorlw	3	; case 14
   474  007F94  B4D8               	btfsc	status,2,c
   475  007F96  D7A1               	goto	l69
   476  007F98  0A01               	xorlw	1	; case 15
   477  007F9A  B4D8               	btfsc	status,2,c
   478  007F9C  D7A1               	goto	l70
   479  007F9E  0A1F               	xorlw	31	; case 16
   480  007FA0  B4D8               	btfsc	status,2,c
   481  007FA2  D7A9               	goto	l71
   482  007FA4  0A01               	xorlw	1	; case 17
   483  007FA6  B4D8               	btfsc	status,2,c
   484  007FA8  D7A9               	goto	l72
   485  007FAA  0A03               	xorlw	3	; case 18
   486  007FAC  B4D8               	btfsc	status,2,c
   487  007FAE  D777               	goto	u430
   488  007FB0  0A01               	xorlw	1	; case 19
   489  007FB2  B4D8               	btfsc	status,2,c
   490  007FB4  D7A6               	goto	l74
   491  007FB6  0A07               	xorlw	7	; case 20
   492  007FB8  B4D8               	btfsc	status,2,c
   493  007FBA  D771               	goto	u430
   494  007FBC  0A01               	xorlw	1	; case 21
   495  007FBE  B4D8               	btfsc	status,2,c
   496  007FC0  D76E               	goto	u430
   497  007FC2  0A03               	xorlw	3	; case 22
   498  007FC4  B4D8               	btfsc	status,2,c
   499  007FC6  D76B               	goto	u430
   500  007FC8  0A01               	xorlw	1	; case 23
   501  007FCA  B4D8               	btfsc	status,2,c
   502  007FCC  D79D               	goto	l78
   503  007FCE  0A0F               	xorlw	15	; case 24
   504  007FD0  B4D8               	btfsc	status,2,c
   505  007FD2  D79D               	goto	l79
   506  007FD4  0A01               	xorlw	1	; case 25
   507  007FD6  B4D8               	btfsc	status,2,c
   508  007FD8  D79D               	goto	l80
   509  007FDA  0A03               	xorlw	3	; case 26
   510  007FDC  B4D8               	btfsc	status,2,c
   511  007FDE  D75F               	goto	u430
   512  007FE0  0A01               	xorlw	1	; case 27
   513  007FE2  B4D8               	btfsc	status,2,c
   514  007FE4  D79A               	goto	l82
   515  007FE6  0A07               	xorlw	7	; case 28
   516  007FE8  B4D8               	btfsc	status,2,c
   517  007FEA  D79A               	goto	l83
   518  007FEC  0A01               	xorlw	1	; case 29
   519  007FEE  B4D8               	btfsc	status,2,c
   520  007FF0  D79A               	goto	l84
   521  007FF2  0A03               	xorlw	3	; case 30
   522  007FF4  B4D8               	btfsc	status,2,c
   523  007FF6  D79A               	goto	l85
   524  007FF8  0A01               	xorlw	1	; case 31
   525  007FFA  B4D8               	btfsc	status,2,c
   526  007FFC  D799               	goto	l86
   527  007FFE  D79B               	goto	l87
   528  008000                     __end_of_main:
   529                           	opt stack 0
   530                           tblptru	equ	0xFF8
   531                           status	equ	0xFD8
   532                           
   533 ;; *************** function _straight *****************
   534 ;; Defined at:
   535 ;;		line 57 in file "sample.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  2   40[None  ] int 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   549 ;;      Params:         0       0       0       0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0       0       0       0       0
   552 ;;      Totals:         0       0       0       0       0       0       0       0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    2
   556 ;; This function calls:
   557 ;;		_wait00
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text1
   564  007A06                     __ptext1:
   565                           	opt stack 0
   566  007A06                     _straight:
   567                           	opt stack 28
   568                           
   569                           ;sample.c: 58: PORTC=0x03;
   570                           
   571                           ;incstack = 0
   572  007A06  0E03               	movlw	3
   573  007A08  6E82               	movwf	3970,c	;volatile
   574                           
   575                           ;sample.c: 59: wait00(10);
   576  007A0A  0E00               	movlw	0
   577  007A0C  6E1B               	movwf	wait00@k,c
   578  007A0E  0E00               	movlw	0
   579  007A10  6E1C               	movwf	wait00@k+1,c
   580  007A12  0E20               	movlw	32
   581  007A14  6E1D               	movwf	wait00@k+2,c
   582  007A16  0E41               	movlw	65
   583  007A18  6E1E               	movwf	wait00@k+3,c
   584  007A1A  ECCA  F03D         	call	_wait00	;wreg free
   585                           
   586                           ;sample.c: 60: PORTC=0x00;
   587  007A1E  0E00               	movlw	0
   588  007A20  6E82               	movwf	3970,c	;volatile
   589                           
   590                           ;sample.c: 61: wait00(20);
   591  007A22  0E00               	movlw	0
   592  007A24  6E1B               	movwf	wait00@k,c
   593  007A26  0E00               	movlw	0
   594  007A28  6E1C               	movwf	wait00@k+1,c
   595  007A2A  0EA0               	movlw	160
   596  007A2C  6E1D               	movwf	wait00@k+2,c
   597  007A2E  0E41               	movlw	65
   598  007A30  6E1E               	movwf	wait00@k+3,c
   599  007A32  ECCA  F03D         	call	_wait00	;wreg free
   600  007A36  0012               	return		;funcret
   601  007A38                     __end_of_straight:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           status	equ	0xFD8
   605                           
   606 ;; *************** function _small_right_down *****************
   607 ;; Defined at:
   608 ;;		line 30 in file "sample.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  2   31[None  ] int 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         0       0       0       0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    2
   629 ;; This function calls:
   630 ;;		_wait00
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text2
   637  007B4A                     __ptext2:
   638                           	opt stack 0
   639  007B4A                     _small_right_down:
   640                           	opt stack 28
   641                           
   642                           ;sample.c: 31: PORTC=0x03;
   643                           
   644                           ;incstack = 0
   645  007B4A  0E03               	movlw	3
   646  007B4C  6E82               	movwf	3970,c	;volatile
   647                           
   648                           ;sample.c: 32: wait00(0.3);
   649  007B4E  0E9A               	movlw	154
   650  007B50  6E1B               	movwf	wait00@k,c
   651  007B52  0E99               	movlw	153
   652  007B54  6E1C               	movwf	wait00@k+1,c
   653  007B56  0E99               	movlw	153
   654  007B58  6E1D               	movwf	wait00@k+2,c
   655  007B5A  0E3E               	movlw	62
   656  007B5C  6E1E               	movwf	wait00@k+3,c
   657  007B5E  ECCA  F03D         	call	_wait00	;wreg free
   658                           
   659                           ;sample.c: 33: PORTC=0x01;
   660  007B62  0E01               	movlw	1
   661  007B64  6E82               	movwf	3970,c	;volatile
   662                           
   663                           ;sample.c: 34: wait00(8);
   664  007B66  0E00               	movlw	0
   665  007B68  6E1B               	movwf	wait00@k,c
   666  007B6A  0E00               	movlw	0
   667  007B6C  6E1C               	movwf	wait00@k+1,c
   668  007B6E  0E00               	movlw	0
   669  007B70  6E1D               	movwf	wait00@k+2,c
   670  007B72  0E41               	movlw	65
   671  007B74  6E1E               	movwf	wait00@k+3,c
   672  007B76  ECCA  F03D         	call	_wait00	;wreg free
   673                           
   674                           ;sample.c: 35: PORTC=0x00;
   675  007B7A  0E00               	movlw	0
   676  007B7C  6E82               	movwf	3970,c	;volatile
   677                           
   678                           ;sample.c: 36: wait00(20);
   679  007B7E  0E00               	movlw	0
   680  007B80  6E1B               	movwf	wait00@k,c
   681  007B82  0E00               	movlw	0
   682  007B84  6E1C               	movwf	wait00@k+1,c
   683  007B86  0EA0               	movlw	160
   684  007B88  6E1D               	movwf	wait00@k+2,c
   685  007B8A  0E41               	movlw	65
   686  007B8C  6E1E               	movwf	wait00@k+3,c
   687  007B8E  ECCA  F03D         	call	_wait00	;wreg free
   688  007B92  0012               	return		;funcret
   689  007B94                     __end_of_small_right_down:
   690                           	opt stack 0
   691                           tblptru	equ	0xFF8
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _small_left_down *****************
   695 ;; Defined at:
   696 ;;		line 48 in file "sample.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2   37[None  ] int 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         0       0       0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0
   713 ;;      Totals:         0       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    2
   717 ;; This function calls:
   718 ;;		_wait00
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text3
   725  007B00                     __ptext3:
   726                           	opt stack 0
   727  007B00                     _small_left_down:
   728                           	opt stack 28
   729                           
   730                           ;sample.c: 49: PORTC=0x03;
   731                           
   732                           ;incstack = 0
   733  007B00  0E03               	movlw	3
   734  007B02  6E82               	movwf	3970,c	;volatile
   735                           
   736                           ;sample.c: 50: wait00(0.3);
   737  007B04  0E9A               	movlw	154
   738  007B06  6E1B               	movwf	wait00@k,c
   739  007B08  0E99               	movlw	153
   740  007B0A  6E1C               	movwf	wait00@k+1,c
   741  007B0C  0E99               	movlw	153
   742  007B0E  6E1D               	movwf	wait00@k+2,c
   743  007B10  0E3E               	movlw	62
   744  007B12  6E1E               	movwf	wait00@k+3,c
   745  007B14  ECCA  F03D         	call	_wait00	;wreg free
   746                           
   747                           ;sample.c: 51: PORTC=0x02;
   748  007B18  0E02               	movlw	2
   749  007B1A  6E82               	movwf	3970,c	;volatile
   750                           
   751                           ;sample.c: 52: wait00(8);
   752  007B1C  0E00               	movlw	0
   753  007B1E  6E1B               	movwf	wait00@k,c
   754  007B20  0E00               	movlw	0
   755  007B22  6E1C               	movwf	wait00@k+1,c
   756  007B24  0E00               	movlw	0
   757  007B26  6E1D               	movwf	wait00@k+2,c
   758  007B28  0E41               	movlw	65
   759  007B2A  6E1E               	movwf	wait00@k+3,c
   760  007B2C  ECCA  F03D         	call	_wait00	;wreg free
   761                           
   762                           ;sample.c: 53: PORTC=0x00;
   763  007B30  0E00               	movlw	0
   764  007B32  6E82               	movwf	3970,c	;volatile
   765                           
   766                           ;sample.c: 54: wait00(20);
   767  007B34  0E00               	movlw	0
   768  007B36  6E1B               	movwf	wait00@k,c
   769  007B38  0E00               	movlw	0
   770  007B3A  6E1C               	movwf	wait00@k+1,c
   771  007B3C  0EA0               	movlw	160
   772  007B3E  6E1D               	movwf	wait00@k+2,c
   773  007B40  0E41               	movlw	65
   774  007B42  6E1E               	movwf	wait00@k+3,c
   775  007B44  ECCA  F03D         	call	_wait00	;wreg free
   776  007B48  0012               	return		;funcret
   777  007B4A                     __end_of_small_left_down:
   778                           	opt stack 0
   779                           tblptru	equ	0xFF8
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _right_down *****************
   783 ;; Defined at:
   784 ;;		line 21 in file "sample.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  2   28[None  ] int 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    2
   805 ;; This function calls:
   806 ;;		_wait00
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  007AB6                     __ptext4:
   814                           	opt stack 0
   815  007AB6                     _right_down:
   816                           	opt stack 28
   817                           
   818                           ;sample.c: 22: PORTC=0x03;
   819                           
   820                           ;incstack = 0
   821  007AB6  0E03               	movlw	3
   822  007AB8  6E82               	movwf	3970,c	;volatile
   823                           
   824                           ;sample.c: 23: wait00(0.3);
   825  007ABA  0E9A               	movlw	154
   826  007ABC  6E1B               	movwf	wait00@k,c
   827  007ABE  0E99               	movlw	153
   828  007AC0  6E1C               	movwf	wait00@k+1,c
   829  007AC2  0E99               	movlw	153
   830  007AC4  6E1D               	movwf	wait00@k+2,c
   831  007AC6  0E3E               	movlw	62
   832  007AC8  6E1E               	movwf	wait00@k+3,c
   833  007ACA  ECCA  F03D         	call	_wait00	;wreg free
   834                           
   835                           ;sample.c: 24: PORTC=0x01;
   836  007ACE  0E01               	movlw	1
   837  007AD0  6E82               	movwf	3970,c	;volatile
   838                           
   839                           ;sample.c: 25: wait00(15);
   840  007AD2  0E00               	movlw	0
   841  007AD4  6E1B               	movwf	wait00@k,c
   842  007AD6  0E00               	movlw	0
   843  007AD8  6E1C               	movwf	wait00@k+1,c
   844  007ADA  0E70               	movlw	112
   845  007ADC  6E1D               	movwf	wait00@k+2,c
   846  007ADE  0E41               	movlw	65
   847  007AE0  6E1E               	movwf	wait00@k+3,c
   848  007AE2  ECCA  F03D         	call	_wait00	;wreg free
   849                           
   850                           ;sample.c: 26: PORTC=0x00;
   851  007AE6  0E00               	movlw	0
   852  007AE8  6E82               	movwf	3970,c	;volatile
   853                           
   854                           ;sample.c: 27: wait00(20);
   855  007AEA  0E00               	movlw	0
   856  007AEC  6E1B               	movwf	wait00@k,c
   857  007AEE  0E00               	movlw	0
   858  007AF0  6E1C               	movwf	wait00@k+1,c
   859  007AF2  0EA0               	movlw	160
   860  007AF4  6E1D               	movwf	wait00@k+2,c
   861  007AF6  0E41               	movlw	65
   862  007AF8  6E1E               	movwf	wait00@k+3,c
   863  007AFA  ECCA  F03D         	call	_wait00	;wreg free
   864  007AFE  0012               	return		;funcret
   865  007B00                     __end_of_right_down:
   866                           	opt stack 0
   867                           tblptru	equ	0xFF8
   868                           status	equ	0xFD8
   869                           
   870 ;; *************** function _left_down *****************
   871 ;; Defined at:
   872 ;;		line 39 in file "sample.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2   34[None  ] int 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   886 ;;      Params:         0       0       0       0       0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0
   889 ;;      Totals:         0       0       0       0       0       0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		_wait00
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text5
   901  007A6C                     __ptext5:
   902                           	opt stack 0
   903  007A6C                     _left_down:
   904                           	opt stack 28
   905                           
   906                           ;sample.c: 40: PORTC=0x03;
   907                           
   908                           ;incstack = 0
   909  007A6C  0E03               	movlw	3
   910  007A6E  6E82               	movwf	3970,c	;volatile
   911                           
   912                           ;sample.c: 41: wait00(0.3);
   913  007A70  0E9A               	movlw	154
   914  007A72  6E1B               	movwf	wait00@k,c
   915  007A74  0E99               	movlw	153
   916  007A76  6E1C               	movwf	wait00@k+1,c
   917  007A78  0E99               	movlw	153
   918  007A7A  6E1D               	movwf	wait00@k+2,c
   919  007A7C  0E3E               	movlw	62
   920  007A7E  6E1E               	movwf	wait00@k+3,c
   921  007A80  ECCA  F03D         	call	_wait00	;wreg free
   922                           
   923                           ;sample.c: 42: PORTC=0x02;
   924  007A84  0E02               	movlw	2
   925  007A86  6E82               	movwf	3970,c	;volatile
   926                           
   927                           ;sample.c: 43: wait00(15);
   928  007A88  0E00               	movlw	0
   929  007A8A  6E1B               	movwf	wait00@k,c
   930  007A8C  0E00               	movlw	0
   931  007A8E  6E1C               	movwf	wait00@k+1,c
   932  007A90  0E70               	movlw	112
   933  007A92  6E1D               	movwf	wait00@k+2,c
   934  007A94  0E41               	movlw	65
   935  007A96  6E1E               	movwf	wait00@k+3,c
   936  007A98  ECCA  F03D         	call	_wait00	;wreg free
   937                           
   938                           ;sample.c: 44: PORTC=0x00;
   939  007A9C  0E00               	movlw	0
   940  007A9E  6E82               	movwf	3970,c	;volatile
   941                           
   942                           ;sample.c: 45: wait00(20);
   943  007AA0  0E00               	movlw	0
   944  007AA2  6E1B               	movwf	wait00@k,c
   945  007AA4  0E00               	movlw	0
   946  007AA6  6E1C               	movwf	wait00@k+1,c
   947  007AA8  0EA0               	movlw	160
   948  007AAA  6E1D               	movwf	wait00@k+2,c
   949  007AAC  0E41               	movlw	65
   950  007AAE  6E1E               	movwf	wait00@k+3,c
   951  007AB0  ECCA  F03D         	call	_wait00	;wreg free
   952  007AB4  0012               	return		;funcret
   953  007AB6                     __end_of_left_down:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           status	equ	0xFD8
   957                           
   958 ;; *************** function _wait00 *****************
   959 ;; Defined at:
   960 ;;		line 11 in file "sample.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  k               4   26[COMRAM] float 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  i               2   32[COMRAM] short 
   965 ;;  j               2   30[COMRAM] short 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2   26[COMRAM] int 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         4       0       0       0       0       0       0       0       0
   976 ;;      Locals:         4       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         8       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        8 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		___flge
   984 ;;		___xxtofl
   985 ;; This function is called by:
   986 ;;		_right_down
   987 ;;		_small_right_down
   988 ;;		_left_down
   989 ;;		_small_left_down
   990 ;;		_straight
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text6
   995  007B94                     __ptext6:
   996                           	opt stack 0
   997  007B94                     _wait00:
   998                           	opt stack 28
   999                           
  1000                           ;sample.c: 13: short i;
  1001                           ;sample.c: 14: short j;
  1002                           ;sample.c: 15: for(j=0;j<k;j++){
  1003                           
  1004                           ;incstack = 0
  1005  007B94  0E00               	movlw	0
  1006  007B96  6E20               	movwf	wait00@j+1,c
  1007  007B98  0E00               	movlw	0
  1008  007B9A  6E1F               	movwf	wait00@j,c
  1009  007B9C  D011               	goto	l21
  1010  007B9E                     
  1011                           ;sample.c: 16: for(i=0;i<3000;i++){
  1012  007B9E  0E00               	movlw	0
  1013  007BA0  6E22               	movwf	wait00@i+1,c
  1014  007BA2  0E00               	movlw	0
  1015  007BA4  6E21               	movwf	wait00@i,c
  1016  007BA6                     l988:
  1017  007BA6  BE22               	btfsc	wait00@i+1,7,c
  1018  007BA8  D006               	goto	l23
  1019  007BAA  0EB8               	movlw	184
  1020  007BAC  5C21               	subwf	wait00@i,w,c
  1021  007BAE  0E0B               	movlw	11
  1022  007BB0  5822               	subwfb	wait00@i+1,w,c
  1023  007BB2  B0D8               	btfsc	status,0,c
  1024  007BB4  D003               	goto	u410
  1025  007BB6                     l23:
  1026  007BB6  4A21               	infsnz	wait00@i,f,c
  1027  007BB8  2A22               	incf	wait00@i+1,f,c
  1028  007BBA  D7F5               	goto	l988
  1029  007BBC                     u410:
  1030  007BBC  4A1F               	infsnz	wait00@j,f,c
  1031  007BBE  2A20               	incf	wait00@j+1,f,c
  1032  007BC0                     l21:
  1033  007BC0  C01F  F001         	movff	wait00@j,___xxtofl@val
  1034  007BC4  C020  F002         	movff	wait00@j+1,___xxtofl@val+1
  1035  007BC8  0E00               	movlw	0
  1036  007BCA  BE02               	btfsc	___xxtofl@val+1,7,c
  1037  007BCC  0EFF               	movlw	-1
  1038  007BCE  6E03               	movwf	___xxtofl@val+2,c
  1039  007BD0  6E04               	movwf	___xxtofl@val+3,c
  1040  007BD2  0E01               	movlw	1
  1041  007BD4  EC91  F03E         	call	___xxtofl
  1042  007BD8  C001  F00F         	movff	?___xxtofl,___flge@ff1
  1043  007BDC  C002  F010         	movff	?___xxtofl+1,___flge@ff1+1
  1044  007BE0  C003  F011         	movff	?___xxtofl+2,___flge@ff1+2
  1045  007BE4  C004  F012         	movff	?___xxtofl+3,___flge@ff1+3
  1046  007BE8  C01B  F013         	movff	wait00@k,___flge@ff2
  1047  007BEC  C01C  F014         	movff	wait00@k+1,___flge@ff2+1
  1048  007BF0  C01D  F015         	movff	wait00@k+2,___flge@ff2+2
  1049  007BF4  C01E  F016         	movff	wait00@k+3,___flge@ff2+3
  1050  007BF8  EC01  F03E         	call	___flge	;wreg free
  1051  007BFC  B0D8               	btfsc	status,0,c
  1052  007BFE  0012               	return	
  1053  007C00  D7CE               	goto	l22
  1054  007C02                     __end_of_wait00:
  1055                           	opt stack 0
  1056                           tblptru	equ	0xFF8
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function ___xxtofl *****************
  1060 ;; Defined at:
  1061 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  sign            1    wreg     unsigned char 
  1064 ;;  val             4    0[COMRAM] long 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  sign            1    8[COMRAM] unsigned char 
  1067 ;;  arg             4   10[COMRAM] unsigned long 
  1068 ;;  exp             1    9[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  4    0[COMRAM] unsigned char 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         4       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1081 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:       14 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_wait00
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text7
  1092  007D22                     __ptext7:
  1093                           	opt stack 0
  1094  007D22                     ___xxtofl:
  1095                           	opt stack 28
  1096                           
  1097                           ;incstack = 0
  1098                           ;___xxtofl@sign stored from wreg
  1099  007D22  6E09               	movwf	___xxtofl@sign,c
  1100  007D24  5009               	movf	___xxtofl@sign,w,c
  1101  007D26  A4D8               	btfss	status,2,c
  1102  007D28  AE04               	btfss	___xxtofl@val+3,7,c
  1103  007D2A  D01A               	goto	l638
  1104  007D2C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1105  007D30  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1106  007D34  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1107  007D38  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1108  007D3C  1E05               	comf	??___xxtofl,f,c
  1109  007D3E  1E06               	comf	??___xxtofl+1,f,c
  1110  007D40  1E07               	comf	??___xxtofl+2,f,c
  1111  007D42  1E08               	comf	??___xxtofl+3,f,c
  1112  007D44  2A05               	incf	??___xxtofl,f,c
  1113  007D46  0E00               	movlw	0
  1114  007D48  2206               	addwfc	??___xxtofl+1,f,c
  1115  007D4A  2207               	addwfc	??___xxtofl+2,f,c
  1116  007D4C  2208               	addwfc	??___xxtofl+3,f,c
  1117  007D4E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1118  007D52  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1119  007D56  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1120  007D5A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1121  007D5E  D008               	goto	l639
  1122  007D60                     l638:
  1123  007D60  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1124  007D64  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1125  007D68  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1126  007D6C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1127  007D70                     l639:
  1128  007D70  5001               	movf	___xxtofl@val,w,c
  1129  007D72  1002               	iorwf	___xxtofl@val+1,w,c
  1130  007D74  1003               	iorwf	___xxtofl@val+2,w,c
  1131  007D76  1004               	iorwf	___xxtofl@val+3,w,c
  1132  007D78  A4D8               	btfss	status,2,c
  1133  007D7A  D009               	goto	l640
  1134  007D7C  0E00               	movlw	0
  1135  007D7E  6E01               	movwf	?___xxtofl,c
  1136  007D80  0E00               	movlw	0
  1137  007D82  6E02               	movwf	?___xxtofl+1,c
  1138  007D84  0E00               	movlw	0
  1139  007D86  6E03               	movwf	?___xxtofl+2,c
  1140  007D88  0E00               	movlw	0
  1141  007D8A  6E04               	movwf	?___xxtofl+3,c
  1142  007D8C  0012               	return	
  1143  007D8E                     l640:
  1144  007D8E  0E96               	movlw	150
  1145  007D90  6E0A               	movwf	___xxtofl@exp,c
  1146  007D92  D006               	goto	l642
  1147  007D94  2A0A               	incf	___xxtofl@exp,f,c
  1148  007D96  90D8               	bcf	status,0,c
  1149  007D98  320E               	rrcf	___xxtofl@arg+3,f,c
  1150  007D9A  320D               	rrcf	___xxtofl@arg+2,f,c
  1151  007D9C  320C               	rrcf	___xxtofl@arg+1,f,c
  1152  007D9E  320B               	rrcf	___xxtofl@arg,f,c
  1153  007DA0                     l642:
  1154  007DA0  0E00               	movlw	0
  1155  007DA2  140B               	andwf	___xxtofl@arg,w,c
  1156  007DA4  6E05               	movwf	??___xxtofl& (0+255),c
  1157  007DA6  0E00               	movlw	0
  1158  007DA8  140C               	andwf	___xxtofl@arg+1,w,c
  1159  007DAA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1160  007DAC  0E00               	movlw	0
  1161  007DAE  140D               	andwf	___xxtofl@arg+2,w,c
  1162  007DB0  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1163  007DB2  0EFE               	movlw	254
  1164  007DB4  140E               	andwf	___xxtofl@arg+3,w,c
  1165  007DB6  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1166  007DB8  5005               	movf	??___xxtofl,w,c
  1167  007DBA  1006               	iorwf	??___xxtofl+1,w,c
  1168  007DBC  1007               	iorwf	??___xxtofl+2,w,c
  1169  007DBE  1008               	iorwf	??___xxtofl+3,w,c
  1170  007DC0  B4D8               	btfsc	status,2,c
  1171  007DC2  D00D               	goto	l645
  1172  007DC4  D7E7               	goto	l643
  1173  007DC6  2A0A               	incf	___xxtofl@exp,f,c
  1174  007DC8  0E01               	movlw	1
  1175  007DCA  260B               	addwf	___xxtofl@arg,f,c
  1176  007DCC  0E00               	movlw	0
  1177  007DCE  220C               	addwfc	___xxtofl@arg+1,f,c
  1178  007DD0  220D               	addwfc	___xxtofl@arg+2,f,c
  1179  007DD2  220E               	addwfc	___xxtofl@arg+3,f,c
  1180  007DD4  90D8               	bcf	status,0,c
  1181  007DD6  320E               	rrcf	___xxtofl@arg+3,f,c
  1182  007DD8  320D               	rrcf	___xxtofl@arg+2,f,c
  1183  007DDA  320C               	rrcf	___xxtofl@arg+1,f,c
  1184  007DDC  320B               	rrcf	___xxtofl@arg,f,c
  1185  007DDE                     l645:
  1186  007DDE  0E00               	movlw	0
  1187  007DE0  140B               	andwf	___xxtofl@arg,w,c
  1188  007DE2  6E05               	movwf	??___xxtofl& (0+255),c
  1189  007DE4  0E00               	movlw	0
  1190  007DE6  140C               	andwf	___xxtofl@arg+1,w,c
  1191  007DE8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1192  007DEA  0E00               	movlw	0
  1193  007DEC  140D               	andwf	___xxtofl@arg+2,w,c
  1194  007DEE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1195  007DF0  0EFF               	movlw	255
  1196  007DF2  140E               	andwf	___xxtofl@arg+3,w,c
  1197  007DF4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1198  007DF6  5005               	movf	??___xxtofl,w,c
  1199  007DF8  1006               	iorwf	??___xxtofl+1,w,c
  1200  007DFA  1007               	iorwf	??___xxtofl+2,w,c
  1201  007DFC  1008               	iorwf	??___xxtofl+3,w,c
  1202  007DFE  B4D8               	btfsc	status,2,c
  1203  007E00  D007               	goto	l648
  1204  007E02  D7E1               	goto	l646
  1205  007E04  060A               	decf	___xxtofl@exp,f,c
  1206  007E06  90D8               	bcf	status,0,c
  1207  007E08  360B               	rlcf	___xxtofl@arg,f,c
  1208  007E0A  360C               	rlcf	___xxtofl@arg+1,f,c
  1209  007E0C  360D               	rlcf	___xxtofl@arg+2,f,c
  1210  007E0E  360E               	rlcf	___xxtofl@arg+3,f,c
  1211  007E10                     l648:
  1212  007E10  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1213  007E12  D003               	goto	u360
  1214  007E14  0E02               	movlw	2
  1215  007E16  600A               	cpfslt	___xxtofl@exp,c
  1216  007E18  D7F5               	goto	l649
  1217  007E1A                     u360:
  1218  007E1A  B00A               	btfsc	___xxtofl@exp,0,c
  1219  007E1C  D008               	goto	l653
  1220  007E1E  0EFF               	movlw	255
  1221  007E20  160B               	andwf	___xxtofl@arg,f,c
  1222  007E22  0EFF               	movlw	255
  1223  007E24  160C               	andwf	___xxtofl@arg+1,f,c
  1224  007E26  0E7F               	movlw	127
  1225  007E28  160D               	andwf	___xxtofl@arg+2,f,c
  1226  007E2A  0EFF               	movlw	255
  1227  007E2C  160E               	andwf	___xxtofl@arg+3,f,c
  1228  007E2E                     l653:
  1229  007E2E  90D8               	bcf	status,0,c
  1230  007E30  320A               	rrcf	___xxtofl@exp,f,c
  1231  007E32  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1232  007E36  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1233  007E38  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1234  007E3A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1235  007E3C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1236  007E40  6A07               	clrf	??___xxtofl+2,c
  1237  007E42  6A06               	clrf	??___xxtofl+1,c
  1238  007E44  6A05               	clrf	??___xxtofl,c
  1239  007E46  5005               	movf	??___xxtofl,w,c
  1240  007E48  120B               	iorwf	___xxtofl@arg,f,c
  1241  007E4A  5006               	movf	??___xxtofl+1,w,c
  1242  007E4C  120C               	iorwf	___xxtofl@arg+1,f,c
  1243  007E4E  5007               	movf	??___xxtofl+2,w,c
  1244  007E50  120D               	iorwf	___xxtofl@arg+2,f,c
  1245  007E52  5008               	movf	??___xxtofl+3,w,c
  1246  007E54  120E               	iorwf	___xxtofl@arg+3,f,c
  1247  007E56  5009               	movf	___xxtofl@sign,w,c
  1248  007E58  A4D8               	btfss	status,2,c
  1249  007E5A  AE04               	btfss	___xxtofl@val+3,7,c
  1250  007E5C  D001               	goto	l654
  1251  007E5E  8E0E               	bsf	___xxtofl@arg+3,7,c
  1252  007E60                     l654:
  1253  007E60  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1254  007E64  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1255  007E68  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1256  007E6C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1257  007E70  0012               	return	
  1258  007E72                     __end_of___xxtofl:
  1259                           	opt stack 0
  1260                           tblptru	equ	0xFF8
  1261                           status	equ	0xFD8
  1262                           
  1263 ;; *************** function ___flge *****************
  1264 ;; Defined at:
  1265 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  ff1             4   14[COMRAM] unsigned char 
  1268 ;;  ff2             4   18[COMRAM] unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1280 ;;      Params:         8       0       0       0       0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1282 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1283 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1284 ;;Total ram usage:       12 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_wait00
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text8
  1294  007C02                     __ptext8:
  1295                           	opt stack 0
  1296  007C02                     ___flge:
  1297                           	opt stack 28
  1298                           
  1299                           ;incstack = 0
  1300  007C02  0E00               	movlw	0
  1301  007C04  140F               	andwf	___flge@ff1,w,c
  1302  007C06  6E17               	movwf	??___flge& (0+255),c
  1303  007C08  0E00               	movlw	0
  1304  007C0A  1410               	andwf	___flge@ff1+1,w,c
  1305  007C0C  6E18               	movwf	(??___flge+1)& (0+255),c
  1306  007C0E  0E80               	movlw	128
  1307  007C10  1411               	andwf	___flge@ff1+2,w,c
  1308  007C12  6E19               	movwf	(??___flge+2)& (0+255),c
  1309  007C14  0E7F               	movlw	127
  1310  007C16  1412               	andwf	___flge@ff1+3,w,c
  1311  007C18  6E1A               	movwf	(??___flge+3)& (0+255),c
  1312  007C1A  5017               	movf	??___flge,w,c
  1313  007C1C  1018               	iorwf	??___flge+1,w,c
  1314  007C1E  1019               	iorwf	??___flge+2,w,c
  1315  007C20  101A               	iorwf	??___flge+3,w,c
  1316  007C22  A4D8               	btfss	status,2,c
  1317  007C24  D008               	goto	l290
  1318  007C26  0E00               	movlw	0
  1319  007C28  6E0F               	movwf	___flge@ff1,c
  1320  007C2A  0E00               	movlw	0
  1321  007C2C  6E10               	movwf	___flge@ff1+1,c
  1322  007C2E  0E00               	movlw	0
  1323  007C30  6E11               	movwf	___flge@ff1+2,c
  1324  007C32  0E00               	movlw	0
  1325  007C34  6E12               	movwf	___flge@ff1+3,c
  1326  007C36                     l290:
  1327  007C36  0E00               	movlw	0
  1328  007C38  1413               	andwf	___flge@ff2,w,c
  1329  007C3A  6E17               	movwf	??___flge& (0+255),c
  1330  007C3C  0E00               	movlw	0
  1331  007C3E  1414               	andwf	___flge@ff2+1,w,c
  1332  007C40  6E18               	movwf	(??___flge+1)& (0+255),c
  1333  007C42  0E80               	movlw	128
  1334  007C44  1415               	andwf	___flge@ff2+2,w,c
  1335  007C46  6E19               	movwf	(??___flge+2)& (0+255),c
  1336  007C48  0E7F               	movlw	127
  1337  007C4A  1416               	andwf	___flge@ff2+3,w,c
  1338  007C4C  6E1A               	movwf	(??___flge+3)& (0+255),c
  1339  007C4E  5017               	movf	??___flge,w,c
  1340  007C50  1018               	iorwf	??___flge+1,w,c
  1341  007C52  1019               	iorwf	??___flge+2,w,c
  1342  007C54  101A               	iorwf	??___flge+3,w,c
  1343  007C56  A4D8               	btfss	status,2,c
  1344  007C58  D008               	goto	l291
  1345  007C5A  0E00               	movlw	0
  1346  007C5C  6E13               	movwf	___flge@ff2,c
  1347  007C5E  0E00               	movlw	0
  1348  007C60  6E14               	movwf	___flge@ff2+1,c
  1349  007C62  0E00               	movlw	0
  1350  007C64  6E15               	movwf	___flge@ff2+2,c
  1351  007C66  0E00               	movlw	0
  1352  007C68  6E16               	movwf	___flge@ff2+3,c
  1353  007C6A                     l291:
  1354  007C6A  AE12               	btfss	___flge@ff1+3,7,c
  1355  007C6C  D01D               	goto	l292
  1356  007C6E  C00F  F017         	movff	___flge@ff1,??___flge
  1357  007C72  C010  F018         	movff	___flge@ff1+1,??___flge+1
  1358  007C76  C011  F019         	movff	___flge@ff1+2,??___flge+2
  1359  007C7A  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  1360  007C7E  1E17               	comf	??___flge,f,c
  1361  007C80  1E18               	comf	??___flge+1,f,c
  1362  007C82  1E19               	comf	??___flge+2,f,c
  1363  007C84  1E1A               	comf	??___flge+3,f,c
  1364  007C86  2A17               	incf	??___flge,f,c
  1365  007C88  0E00               	movlw	0
  1366  007C8A  2218               	addwfc	??___flge+1,f,c
  1367  007C8C  2219               	addwfc	??___flge+2,f,c
  1368  007C8E  221A               	addwfc	??___flge+3,f,c
  1369  007C90  0E00               	movlw	0
  1370  007C92  2417               	addwf	??___flge,w,c
  1371  007C94  6E0F               	movwf	___flge@ff1,c
  1372  007C96  0E00               	movlw	0
  1373  007C98  2018               	addwfc	??___flge+1,w,c
  1374  007C9A  6E10               	movwf	___flge@ff1+1,c
  1375  007C9C  0E00               	movlw	0
  1376  007C9E  2019               	addwfc	??___flge+2,w,c
  1377  007CA0  6E11               	movwf	___flge@ff1+2,c
  1378  007CA2  0E80               	movlw	128
  1379  007CA4  201A               	addwfc	??___flge+3,w,c
  1380  007CA6  6E12               	movwf	___flge@ff1+3,c
  1381  007CA8                     l292:
  1382  007CA8  AE16               	btfss	___flge@ff2+3,7,c
  1383  007CAA  D01D               	goto	l293
  1384  007CAC  C013  F017         	movff	___flge@ff2,??___flge
  1385  007CB0  C014  F018         	movff	___flge@ff2+1,??___flge+1
  1386  007CB4  C015  F019         	movff	___flge@ff2+2,??___flge+2
  1387  007CB8  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  1388  007CBC  1E17               	comf	??___flge,f,c
  1389  007CBE  1E18               	comf	??___flge+1,f,c
  1390  007CC0  1E19               	comf	??___flge+2,f,c
  1391  007CC2  1E1A               	comf	??___flge+3,f,c
  1392  007CC4  2A17               	incf	??___flge,f,c
  1393  007CC6  0E00               	movlw	0
  1394  007CC8  2218               	addwfc	??___flge+1,f,c
  1395  007CCA  2219               	addwfc	??___flge+2,f,c
  1396  007CCC  221A               	addwfc	??___flge+3,f,c
  1397  007CCE  0E00               	movlw	0
  1398  007CD0  2417               	addwf	??___flge,w,c
  1399  007CD2  6E13               	movwf	___flge@ff2,c
  1400  007CD4  0E00               	movlw	0
  1401  007CD6  2018               	addwfc	??___flge+1,w,c
  1402  007CD8  6E14               	movwf	___flge@ff2+1,c
  1403  007CDA  0E00               	movlw	0
  1404  007CDC  2019               	addwfc	??___flge+2,w,c
  1405  007CDE  6E15               	movwf	___flge@ff2+2,c
  1406  007CE0  0E80               	movlw	128
  1407  007CE2  201A               	addwfc	??___flge+3,w,c
  1408  007CE4  6E16               	movwf	___flge@ff2+3,c
  1409  007CE6                     l293:
  1410  007CE6  0E00               	movlw	0
  1411  007CE8  1A0F               	xorwf	___flge@ff1,f,c
  1412  007CEA  0E00               	movlw	0
  1413  007CEC  1A10               	xorwf	___flge@ff1+1,f,c
  1414  007CEE  0E00               	movlw	0
  1415  007CF0  1A11               	xorwf	___flge@ff1+2,f,c
  1416  007CF2  0E80               	movlw	128
  1417  007CF4  1A12               	xorwf	___flge@ff1+3,f,c
  1418  007CF6  0E00               	movlw	0
  1419  007CF8  1A13               	xorwf	___flge@ff2,f,c
  1420  007CFA  0E00               	movlw	0
  1421  007CFC  1A14               	xorwf	___flge@ff2+1,f,c
  1422  007CFE  0E00               	movlw	0
  1423  007D00  1A15               	xorwf	___flge@ff2+2,f,c
  1424  007D02  0E80               	movlw	128
  1425  007D04  1A16               	xorwf	___flge@ff2+3,f,c
  1426  007D06  5013               	movf	___flge@ff2,w,c
  1427  007D08  5C0F               	subwf	___flge@ff1,w,c
  1428  007D0A  5014               	movf	___flge@ff2+1,w,c
  1429  007D0C  5810               	subwfb	___flge@ff1+1,w,c
  1430  007D0E  5015               	movf	___flge@ff2+2,w,c
  1431  007D10  5811               	subwfb	___flge@ff1+2,w,c
  1432  007D12  5016               	movf	___flge@ff2+3,w,c
  1433  007D14  5812               	subwfb	___flge@ff1+3,w,c
  1434  007D16  B0D8               	btfsc	status,0,c
  1435  007D18  D002               	goto	l916
  1436  007D1A  90D8               	bcf	status,0,c
  1437  007D1C  0012               	return	
  1438  007D1E                     l916:
  1439  007D1E  80D8               	bsf	status,0,c
  1440  007D20  0012               	return	
  1441  007D22                     __end_of___flge:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _led_sens *****************
  1447 ;; Defined at:
  1448 ;;		line 64 in file "sample.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2   43[None  ] int 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text9
  1476  007A38                     __ptext9:
  1477                           	opt stack 0
  1478  007A38                     _led_sens:
  1479                           	opt stack 30
  1480                           
  1481                           ;sample.c: 65: PORTAbits.RA0 = PORTBbits.RB0;
  1482                           
  1483                           ;incstack = 0
  1484  007A38  A081               	btfss	3969,0,c	;volatile
  1485  007A3A  D002               	bra	u195
  1486  007A3C  8080               	bsf	3968,0,c	;volatile
  1487  007A3E  D001               	bra	u197
  1488  007A40                     u195:
  1489  007A40  9080               	bcf	3968,0,c	;volatile
  1490  007A42                     u197:
  1491                           
  1492                           ;sample.c: 66: PORTAbits.RA1 = PORTBbits.RB1;
  1493  007A42  A281               	btfss	3969,1,c	;volatile
  1494  007A44  D002               	bra	u205
  1495  007A46  8280               	bsf	3968,1,c	;volatile
  1496  007A48  D001               	bra	u207
  1497  007A4A                     u205:
  1498  007A4A  9280               	bcf	3968,1,c	;volatile
  1499  007A4C                     u207:
  1500                           
  1501                           ;sample.c: 67: PORTAbits.RA2 = PORTBbits.RB2;
  1502  007A4C  A481               	btfss	3969,2,c	;volatile
  1503  007A4E  D002               	bra	u215
  1504  007A50  8480               	bsf	3968,2,c	;volatile
  1505  007A52  D001               	bra	u217
  1506  007A54                     u215:
  1507  007A54  9480               	bcf	3968,2,c	;volatile
  1508  007A56                     u217:
  1509                           
  1510                           ;sample.c: 68: PORTAbits.RA3 = PORTBbits.RB3;
  1511  007A56  A681               	btfss	3969,3,c	;volatile
  1512  007A58  D002               	bra	u225
  1513  007A5A  8680               	bsf	3968,3,c	;volatile
  1514  007A5C  D001               	bra	u227
  1515  007A5E                     u225:
  1516  007A5E  9680               	bcf	3968,3,c	;volatile
  1517  007A60                     u227:
  1518                           
  1519                           ;sample.c: 69: PORTAbits.RA4 = PORTBbits.RB4;
  1520  007A60  A881               	btfss	3969,4,c	;volatile
  1521  007A62  D002               	bra	u235
  1522  007A64  8880               	bsf	3968,4,c	;volatile
  1523  007A66  D001               	bra	u237
  1524  007A68                     u235:
  1525  007A68  9880               	bcf	3968,4,c	;volatile
  1526  007A6A                     u237:
  1527  007A6A  0012               	return		;funcret
  1528  007A6C                     __end_of_led_sens:
  1529                           	opt stack 0
  1530  0000                     tblptru	equ	0xFF8
  1531                           status	equ	0xFD8
  1532                           tblptru	equ	0xFF8
  1533                           status	equ	0xFD8
  1534                           
  1535                           	psect	rparam
  1536  0000                     tblptru	equ	0xFF8
  1537                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _straight->_wait00
    _small_right_down->_wait00
    _small_left_down->_wait00
    _right_down->_wait00
    _left_down->_wait00
    _wait00->___flge
    ___flge->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9444
                                             34 COMRAM     4     4      0
                           _led_sens
                          _left_down
                         _right_down
                    _small_left_down
                   _small_right_down
                           _straight
 ---------------------------------------------------------------------------------
 (1) _straight                                             0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_right_down                                     0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _small_left_down                                      0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _right_down                                           0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (1) _left_down                                            0     0      0    1888
                             _wait00
 ---------------------------------------------------------------------------------
 (2) _wait00                                               8     4      4    1888
                                             26 COMRAM     8     4      4
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             14 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _led_sens                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_sens
   _left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_left_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _small_right_down
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl
   _straight
     _wait00
       ___flge
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     26      26       1       40.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 01 14:57:57 2018

                       l21 7BC0                         l22 7B9E                         l23 7BB6  
                       l50 7E96                         l53 7F3C                         l61 7EC2  
                       l70 7EE0                         l62 7EC8                         l54 7EA4  
                       l71 7EF6                         l63 7ECE                         l80 7F14  
                       l72 7EFC                         l56 7EAA                         l57 7EB0  
                       l49 7E9A                         l82 7F1A                         l74 7F02  
                       l58 7EB6                         l83 7F20                         l67 7ED4  
                       l59 7EBC                         l84 7F26                         l85 7F2C  
                       l69 7EDA                         l86 7F30                         l78 7F08  
                       l87 7F36                         l79 7F0E                        l290 7C36  
                      l291 7C6A                        l292 7CA8                        l293 7CE6  
                      l640 7D8E                        l642 7DA0                        l643 7D94  
                      l653 7E2E                        l645 7DDE                        l654 7E60  
                      l646 7DC6                        l638 7D60                        l639 7D70  
                      l648 7E10                        l649 7E04                        l916 7D1E  
                      l988 7BA6                        u205 7A4A                        u215 7A54  
                      u207 7A4C                        u225 7A5E                        u217 7A56  
                      u410 7BBC                        u235 7A68                        u227 7A60  
                      u237 7A6A                        u430 7E9E                        u360 7E1A  
                      u195 7A40                        u197 7A42                       _main 7E72  
                     start 2000               ___param_bank 000000                      ?_main 0001  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
__size_of_small_right_down 004A            _small_left_down 7B00                      status 000FD8  
          __initialization 79FC               __end_of_main 8000                     ??_main 0023  
            __activetblptr 000002                     _ADCON1 000FC1           __end_of___xxtofl 7E72  
                   ___flge 7C02           __end_of_led_sens 7A6C                     _wait00 7B94  
                   tblptru 000FF8    __end_of_small_left_down 7B4A           __end_of_straight 7A38  
               ___flge@ff1 000F                 ___flge@ff2 0013               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 __accesstop 0060  
  __end_of__initialization 79FC             main@background 0023              ___rparam_used 000001  
           __pcstackCOMRAM 0001           _small_right_down 7B4A         __size_of_left_down 004A  
                  ?___flge 000F                    ?_wait00 001B                  ?___xxtofl 0001  
         ?_small_left_down 0001                  ?_led_sens 0001                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0120                  ?_straight 0001  
                  __pcinit 79FC                    __ramtop 0800            __size_of_wait00 006E  
        __end_of_left_down 7AB6                    __ptext0 7E72                    __ptext1 7A06  
                  __ptext2 7B4A                    __ptext3 7B00                    __ptext4 7AB6  
                  __ptext5 7A6C                    __ptext6 7B94                    __ptext7 7D22  
                  __ptext8 7C02                    __ptext9 7A38                 ??___xxtofl 0005  
     end_of_initialization 79FC                 ??_led_sens 0001              __Lmediumconst 0000  
                  wait00@i 0021                    wait00@j 001F                    wait00@k 001B  
               _right_down 7AB6                 ??_straight 0023                  _PORTAbits 000F80  
                _PORTBbits 000F81              ___xxtofl@sign 0009                 main@status 0025  
 __end_of_small_right_down 7B94             __end_of___flge 7D22             __end_of_wait00 7C02  
      start_initialization 79FC                ?_right_down 0001                   ??___flge 0017  
                 ??_wait00 001F          __size_of___xxtofl 0150          __size_of_led_sens 0034  
        __size_of_straight 0032                  _left_down 7A6C        __size_of_right_down 004A  
 __size_of_small_left_down 004A                 ?_left_down 0001                   __Hrparam 0000  
                 __Lrparam 0000          ?_small_right_down 0001         ??_small_right_down 0023  
                 ___xxtofl 7D22                   _led_sens 7A38              __size_of_main 018E  
             ??_right_down 0023          ??_small_left_down 0023                   _straight 7A06  
              ??_left_down 0023         __end_of_right_down 7B00  
